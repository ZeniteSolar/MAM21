ARM GAS  /tmp/cc4iZfnV.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.MX_GPIO_Init,"ax",%progbits
  20              		.align	1
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  25              	MX_GPIO_Init:
  26              	.LFB339:
  27              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c **** 	******************************************************************************
   4:Core/Src/main.c **** 	* @file           : main.c
   5:Core/Src/main.c **** 	* @brief          : Main program body
   6:Core/Src/main.c **** 	******************************************************************************
   7:Core/Src/main.c **** 	* @attention
   8:Core/Src/main.c **** 	*
   9:Core/Src/main.c **** 	* <h2><center>&copy; Copyright (c) 2022 STMicroelectronics.
  10:Core/Src/main.c **** 	* All rights reserved.</center></h2>
  11:Core/Src/main.c **** 	*
  12:Core/Src/main.c **** 	* This software component is licensed by ST under BSD 3-Clause license,
  13:Core/Src/main.c **** 	* the "License"; You may not use this file except in compliance with the
  14:Core/Src/main.c **** 	* License. You may obtain a copy of the License at:
  15:Core/Src/main.c **** 	*                        opensource.org/licenses/BSD-3-Clause
  16:Core/Src/main.c **** 	*
  17:Core/Src/main.c **** 	******************************************************************************
  18:Core/Src/main.c **** 	*/
  19:Core/Src/main.c **** /* USER CODE END Header */
  20:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/main.c **** #include "main.h"
  22:Core/Src/main.c **** 
  23:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  24:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  25:Core/Src/main.c **** 
  26:Core/Src/main.c **** /* USER CODE END Includes */
  27:Core/Src/main.c **** 
  28:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  29:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  30:Core/Src/main.c **** 
  31:Core/Src/main.c **** /* USER CODE END PTD */
ARM GAS  /tmp/cc4iZfnV.s 			page 2


  32:Core/Src/main.c **** 
  33:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  34:Core/Src/main.c **** /* USER CODE BEGIN PD */
  35:Core/Src/main.c **** /* USER CODE END PD */
  36:Core/Src/main.c **** 
  37:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  38:Core/Src/main.c **** /* USER CODE BEGIN PM */
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* USER CODE END PM */
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  43:Core/Src/main.c **** ADC_HandleTypeDef hadc1;
  44:Core/Src/main.c **** ADC_HandleTypeDef hadc2;
  45:Core/Src/main.c **** 
  46:Core/Src/main.c **** FDCAN_HandleTypeDef hfdcan1;
  47:Core/Src/main.c **** 
  48:Core/Src/main.c **** TIM_HandleTypeDef htim1;
  49:Core/Src/main.c **** TIM_HandleTypeDef htim2;
  50:Core/Src/main.c **** TIM_HandleTypeDef htim16;
  51:Core/Src/main.c **** TIM_HandleTypeDef htim17;
  52:Core/Src/main.c **** 
  53:Core/Src/main.c **** UART_HandleTypeDef huart1;
  54:Core/Src/main.c **** 
  55:Core/Src/main.c **** /* USER CODE BEGIN PV */
  56:Core/Src/main.c **** uint8_t batata;
  57:Core/Src/main.c **** uint8_t ubKeyNumber = 0x0;
  58:Core/Src/main.c **** FDCAN_RxHeaderTypeDef RxHeader;
  59:Core/Src/main.c **** uint8_t RxData[8];
  60:Core/Src/main.c **** FDCAN_TxHeaderTypeDef TxHeader;
  61:Core/Src/main.c **** uint8_t TxData[8];
  62:Core/Src/main.c **** /* USER CODE END PV */
  63:Core/Src/main.c **** 
  64:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  65:Core/Src/main.c **** void SystemClock_Config(void);
  66:Core/Src/main.c **** static void MX_GPIO_Init(void);
  67:Core/Src/main.c **** static void MX_ADC1_Init(void);
  68:Core/Src/main.c **** static void MX_ADC2_Init(void);
  69:Core/Src/main.c **** static void MX_FDCAN1_Init(void);
  70:Core/Src/main.c **** static void MX_TIM1_Init(void);
  71:Core/Src/main.c **** static void MX_USART1_UART_Init(void);
  72:Core/Src/main.c **** static void MX_TIM2_Init(void);
  73:Core/Src/main.c **** static void MX_TIM16_Init(void);
  74:Core/Src/main.c **** static void MX_TIM17_Init(void);
  75:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  76:Core/Src/main.c **** static void FDCAN_Config(void);
  77:Core/Src/main.c **** /* USER CODE END PFP */
  78:Core/Src/main.c **** 
  79:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  80:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  81:Core/Src/main.c **** 
  82:Core/Src/main.c **** /* USER CODE END 0 */
  83:Core/Src/main.c **** 
  84:Core/Src/main.c **** /**
  85:Core/Src/main.c ****   * @brief  The application entry point.
  86:Core/Src/main.c ****   * @retval int
  87:Core/Src/main.c ****   */
  88:Core/Src/main.c **** int main(void)
ARM GAS  /tmp/cc4iZfnV.s 			page 3


  89:Core/Src/main.c **** {
  90:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  91:Core/Src/main.c **** 
  92:Core/Src/main.c ****   /* USER CODE END 1 */
  93:Core/Src/main.c **** 
  94:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  95:Core/Src/main.c **** 
  96:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  97:Core/Src/main.c ****   HAL_Init();
  98:Core/Src/main.c **** 
  99:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 100:Core/Src/main.c **** 
 101:Core/Src/main.c ****   /* USER CODE END Init */
 102:Core/Src/main.c **** 
 103:Core/Src/main.c ****   /* Configure the system clock */
 104:Core/Src/main.c ****   SystemClock_Config();
 105:Core/Src/main.c **** 
 106:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 107:Core/Src/main.c **** 
 108:Core/Src/main.c ****   /* USER CODE END SysInit */
 109:Core/Src/main.c **** 
 110:Core/Src/main.c ****   /* Initialize all configured peripherals */
 111:Core/Src/main.c ****   MX_GPIO_Init();
 112:Core/Src/main.c ****   MX_ADC1_Init();
 113:Core/Src/main.c ****   MX_ADC2_Init();
 114:Core/Src/main.c ****   MX_FDCAN1_Init();
 115:Core/Src/main.c ****   MX_TIM1_Init();
 116:Core/Src/main.c ****   MX_USART1_UART_Init();
 117:Core/Src/main.c ****   MX_TIM2_Init();
 118:Core/Src/main.c ****   MX_TIM16_Init();
 119:Core/Src/main.c ****   MX_TIM17_Init();
 120:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 121:Core/Src/main.c ****   
 122:Core/Src/main.c ****   	/* Configure the FDCAN peripheral */
 123:Core/Src/main.c ****   	FDCAN_Config();
 124:Core/Src/main.c ****   /* USER CODE END 2 */
 125:Core/Src/main.c **** 
 126:Core/Src/main.c ****   /* Infinite loop */
 127:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 128:Core/Src/main.c **** 	while (1)
 129:Core/Src/main.c **** 	{
 130:Core/Src/main.c ****     /* USER CODE END WHILE */
 131:Core/Src/main.c **** 
 132:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 133:Core/Src/main.c **** 		/* Set the data to be transmitted */
 134:Core/Src/main.c ****         TxData[0] = ubKeyNumber;
 135:Core/Src/main.c ****         TxData[1] = 0xAD;
 136:Core/Src/main.c **** 		batata = HAL_FDCAN_GetRxFifoFillLevel(&hfdcan1, FDCAN_RX_FIFO0);
 137:Core/Src/main.c ****         /* Start the Transmission process */
 138:Core/Src/main.c ****         // if (HAL_FDCAN_AddMessageToTxFifoQ(&hfdcan1, &TxHeader, TxData) != HAL_OK)
 139:Core/Src/main.c ****         // {
 140:Core/Src/main.c ****         //   /* Transmission request Error */
 141:Core/Src/main.c ****         //   Error_Handler();
 142:Core/Src/main.c ****         // }
 143:Core/Src/main.c **** 		/* Retrieve Rx messages from RX FIFO0 */
 144:Core/Src/main.c **** 		if(HAL_FDCAN_GetRxFifoFillLevel(&hfdcan1, FDCAN_RX_FIFO0)){
 145:Core/Src/main.c **** 			if (HAL_FDCAN_GetRxMessage(&hfdcan1, FDCAN_RX_FIFO0, &RxHeader, RxData) != HAL_OK)
ARM GAS  /tmp/cc4iZfnV.s 			page 4


 146:Core/Src/main.c **** 			{
 147:Core/Src/main.c **** 			Error_Handler();
 148:Core/Src/main.c **** 			}
 149:Core/Src/main.c **** 		}
 150:Core/Src/main.c **** 		HAL_FDCAN_IRQHandler(&hfdcan1);
 151:Core/Src/main.c ****         HAL_Delay(10);
 152:Core/Src/main.c **** 		HAL_GPIO_TogglePin(GPIOC,GPIO_PIN_15);
 153:Core/Src/main.c **** 		HAL_Delay(100);
 154:Core/Src/main.c **** 	}
 155:Core/Src/main.c ****   /* USER CODE END 3 */
 156:Core/Src/main.c **** }
 157:Core/Src/main.c **** 
 158:Core/Src/main.c **** /**
 159:Core/Src/main.c ****   * @brief System Clock Configuration
 160:Core/Src/main.c ****   * @retval None
 161:Core/Src/main.c ****   */
 162:Core/Src/main.c **** void SystemClock_Config(void)
 163:Core/Src/main.c **** {
 164:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 165:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 166:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 167:Core/Src/main.c **** 
 168:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 169:Core/Src/main.c ****   */
 170:Core/Src/main.c ****   HAL_PWREx_ControlVoltageScaling(PWR_REGULATOR_VOLTAGE_SCALE1_BOOST);
 171:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 172:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 173:Core/Src/main.c ****   */
 174:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 175:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 176:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 177:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 178:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 179:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = RCC_PLLM_DIV1;
 180:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 20;
 181:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 182:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = RCC_PLLQ_DIV2;
 183:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
 184:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 185:Core/Src/main.c ****   {
 186:Core/Src/main.c ****     Error_Handler();
 187:Core/Src/main.c ****   }
 188:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 189:Core/Src/main.c ****   */
 190:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 191:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 192:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 193:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 194:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 195:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 196:Core/Src/main.c **** 
 197:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_4) != HAL_OK)
 198:Core/Src/main.c ****   {
 199:Core/Src/main.c ****     Error_Handler();
 200:Core/Src/main.c ****   }
 201:Core/Src/main.c ****   /** Initializes the peripherals clocks
 202:Core/Src/main.c ****   */
ARM GAS  /tmp/cc4iZfnV.s 			page 5


 203:Core/Src/main.c ****   PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_USART1|RCC_PERIPHCLK_ADC12
 204:Core/Src/main.c ****                               |RCC_PERIPHCLK_FDCAN;
 205:Core/Src/main.c ****   PeriphClkInit.Usart1ClockSelection = RCC_USART1CLKSOURCE_PCLK2;
 206:Core/Src/main.c ****   PeriphClkInit.FdcanClockSelection = RCC_FDCANCLKSOURCE_PCLK1;
 207:Core/Src/main.c ****   PeriphClkInit.Adc12ClockSelection = RCC_ADC12CLKSOURCE_SYSCLK;
 208:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 209:Core/Src/main.c ****   {
 210:Core/Src/main.c ****     Error_Handler();
 211:Core/Src/main.c ****   }
 212:Core/Src/main.c **** }
 213:Core/Src/main.c **** 
 214:Core/Src/main.c **** /**
 215:Core/Src/main.c ****   * @brief ADC1 Initialization Function
 216:Core/Src/main.c ****   * @param None
 217:Core/Src/main.c ****   * @retval None
 218:Core/Src/main.c ****   */
 219:Core/Src/main.c **** static void MX_ADC1_Init(void)
 220:Core/Src/main.c **** {
 221:Core/Src/main.c **** 
 222:Core/Src/main.c ****   /* USER CODE BEGIN ADC1_Init 0 */
 223:Core/Src/main.c **** 
 224:Core/Src/main.c ****   /* USER CODE END ADC1_Init 0 */
 225:Core/Src/main.c **** 
 226:Core/Src/main.c ****   ADC_MultiModeTypeDef multimode = {0};
 227:Core/Src/main.c ****   ADC_ChannelConfTypeDef sConfig = {0};
 228:Core/Src/main.c **** 
 229:Core/Src/main.c ****   /* USER CODE BEGIN ADC1_Init 1 */
 230:Core/Src/main.c **** 
 231:Core/Src/main.c ****   /* USER CODE END ADC1_Init 1 */
 232:Core/Src/main.c ****   /** Common config
 233:Core/Src/main.c ****   */
 234:Core/Src/main.c ****   hadc1.Instance = ADC1;
 235:Core/Src/main.c ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 236:Core/Src/main.c ****   hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 237:Core/Src/main.c ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 238:Core/Src/main.c ****   hadc1.Init.GainCompensation = 0;
 239:Core/Src/main.c ****   hadc1.Init.ScanConvMode = ADC_SCAN_DISABLE;
 240:Core/Src/main.c ****   hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 241:Core/Src/main.c ****   hadc1.Init.LowPowerAutoWait = DISABLE;
 242:Core/Src/main.c ****   hadc1.Init.ContinuousConvMode = DISABLE;
 243:Core/Src/main.c ****   hadc1.Init.NbrOfConversion = 1;
 244:Core/Src/main.c ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 245:Core/Src/main.c ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 246:Core/Src/main.c ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 247:Core/Src/main.c ****   hadc1.Init.DMAContinuousRequests = DISABLE;
 248:Core/Src/main.c ****   hadc1.Init.Overrun = ADC_OVR_DATA_PRESERVED;
 249:Core/Src/main.c ****   hadc1.Init.OversamplingMode = DISABLE;
 250:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 251:Core/Src/main.c ****   {
 252:Core/Src/main.c ****     Error_Handler();
 253:Core/Src/main.c ****   }
 254:Core/Src/main.c ****   /** Configure the ADC multi-mode
 255:Core/Src/main.c ****   */
 256:Core/Src/main.c ****   multimode.Mode = ADC_MODE_INDEPENDENT;
 257:Core/Src/main.c ****   if (HAL_ADCEx_MultiModeConfigChannel(&hadc1, &multimode) != HAL_OK)
 258:Core/Src/main.c ****   {
 259:Core/Src/main.c ****     Error_Handler();
ARM GAS  /tmp/cc4iZfnV.s 			page 6


 260:Core/Src/main.c ****   }
 261:Core/Src/main.c ****   /** Configure Regular Channel
 262:Core/Src/main.c ****   */
 263:Core/Src/main.c ****   sConfig.Channel = ADC_CHANNEL_1;
 264:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 265:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_2CYCLES_5;
 266:Core/Src/main.c ****   sConfig.SingleDiff = ADC_DIFFERENTIAL_ENDED;
 267:Core/Src/main.c ****   sConfig.OffsetNumber = ADC_OFFSET_NONE;
 268:Core/Src/main.c ****   sConfig.Offset = 0;
 269:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 270:Core/Src/main.c ****   {
 271:Core/Src/main.c ****     Error_Handler();
 272:Core/Src/main.c ****   }
 273:Core/Src/main.c ****   /* USER CODE BEGIN ADC1_Init 2 */
 274:Core/Src/main.c **** 
 275:Core/Src/main.c ****   /* USER CODE END ADC1_Init 2 */
 276:Core/Src/main.c **** 
 277:Core/Src/main.c **** }
 278:Core/Src/main.c **** 
 279:Core/Src/main.c **** /**
 280:Core/Src/main.c ****   * @brief ADC2 Initialization Function
 281:Core/Src/main.c ****   * @param None
 282:Core/Src/main.c ****   * @retval None
 283:Core/Src/main.c ****   */
 284:Core/Src/main.c **** static void MX_ADC2_Init(void)
 285:Core/Src/main.c **** {
 286:Core/Src/main.c **** 
 287:Core/Src/main.c ****   /* USER CODE BEGIN ADC2_Init 0 */
 288:Core/Src/main.c **** 
 289:Core/Src/main.c ****   /* USER CODE END ADC2_Init 0 */
 290:Core/Src/main.c **** 
 291:Core/Src/main.c ****   ADC_ChannelConfTypeDef sConfig = {0};
 292:Core/Src/main.c **** 
 293:Core/Src/main.c ****   /* USER CODE BEGIN ADC2_Init 1 */
 294:Core/Src/main.c **** 
 295:Core/Src/main.c ****   /* USER CODE END ADC2_Init 1 */
 296:Core/Src/main.c ****   /** Common config
 297:Core/Src/main.c ****   */
 298:Core/Src/main.c ****   hadc2.Instance = ADC2;
 299:Core/Src/main.c ****   hadc2.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 300:Core/Src/main.c ****   hadc2.Init.Resolution = ADC_RESOLUTION_12B;
 301:Core/Src/main.c ****   hadc2.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 302:Core/Src/main.c ****   hadc2.Init.GainCompensation = 0;
 303:Core/Src/main.c ****   hadc2.Init.ScanConvMode = ADC_SCAN_DISABLE;
 304:Core/Src/main.c ****   hadc2.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 305:Core/Src/main.c ****   hadc2.Init.LowPowerAutoWait = DISABLE;
 306:Core/Src/main.c ****   hadc2.Init.ContinuousConvMode = DISABLE;
 307:Core/Src/main.c ****   hadc2.Init.NbrOfConversion = 1;
 308:Core/Src/main.c ****   hadc2.Init.DiscontinuousConvMode = DISABLE;
 309:Core/Src/main.c ****   hadc2.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 310:Core/Src/main.c ****   hadc2.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 311:Core/Src/main.c ****   hadc2.Init.DMAContinuousRequests = DISABLE;
 312:Core/Src/main.c ****   hadc2.Init.Overrun = ADC_OVR_DATA_PRESERVED;
 313:Core/Src/main.c ****   hadc2.Init.OversamplingMode = DISABLE;
 314:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc2) != HAL_OK)
 315:Core/Src/main.c ****   {
 316:Core/Src/main.c ****     Error_Handler();
ARM GAS  /tmp/cc4iZfnV.s 			page 7


 317:Core/Src/main.c ****   }
 318:Core/Src/main.c ****   /** Configure Regular Channel
 319:Core/Src/main.c ****   */
 320:Core/Src/main.c ****   sConfig.Channel = ADC_CHANNEL_3;
 321:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 322:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_2CYCLES_5;
 323:Core/Src/main.c ****   sConfig.SingleDiff = ADC_DIFFERENTIAL_ENDED;
 324:Core/Src/main.c ****   sConfig.OffsetNumber = ADC_OFFSET_NONE;
 325:Core/Src/main.c ****   sConfig.Offset = 0;
 326:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc2, &sConfig) != HAL_OK)
 327:Core/Src/main.c ****   {
 328:Core/Src/main.c ****     Error_Handler();
 329:Core/Src/main.c ****   }
 330:Core/Src/main.c ****   /* USER CODE BEGIN ADC2_Init 2 */
 331:Core/Src/main.c **** 
 332:Core/Src/main.c ****   /* USER CODE END ADC2_Init 2 */
 333:Core/Src/main.c **** 
 334:Core/Src/main.c **** }
 335:Core/Src/main.c **** 
 336:Core/Src/main.c **** /**
 337:Core/Src/main.c ****   * @brief FDCAN1 Initialization Function
 338:Core/Src/main.c ****   * @param None
 339:Core/Src/main.c ****   * @retval None
 340:Core/Src/main.c ****   */
 341:Core/Src/main.c **** static void MX_FDCAN1_Init(void)
 342:Core/Src/main.c **** {
 343:Core/Src/main.c **** 
 344:Core/Src/main.c ****   /* USER CODE BEGIN FDCAN1_Init 0 */
 345:Core/Src/main.c **** 
 346:Core/Src/main.c ****   /* USER CODE END FDCAN1_Init 0 */
 347:Core/Src/main.c **** 
 348:Core/Src/main.c ****   /* USER CODE BEGIN FDCAN1_Init 1 */
 349:Core/Src/main.c **** 
 350:Core/Src/main.c ****   /* USER CODE END FDCAN1_Init 1 */
 351:Core/Src/main.c ****   hfdcan1.Instance = FDCAN1;
 352:Core/Src/main.c ****   hfdcan1.Init.ClockDivider = FDCAN_CLOCK_DIV1;
 353:Core/Src/main.c ****   hfdcan1.Init.FrameFormat = FDCAN_FRAME_CLASSIC;
 354:Core/Src/main.c ****   hfdcan1.Init.Mode = FDCAN_MODE_NORMAL;
 355:Core/Src/main.c ****   hfdcan1.Init.AutoRetransmission = ENABLE;
 356:Core/Src/main.c ****   hfdcan1.Init.TransmitPause = ENABLE;
 357:Core/Src/main.c ****   hfdcan1.Init.ProtocolException = DISABLE;
 358:Core/Src/main.c ****   hfdcan1.Init.NominalPrescaler = 20;
 359:Core/Src/main.c ****   hfdcan1.Init.NominalSyncJumpWidth = 16;
 360:Core/Src/main.c ****   hfdcan1.Init.NominalTimeSeg1 = 13;
 361:Core/Src/main.c ****   hfdcan1.Init.NominalTimeSeg2 = 2;
 362:Core/Src/main.c ****   hfdcan1.Init.DataPrescaler = 20;
 363:Core/Src/main.c ****   hfdcan1.Init.DataSyncJumpWidth = 16;
 364:Core/Src/main.c ****   hfdcan1.Init.DataTimeSeg1 = 13;
 365:Core/Src/main.c ****   hfdcan1.Init.DataTimeSeg2 = 2;
 366:Core/Src/main.c ****   hfdcan1.Init.StdFiltersNbr = 1;
 367:Core/Src/main.c ****   hfdcan1.Init.ExtFiltersNbr = 0;
 368:Core/Src/main.c ****   hfdcan1.Init.TxFifoQueueMode = FDCAN_TX_FIFO_OPERATION;
 369:Core/Src/main.c ****   if (HAL_FDCAN_Init(&hfdcan1) != HAL_OK)
 370:Core/Src/main.c ****   {
 371:Core/Src/main.c ****     Error_Handler();
 372:Core/Src/main.c ****   }
 373:Core/Src/main.c ****   /* USER CODE BEGIN FDCAN1_Init 2 */
ARM GAS  /tmp/cc4iZfnV.s 			page 8


 374:Core/Src/main.c **** 
 375:Core/Src/main.c ****   /* USER CODE END FDCAN1_Init 2 */
 376:Core/Src/main.c **** 
 377:Core/Src/main.c **** }
 378:Core/Src/main.c **** 
 379:Core/Src/main.c **** /**
 380:Core/Src/main.c ****   * @brief TIM1 Initialization Function
 381:Core/Src/main.c ****   * @param None
 382:Core/Src/main.c ****   * @retval None
 383:Core/Src/main.c ****   */
 384:Core/Src/main.c **** static void MX_TIM1_Init(void)
 385:Core/Src/main.c **** {
 386:Core/Src/main.c **** 
 387:Core/Src/main.c ****   /* USER CODE BEGIN TIM1_Init 0 */
 388:Core/Src/main.c **** 
 389:Core/Src/main.c ****   /* USER CODE END TIM1_Init 0 */
 390:Core/Src/main.c **** 
 391:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 392:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 393:Core/Src/main.c ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 394:Core/Src/main.c **** 
 395:Core/Src/main.c ****   /* USER CODE BEGIN TIM1_Init 1 */
 396:Core/Src/main.c **** 
 397:Core/Src/main.c ****   /* USER CODE END TIM1_Init 1 */
 398:Core/Src/main.c ****   htim1.Instance = TIM1;
 399:Core/Src/main.c ****   htim1.Init.Prescaler = 0;
 400:Core/Src/main.c ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 401:Core/Src/main.c ****   htim1.Init.Period = 65535;
 402:Core/Src/main.c ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 403:Core/Src/main.c ****   htim1.Init.RepetitionCounter = 0;
 404:Core/Src/main.c ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 405:Core/Src/main.c ****   if (HAL_TIM_OC_Init(&htim1) != HAL_OK)
 406:Core/Src/main.c ****   {
 407:Core/Src/main.c ****     Error_Handler();
 408:Core/Src/main.c ****   }
 409:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 410:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger2 = TIM_TRGO2_RESET;
 411:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 412:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 413:Core/Src/main.c ****   {
 414:Core/Src/main.c ****     Error_Handler();
 415:Core/Src/main.c ****   }
 416:Core/Src/main.c ****   sConfigOC.OCMode = TIM_OCMODE_TIMING;
 417:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 418:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 419:Core/Src/main.c ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 420:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 421:Core/Src/main.c ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 422:Core/Src/main.c ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 423:Core/Src/main.c ****   if (HAL_TIM_OC_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 424:Core/Src/main.c ****   {
 425:Core/Src/main.c ****     Error_Handler();
 426:Core/Src/main.c ****   }
 427:Core/Src/main.c ****   if (HAL_TIM_OC_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
 428:Core/Src/main.c ****   {
 429:Core/Src/main.c ****     Error_Handler();
 430:Core/Src/main.c ****   }
ARM GAS  /tmp/cc4iZfnV.s 			page 9


 431:Core/Src/main.c ****   sBreakDeadTimeConfig.OffStateRunMode = TIM_OSSR_DISABLE;
 432:Core/Src/main.c ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 433:Core/Src/main.c ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 434:Core/Src/main.c ****   sBreakDeadTimeConfig.DeadTime = 0;
 435:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 436:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 437:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakFilter = 0;
 438:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakAFMode = TIM_BREAK_AFMODE_INPUT;
 439:Core/Src/main.c ****   sBreakDeadTimeConfig.Break2State = TIM_BREAK2_DISABLE;
 440:Core/Src/main.c ****   sBreakDeadTimeConfig.Break2Polarity = TIM_BREAK2POLARITY_HIGH;
 441:Core/Src/main.c ****   sBreakDeadTimeConfig.Break2Filter = 0;
 442:Core/Src/main.c ****   sBreakDeadTimeConfig.Break2AFMode = TIM_BREAK_AFMODE_INPUT;
 443:Core/Src/main.c ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 444:Core/Src/main.c ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 445:Core/Src/main.c ****   {
 446:Core/Src/main.c ****     Error_Handler();
 447:Core/Src/main.c ****   }
 448:Core/Src/main.c ****   /* USER CODE BEGIN TIM1_Init 2 */
 449:Core/Src/main.c **** 
 450:Core/Src/main.c ****   /* USER CODE END TIM1_Init 2 */
 451:Core/Src/main.c ****   HAL_TIM_MspPostInit(&htim1);
 452:Core/Src/main.c **** 
 453:Core/Src/main.c **** }
 454:Core/Src/main.c **** 
 455:Core/Src/main.c **** /**
 456:Core/Src/main.c ****   * @brief TIM2 Initialization Function
 457:Core/Src/main.c ****   * @param None
 458:Core/Src/main.c ****   * @retval None
 459:Core/Src/main.c ****   */
 460:Core/Src/main.c **** static void MX_TIM2_Init(void)
 461:Core/Src/main.c **** {
 462:Core/Src/main.c **** 
 463:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 0 */
 464:Core/Src/main.c **** 
 465:Core/Src/main.c ****   /* USER CODE END TIM2_Init 0 */
 466:Core/Src/main.c **** 
 467:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 468:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 469:Core/Src/main.c **** 
 470:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 1 */
 471:Core/Src/main.c **** 
 472:Core/Src/main.c ****   /* USER CODE END TIM2_Init 1 */
 473:Core/Src/main.c ****   htim2.Instance = TIM2;
 474:Core/Src/main.c ****   htim2.Init.Prescaler = 0;
 475:Core/Src/main.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 476:Core/Src/main.c ****   htim2.Init.Period = 4.294967295E9;
 477:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 478:Core/Src/main.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 479:Core/Src/main.c ****   if (HAL_TIM_PWM_Init(&htim2) != HAL_OK)
 480:Core/Src/main.c ****   {
 481:Core/Src/main.c ****     Error_Handler();
 482:Core/Src/main.c ****   }
 483:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 484:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 485:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 486:Core/Src/main.c ****   {
 487:Core/Src/main.c ****     Error_Handler();
ARM GAS  /tmp/cc4iZfnV.s 			page 10


 488:Core/Src/main.c ****   }
 489:Core/Src/main.c ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
 490:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 491:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 492:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 493:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_4) != HAL_OK)
 494:Core/Src/main.c ****   {
 495:Core/Src/main.c ****     Error_Handler();
 496:Core/Src/main.c ****   }
 497:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 2 */
 498:Core/Src/main.c **** 
 499:Core/Src/main.c ****   /* USER CODE END TIM2_Init 2 */
 500:Core/Src/main.c ****   HAL_TIM_MspPostInit(&htim2);
 501:Core/Src/main.c **** 
 502:Core/Src/main.c **** }
 503:Core/Src/main.c **** 
 504:Core/Src/main.c **** /**
 505:Core/Src/main.c ****   * @brief TIM16 Initialization Function
 506:Core/Src/main.c ****   * @param None
 507:Core/Src/main.c ****   * @retval None
 508:Core/Src/main.c ****   */
 509:Core/Src/main.c **** static void MX_TIM16_Init(void)
 510:Core/Src/main.c **** {
 511:Core/Src/main.c **** 
 512:Core/Src/main.c ****   /* USER CODE BEGIN TIM16_Init 0 */
 513:Core/Src/main.c **** 
 514:Core/Src/main.c ****   /* USER CODE END TIM16_Init 0 */
 515:Core/Src/main.c **** 
 516:Core/Src/main.c ****   /* USER CODE BEGIN TIM16_Init 1 */
 517:Core/Src/main.c **** 
 518:Core/Src/main.c ****   /* USER CODE END TIM16_Init 1 */
 519:Core/Src/main.c ****   htim16.Instance = TIM16;
 520:Core/Src/main.c ****   htim16.Init.Prescaler = 0;
 521:Core/Src/main.c ****   htim16.Init.CounterMode = TIM_COUNTERMODE_UP;
 522:Core/Src/main.c ****   htim16.Init.Period = 65535;
 523:Core/Src/main.c ****   htim16.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 524:Core/Src/main.c ****   htim16.Init.RepetitionCounter = 0;
 525:Core/Src/main.c ****   htim16.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 526:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim16) != HAL_OK)
 527:Core/Src/main.c ****   {
 528:Core/Src/main.c ****     Error_Handler();
 529:Core/Src/main.c ****   }
 530:Core/Src/main.c ****   /* USER CODE BEGIN TIM16_Init 2 */
 531:Core/Src/main.c **** 
 532:Core/Src/main.c ****   /* USER CODE END TIM16_Init 2 */
 533:Core/Src/main.c **** 
 534:Core/Src/main.c **** }
 535:Core/Src/main.c **** 
 536:Core/Src/main.c **** /**
 537:Core/Src/main.c ****   * @brief TIM17 Initialization Function
 538:Core/Src/main.c ****   * @param None
 539:Core/Src/main.c ****   * @retval None
 540:Core/Src/main.c ****   */
 541:Core/Src/main.c **** static void MX_TIM17_Init(void)
 542:Core/Src/main.c **** {
 543:Core/Src/main.c **** 
 544:Core/Src/main.c ****   /* USER CODE BEGIN TIM17_Init 0 */
ARM GAS  /tmp/cc4iZfnV.s 			page 11


 545:Core/Src/main.c **** 
 546:Core/Src/main.c ****   /* USER CODE END TIM17_Init 0 */
 547:Core/Src/main.c **** 
 548:Core/Src/main.c ****   /* USER CODE BEGIN TIM17_Init 1 */
 549:Core/Src/main.c **** 
 550:Core/Src/main.c ****   /* USER CODE END TIM17_Init 1 */
 551:Core/Src/main.c ****   htim17.Instance = TIM17;
 552:Core/Src/main.c ****   htim17.Init.Prescaler = 0;
 553:Core/Src/main.c ****   htim17.Init.CounterMode = TIM_COUNTERMODE_UP;
 554:Core/Src/main.c ****   htim17.Init.Period = 65535;
 555:Core/Src/main.c ****   htim17.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 556:Core/Src/main.c ****   htim17.Init.RepetitionCounter = 0;
 557:Core/Src/main.c ****   htim17.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 558:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim17) != HAL_OK)
 559:Core/Src/main.c ****   {
 560:Core/Src/main.c ****     Error_Handler();
 561:Core/Src/main.c ****   }
 562:Core/Src/main.c ****   /* USER CODE BEGIN TIM17_Init 2 */
 563:Core/Src/main.c **** 
 564:Core/Src/main.c ****   /* USER CODE END TIM17_Init 2 */
 565:Core/Src/main.c **** 
 566:Core/Src/main.c **** }
 567:Core/Src/main.c **** 
 568:Core/Src/main.c **** /**
 569:Core/Src/main.c ****   * @brief USART1 Initialization Function
 570:Core/Src/main.c ****   * @param None
 571:Core/Src/main.c ****   * @retval None
 572:Core/Src/main.c ****   */
 573:Core/Src/main.c **** static void MX_USART1_UART_Init(void)
 574:Core/Src/main.c **** {
 575:Core/Src/main.c **** 
 576:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 0 */
 577:Core/Src/main.c **** 
 578:Core/Src/main.c ****   /* USER CODE END USART1_Init 0 */
 579:Core/Src/main.c **** 
 580:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 1 */
 581:Core/Src/main.c **** 
 582:Core/Src/main.c ****   /* USER CODE END USART1_Init 1 */
 583:Core/Src/main.c ****   huart1.Instance = USART1;
 584:Core/Src/main.c ****   huart1.Init.BaudRate = 115200;
 585:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 586:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 587:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 588:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 589:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 590:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 591:Core/Src/main.c ****   huart1.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 592:Core/Src/main.c ****   huart1.Init.ClockPrescaler = UART_PRESCALER_DIV1;
 593:Core/Src/main.c ****   huart1.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 594:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 595:Core/Src/main.c ****   {
 596:Core/Src/main.c ****     Error_Handler();
 597:Core/Src/main.c ****   }
 598:Core/Src/main.c ****   if (HAL_UARTEx_SetTxFifoThreshold(&huart1, UART_TXFIFO_THRESHOLD_1_8) != HAL_OK)
 599:Core/Src/main.c ****   {
 600:Core/Src/main.c ****     Error_Handler();
 601:Core/Src/main.c ****   }
ARM GAS  /tmp/cc4iZfnV.s 			page 12


 602:Core/Src/main.c ****   if (HAL_UARTEx_SetRxFifoThreshold(&huart1, UART_RXFIFO_THRESHOLD_1_8) != HAL_OK)
 603:Core/Src/main.c ****   {
 604:Core/Src/main.c ****     Error_Handler();
 605:Core/Src/main.c ****   }
 606:Core/Src/main.c ****   if (HAL_UARTEx_DisableFifoMode(&huart1) != HAL_OK)
 607:Core/Src/main.c ****   {
 608:Core/Src/main.c ****     Error_Handler();
 609:Core/Src/main.c ****   }
 610:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 2 */
 611:Core/Src/main.c **** 
 612:Core/Src/main.c ****   /* USER CODE END USART1_Init 2 */
 613:Core/Src/main.c **** 
 614:Core/Src/main.c **** }
 615:Core/Src/main.c **** 
 616:Core/Src/main.c **** /**
 617:Core/Src/main.c ****   * @brief GPIO Initialization Function
 618:Core/Src/main.c ****   * @param None
 619:Core/Src/main.c ****   * @retval None
 620:Core/Src/main.c ****   */
 621:Core/Src/main.c **** static void MX_GPIO_Init(void)
 622:Core/Src/main.c **** {
  28              		.loc 1 622 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 40
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 30B5     		push	{r4, r5, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 12
  35              		.cfi_offset 4, -12
  36              		.cfi_offset 5, -8
  37              		.cfi_offset 14, -4
  38 0002 8BB0     		sub	sp, sp, #44
  39              	.LCFI1:
  40              		.cfi_def_cfa_offset 56
 623:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  41              		.loc 1 623 3 view .LVU1
  42              		.loc 1 623 20 is_stmt 0 view .LVU2
  43 0004 0024     		movs	r4, #0
  44 0006 0594     		str	r4, [sp, #20]
  45 0008 0694     		str	r4, [sp, #24]
  46 000a 0794     		str	r4, [sp, #28]
  47 000c 0894     		str	r4, [sp, #32]
  48 000e 0994     		str	r4, [sp, #36]
 624:Core/Src/main.c **** 
 625:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 626:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  49              		.loc 1 626 3 is_stmt 1 view .LVU3
  50              	.LBB4:
  51              		.loc 1 626 3 view .LVU4
  52              		.loc 1 626 3 view .LVU5
  53 0010 284B     		ldr	r3, .L3
  54 0012 DA6C     		ldr	r2, [r3, #76]
  55 0014 42F00402 		orr	r2, r2, #4
  56 0018 DA64     		str	r2, [r3, #76]
  57              		.loc 1 626 3 view .LVU6
  58 001a DA6C     		ldr	r2, [r3, #76]
  59 001c 02F00402 		and	r2, r2, #4
ARM GAS  /tmp/cc4iZfnV.s 			page 13


  60 0020 0192     		str	r2, [sp, #4]
  61              		.loc 1 626 3 view .LVU7
  62 0022 019A     		ldr	r2, [sp, #4]
  63              	.LBE4:
  64              		.loc 1 626 3 view .LVU8
 627:Core/Src/main.c ****   __HAL_RCC_GPIOG_CLK_ENABLE();
  65              		.loc 1 627 3 view .LVU9
  66              	.LBB5:
  67              		.loc 1 627 3 view .LVU10
  68              		.loc 1 627 3 view .LVU11
  69 0024 DA6C     		ldr	r2, [r3, #76]
  70 0026 42F04002 		orr	r2, r2, #64
  71 002a DA64     		str	r2, [r3, #76]
  72              		.loc 1 627 3 view .LVU12
  73 002c DA6C     		ldr	r2, [r3, #76]
  74 002e 02F04002 		and	r2, r2, #64
  75 0032 0292     		str	r2, [sp, #8]
  76              		.loc 1 627 3 view .LVU13
  77 0034 029A     		ldr	r2, [sp, #8]
  78              	.LBE5:
  79              		.loc 1 627 3 view .LVU14
 628:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  80              		.loc 1 628 3 view .LVU15
  81              	.LBB6:
  82              		.loc 1 628 3 view .LVU16
  83              		.loc 1 628 3 view .LVU17
  84 0036 DA6C     		ldr	r2, [r3, #76]
  85 0038 42F00102 		orr	r2, r2, #1
  86 003c DA64     		str	r2, [r3, #76]
  87              		.loc 1 628 3 view .LVU18
  88 003e DA6C     		ldr	r2, [r3, #76]
  89 0040 02F00102 		and	r2, r2, #1
  90 0044 0392     		str	r2, [sp, #12]
  91              		.loc 1 628 3 view .LVU19
  92 0046 039A     		ldr	r2, [sp, #12]
  93              	.LBE6:
  94              		.loc 1 628 3 view .LVU20
 629:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  95              		.loc 1 629 3 view .LVU21
  96              	.LBB7:
  97              		.loc 1 629 3 view .LVU22
  98              		.loc 1 629 3 view .LVU23
  99 0048 DA6C     		ldr	r2, [r3, #76]
 100 004a 42F00202 		orr	r2, r2, #2
 101 004e DA64     		str	r2, [r3, #76]
 102              		.loc 1 629 3 view .LVU24
 103 0050 DB6C     		ldr	r3, [r3, #76]
 104 0052 03F00203 		and	r3, r3, #2
 105 0056 0493     		str	r3, [sp, #16]
 106              		.loc 1 629 3 view .LVU25
 107 0058 049B     		ldr	r3, [sp, #16]
 108              	.LBE7:
 109              		.loc 1 629 3 view .LVU26
 630:Core/Src/main.c **** 
 631:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 632:Core/Src/main.c ****   HAL_GPIO_WritePin(LED0_GPIO_Port, LED0_Pin, GPIO_PIN_SET);
 110              		.loc 1 632 3 view .LVU27
ARM GAS  /tmp/cc4iZfnV.s 			page 14


 111 005a 174D     		ldr	r5, .L3+4
 112 005c 0122     		movs	r2, #1
 113 005e 4FF48041 		mov	r1, #16384
 114 0062 2846     		mov	r0, r5
 115 0064 FFF7FEFF 		bl	HAL_GPIO_WritePin
 116              	.LVL0:
 633:Core/Src/main.c **** 
 634:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 635:Core/Src/main.c ****   HAL_GPIO_WritePin(LED1_GPIO_Port, LED1_Pin, GPIO_PIN_RESET);
 117              		.loc 1 635 3 view .LVU28
 118 0068 2246     		mov	r2, r4
 119 006a 4FF40041 		mov	r1, #32768
 120 006e 2846     		mov	r0, r5
 121 0070 FFF7FEFF 		bl	HAL_GPIO_WritePin
 122              	.LVL1:
 636:Core/Src/main.c **** 
 637:Core/Src/main.c ****   /*Configure GPIO pins : LED0_Pin LED1_Pin */
 638:Core/Src/main.c ****   GPIO_InitStruct.Pin = LED0_Pin|LED1_Pin;
 123              		.loc 1 638 3 view .LVU29
 124              		.loc 1 638 23 is_stmt 0 view .LVU30
 125 0074 4FF44043 		mov	r3, #49152
 126 0078 0593     		str	r3, [sp, #20]
 639:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 127              		.loc 1 639 3 is_stmt 1 view .LVU31
 128              		.loc 1 639 24 is_stmt 0 view .LVU32
 129 007a 0123     		movs	r3, #1
 130 007c 0693     		str	r3, [sp, #24]
 640:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 131              		.loc 1 640 3 is_stmt 1 view .LVU33
 132              		.loc 1 640 24 is_stmt 0 view .LVU34
 133 007e 0794     		str	r4, [sp, #28]
 641:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 134              		.loc 1 641 3 is_stmt 1 view .LVU35
 135              		.loc 1 641 25 is_stmt 0 view .LVU36
 136 0080 0894     		str	r4, [sp, #32]
 642:Core/Src/main.c ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 137              		.loc 1 642 3 is_stmt 1 view .LVU37
 138 0082 05A9     		add	r1, sp, #20
 139 0084 2846     		mov	r0, r5
 140 0086 FFF7FEFF 		bl	HAL_GPIO_Init
 141              	.LVL2:
 643:Core/Src/main.c **** 
 644:Core/Src/main.c ****   /*Configure GPIO pin : RESET_Pin */
 645:Core/Src/main.c ****   GPIO_InitStruct.Pin = RESET_Pin;
 142              		.loc 1 645 3 view .LVU38
 143              		.loc 1 645 23 is_stmt 0 view .LVU39
 144 008a 4FF48063 		mov	r3, #1024
 145 008e 0593     		str	r3, [sp, #20]
 646:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 146              		.loc 1 646 3 is_stmt 1 view .LVU40
 147              		.loc 1 646 24 is_stmt 0 view .LVU41
 148 0090 0694     		str	r4, [sp, #24]
 647:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 149              		.loc 1 647 3 is_stmt 1 view .LVU42
 150              		.loc 1 647 24 is_stmt 0 view .LVU43
 151 0092 0794     		str	r4, [sp, #28]
 648:Core/Src/main.c ****   HAL_GPIO_Init(RESET_GPIO_Port, &GPIO_InitStruct);
ARM GAS  /tmp/cc4iZfnV.s 			page 15


 152              		.loc 1 648 3 is_stmt 1 view .LVU44
 153 0094 05A9     		add	r1, sp, #20
 154 0096 0948     		ldr	r0, .L3+8
 155 0098 FFF7FEFF 		bl	HAL_GPIO_Init
 156              	.LVL3:
 649:Core/Src/main.c **** 
 650:Core/Src/main.c ****   /*Configure GPIO pin : BOOT0_Pin */
 651:Core/Src/main.c ****   GPIO_InitStruct.Pin = BOOT0_Pin;
 157              		.loc 1 651 3 view .LVU45
 158              		.loc 1 651 23 is_stmt 0 view .LVU46
 159 009c 4FF48073 		mov	r3, #256
 160 00a0 0593     		str	r3, [sp, #20]
 652:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 161              		.loc 1 652 3 is_stmt 1 view .LVU47
 162              		.loc 1 652 24 is_stmt 0 view .LVU48
 163 00a2 0694     		str	r4, [sp, #24]
 653:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 164              		.loc 1 653 3 is_stmt 1 view .LVU49
 165              		.loc 1 653 24 is_stmt 0 view .LVU50
 166 00a4 0794     		str	r4, [sp, #28]
 654:Core/Src/main.c ****   HAL_GPIO_Init(BOOT0_GPIO_Port, &GPIO_InitStruct);
 167              		.loc 1 654 3 is_stmt 1 view .LVU51
 168 00a6 05A9     		add	r1, sp, #20
 169 00a8 0548     		ldr	r0, .L3+12
 170 00aa FFF7FEFF 		bl	HAL_GPIO_Init
 171              	.LVL4:
 655:Core/Src/main.c **** 
 656:Core/Src/main.c **** }
 172              		.loc 1 656 1 is_stmt 0 view .LVU52
 173 00ae 0BB0     		add	sp, sp, #44
 174              	.LCFI2:
 175              		.cfi_def_cfa_offset 12
 176              		@ sp needed
 177 00b0 30BD     		pop	{r4, r5, pc}
 178              	.L4:
 179 00b2 00BF     		.align	2
 180              	.L3:
 181 00b4 00100240 		.word	1073876992
 182 00b8 00080048 		.word	1207961600
 183 00bc 00180048 		.word	1207965696
 184 00c0 00040048 		.word	1207960576
 185              		.cfi_endproc
 186              	.LFE339:
 188              		.section	.text.Error_Handler,"ax",%progbits
 189              		.align	1
 190              		.global	Error_Handler
 191              		.syntax unified
 192              		.thumb
 193              		.thumb_func
 195              	Error_Handler:
 196              	.LFB343:
 657:Core/Src/main.c **** 
 658:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 659:Core/Src/main.c **** static void FDCAN_Config(void)
 660:Core/Src/main.c **** {
 661:Core/Src/main.c **** 	FDCAN_FilterTypeDef sFilterConfig;
 662:Core/Src/main.c **** 
ARM GAS  /tmp/cc4iZfnV.s 			page 16


 663:Core/Src/main.c **** 	/* Configure Rx filter */
 664:Core/Src/main.c **** 	sFilterConfig.IdType = FDCAN_STANDARD_ID;
 665:Core/Src/main.c **** 	sFilterConfig.FilterIndex = 0;
 666:Core/Src/main.c **** 	sFilterConfig.FilterType = FDCAN_FILTER_MASK;
 667:Core/Src/main.c **** 	sFilterConfig.FilterConfig = FDCAN_FILTER_TO_RXFIFO0;
 668:Core/Src/main.c **** 	sFilterConfig.FilterID1 = 0x00;
 669:Core/Src/main.c **** 	sFilterConfig.FilterID2 = 0x00;
 670:Core/Src/main.c **** 	if (HAL_FDCAN_ConfigFilter(&hfdcan1, &sFilterConfig) != HAL_OK)
 671:Core/Src/main.c **** 	{
 672:Core/Src/main.c **** 		Error_Handler();
 673:Core/Src/main.c **** 	}
 674:Core/Src/main.c **** 
 675:Core/Src/main.c **** 	/* Configure global filter:
 676:Core/Src/main.c **** 		Filter all remote frames with STD and EXT ID
 677:Core/Src/main.c **** 		Reject non matching frames with STD ID and EXT ID */
 678:Core/Src/main.c **** 	if (HAL_FDCAN_ConfigGlobalFilter(&hfdcan1, FDCAN_REJECT, FDCAN_REJECT, FDCAN_FILTER_REMOTE, FDCAN_
 679:Core/Src/main.c **** 	{
 680:Core/Src/main.c **** 		Error_Handler();
 681:Core/Src/main.c **** 	}
 682:Core/Src/main.c **** 
 683:Core/Src/main.c **** 	/* Start the FDCAN module */
 684:Core/Src/main.c **** 	if (HAL_FDCAN_Start(&hfdcan1) != HAL_OK)
 685:Core/Src/main.c **** 	{
 686:Core/Src/main.c **** 		Error_Handler();
 687:Core/Src/main.c **** 	}
 688:Core/Src/main.c **** 
 689:Core/Src/main.c **** 	if (HAL_FDCAN_ActivateNotification(&hfdcan1, FDCAN_IT_RX_FIFO0_NEW_MESSAGE, 0) != HAL_OK)
 690:Core/Src/main.c **** 	{
 691:Core/Src/main.c **** 		Error_Handler();
 692:Core/Src/main.c **** 	}
 693:Core/Src/main.c **** 		if (HAL_FDCAN_ActivateNotification(&hfdcan1, FDCAN_IT_RX_FIFO1_NEW_MESSAGE, 0) != HAL_OK)
 694:Core/Src/main.c **** 	{
 695:Core/Src/main.c **** 		Error_Handler();
 696:Core/Src/main.c **** 	}
 697:Core/Src/main.c **** 
 698:Core/Src/main.c **** 	/* Prepare Tx Header */
 699:Core/Src/main.c **** 	TxHeader.Identifier = 0x321;
 700:Core/Src/main.c **** 	TxHeader.IdType = FDCAN_STANDARD_ID;
 701:Core/Src/main.c **** 	TxHeader.TxFrameType = FDCAN_DATA_FRAME;
 702:Core/Src/main.c **** 	TxHeader.DataLength = FDCAN_DLC_BYTES_2;
 703:Core/Src/main.c **** 	TxHeader.ErrorStateIndicator = FDCAN_ESI_ACTIVE;
 704:Core/Src/main.c **** 	TxHeader.BitRateSwitch = FDCAN_BRS_OFF;
 705:Core/Src/main.c **** 	TxHeader.FDFormat = FDCAN_CLASSIC_CAN;
 706:Core/Src/main.c **** 	TxHeader.TxEventFifoControl = FDCAN_NO_TX_EVENTS;
 707:Core/Src/main.c **** 	TxHeader.MessageMarker = 0;
 708:Core/Src/main.c **** }
 709:Core/Src/main.c **** 
 710:Core/Src/main.c **** void HAL_FDCAN_RxFifo0Callback(FDCAN_HandleTypeDef *hfdcan, uint32_t RxFifo0ITs)
 711:Core/Src/main.c **** {
 712:Core/Src/main.c ****   if((RxFifo0ITs & FDCAN_IT_RX_FIFO0_NEW_MESSAGE) != RESET)
 713:Core/Src/main.c ****   {
 714:Core/Src/main.c ****     /* Retrieve Rx messages from RX FIFO0 */
 715:Core/Src/main.c ****     if (HAL_FDCAN_GetRxMessage(hfdcan, FDCAN_RX_FIFO0, &RxHeader, RxData) != HAL_OK)
 716:Core/Src/main.c ****     {
 717:Core/Src/main.c ****     Error_Handler();
 718:Core/Src/main.c ****     }
 719:Core/Src/main.c **** 
ARM GAS  /tmp/cc4iZfnV.s 			page 17


 720:Core/Src/main.c **** 	HAL_GPIO_TogglePin(GPIOC, GPIO_PIN_14);
 721:Core/Src/main.c ****   }
 722:Core/Src/main.c **** }
 723:Core/Src/main.c **** void HAL_FDCAN_RxFifo1Callback(FDCAN_HandleTypeDef *hfdcan, uint32_t RxFifo1ITs)
 724:Core/Src/main.c **** {
 725:Core/Src/main.c ****   if((RxFifo1ITs & FDCAN_IT_RX_FIFO1_NEW_MESSAGE) != RESET)
 726:Core/Src/main.c ****   {
 727:Core/Src/main.c ****     /* Retrieve Rx messages from RX FIFO0 */
 728:Core/Src/main.c ****     if (HAL_FDCAN_GetRxMessage(hfdcan, FDCAN_RX_FIFO1, &RxHeader, RxData) != HAL_OK)
 729:Core/Src/main.c ****     {
 730:Core/Src/main.c ****     Error_Handler();
 731:Core/Src/main.c ****     }
 732:Core/Src/main.c **** 
 733:Core/Src/main.c **** 	HAL_GPIO_TogglePin(GPIOC, GPIO_PIN_14);
 734:Core/Src/main.c ****   }
 735:Core/Src/main.c **** }
 736:Core/Src/main.c **** 
 737:Core/Src/main.c **** /* USER CODE END 4 */
 738:Core/Src/main.c **** 
 739:Core/Src/main.c **** /**
 740:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 741:Core/Src/main.c ****   * @retval None
 742:Core/Src/main.c ****   */
 743:Core/Src/main.c **** void Error_Handler(void)
 744:Core/Src/main.c **** {
 197              		.loc 1 744 1 is_stmt 1 view -0
 198              		.cfi_startproc
 199              		@ Volatile: function does not return.
 200              		@ args = 0, pretend = 0, frame = 0
 201              		@ frame_needed = 0, uses_anonymous_args = 0
 202              		@ link register save eliminated.
 745:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 746:Core/Src/main.c **** 	/* User can add his own implementation to report the HAL error return state */
 747:Core/Src/main.c **** 	__disable_irq();
 203              		.loc 1 747 2 view .LVU54
 204              	.LBB8:
 205              	.LBI8:
 206              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.2.0
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     08. May 2019
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2019 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
ARM GAS  /tmp/cc4iZfnV.s 			page 18


  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
ARM GAS  /tmp/cc4iZfnV.s 			page 19


  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
ARM GAS  /tmp/cc4iZfnV.s 			page 20


 134:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 187:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 188:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 189:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/cc4iZfnV.s 			page 21


 191:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 192:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 193:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 194:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 195:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 198:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 200:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 203:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 204:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 205:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 206:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 207:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 207              		.loc 2 207 27 view .LVU55
 208              	.LBB9:
 208:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 209:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 209              		.loc 2 209 3 view .LVU56
 210              		.syntax unified
 211              	@ 209 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 212 0000 72B6     		cpsid i
 213              	@ 0 "" 2
 214              		.thumb
 215              		.syntax unified
 216              	.L6:
 217              	.LBE9:
 218              	.LBE8:
 748:Core/Src/main.c **** 	while (1)
 219              		.loc 1 748 2 discriminator 1 view .LVU57
 749:Core/Src/main.c **** 	{
 750:Core/Src/main.c **** 	}
 220              		.loc 1 750 2 discriminator 1 view .LVU58
 748:Core/Src/main.c **** 	while (1)
 221              		.loc 1 748 8 discriminator 1 view .LVU59
 222 0002 FEE7     		b	.L6
 223              		.cfi_endproc
 224              	.LFE343:
 226              		.section	.text.MX_ADC1_Init,"ax",%progbits
 227              		.align	1
 228              		.syntax unified
 229              		.thumb
 230              		.thumb_func
 232              	MX_ADC1_Init:
 233              	.LFB331:
 220:Core/Src/main.c **** 
 234              		.loc 1 220 1 view -0
 235              		.cfi_startproc
 236              		@ args = 0, pretend = 0, frame = 48
 237              		@ frame_needed = 0, uses_anonymous_args = 0
 238 0000 10B5     		push	{r4, lr}
 239              	.LCFI3:
 240              		.cfi_def_cfa_offset 8
 241              		.cfi_offset 4, -8
ARM GAS  /tmp/cc4iZfnV.s 			page 22


 242              		.cfi_offset 14, -4
 243 0002 8CB0     		sub	sp, sp, #48
 244              	.LCFI4:
 245              		.cfi_def_cfa_offset 56
 226:Core/Src/main.c ****   ADC_ChannelConfTypeDef sConfig = {0};
 246              		.loc 1 226 3 view .LVU61
 226:Core/Src/main.c ****   ADC_ChannelConfTypeDef sConfig = {0};
 247              		.loc 1 226 24 is_stmt 0 view .LVU62
 248 0004 0024     		movs	r4, #0
 249 0006 0994     		str	r4, [sp, #36]
 250 0008 0A94     		str	r4, [sp, #40]
 251 000a 0B94     		str	r4, [sp, #44]
 227:Core/Src/main.c **** 
 252              		.loc 1 227 3 is_stmt 1 view .LVU63
 227:Core/Src/main.c **** 
 253              		.loc 1 227 26 is_stmt 0 view .LVU64
 254 000c 2022     		movs	r2, #32
 255 000e 2146     		mov	r1, r4
 256 0010 01A8     		add	r0, sp, #4
 257 0012 FFF7FEFF 		bl	memset
 258              	.LVL5:
 234:Core/Src/main.c ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 259              		.loc 1 234 3 is_stmt 1 view .LVU65
 234:Core/Src/main.c ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 260              		.loc 1 234 18 is_stmt 0 view .LVU66
 261 0016 1E48     		ldr	r0, .L15
 262 0018 4FF0A043 		mov	r3, #1342177280
 263 001c 0360     		str	r3, [r0]
 235:Core/Src/main.c ****   hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 264              		.loc 1 235 3 is_stmt 1 view .LVU67
 235:Core/Src/main.c ****   hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 265              		.loc 1 235 29 is_stmt 0 view .LVU68
 266 001e 4FF44033 		mov	r3, #196608
 267 0022 4360     		str	r3, [r0, #4]
 236:Core/Src/main.c ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 268              		.loc 1 236 3 is_stmt 1 view .LVU69
 236:Core/Src/main.c ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 269              		.loc 1 236 25 is_stmt 0 view .LVU70
 270 0024 8460     		str	r4, [r0, #8]
 237:Core/Src/main.c ****   hadc1.Init.GainCompensation = 0;
 271              		.loc 1 237 3 is_stmt 1 view .LVU71
 237:Core/Src/main.c ****   hadc1.Init.GainCompensation = 0;
 272              		.loc 1 237 24 is_stmt 0 view .LVU72
 273 0026 C460     		str	r4, [r0, #12]
 238:Core/Src/main.c ****   hadc1.Init.ScanConvMode = ADC_SCAN_DISABLE;
 274              		.loc 1 238 3 is_stmt 1 view .LVU73
 238:Core/Src/main.c ****   hadc1.Init.ScanConvMode = ADC_SCAN_DISABLE;
 275              		.loc 1 238 31 is_stmt 0 view .LVU74
 276 0028 0461     		str	r4, [r0, #16]
 239:Core/Src/main.c ****   hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 277              		.loc 1 239 3 is_stmt 1 view .LVU75
 239:Core/Src/main.c ****   hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 278              		.loc 1 239 27 is_stmt 0 view .LVU76
 279 002a 4461     		str	r4, [r0, #20]
 240:Core/Src/main.c ****   hadc1.Init.LowPowerAutoWait = DISABLE;
 280              		.loc 1 240 3 is_stmt 1 view .LVU77
 240:Core/Src/main.c ****   hadc1.Init.LowPowerAutoWait = DISABLE;
ARM GAS  /tmp/cc4iZfnV.s 			page 23


 281              		.loc 1 240 27 is_stmt 0 view .LVU78
 282 002c 0423     		movs	r3, #4
 283 002e 8361     		str	r3, [r0, #24]
 241:Core/Src/main.c ****   hadc1.Init.ContinuousConvMode = DISABLE;
 284              		.loc 1 241 3 is_stmt 1 view .LVU79
 241:Core/Src/main.c ****   hadc1.Init.ContinuousConvMode = DISABLE;
 285              		.loc 1 241 31 is_stmt 0 view .LVU80
 286 0030 0477     		strb	r4, [r0, #28]
 242:Core/Src/main.c ****   hadc1.Init.NbrOfConversion = 1;
 287              		.loc 1 242 3 is_stmt 1 view .LVU81
 242:Core/Src/main.c ****   hadc1.Init.NbrOfConversion = 1;
 288              		.loc 1 242 33 is_stmt 0 view .LVU82
 289 0032 4477     		strb	r4, [r0, #29]
 243:Core/Src/main.c ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 290              		.loc 1 243 3 is_stmt 1 view .LVU83
 243:Core/Src/main.c ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 291              		.loc 1 243 30 is_stmt 0 view .LVU84
 292 0034 0123     		movs	r3, #1
 293 0036 0362     		str	r3, [r0, #32]
 244:Core/Src/main.c ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 294              		.loc 1 244 3 is_stmt 1 view .LVU85
 244:Core/Src/main.c ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 295              		.loc 1 244 36 is_stmt 0 view .LVU86
 296 0038 80F82440 		strb	r4, [r0, #36]
 245:Core/Src/main.c ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 297              		.loc 1 245 3 is_stmt 1 view .LVU87
 245:Core/Src/main.c ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 298              		.loc 1 245 31 is_stmt 0 view .LVU88
 299 003c C462     		str	r4, [r0, #44]
 246:Core/Src/main.c ****   hadc1.Init.DMAContinuousRequests = DISABLE;
 300              		.loc 1 246 3 is_stmt 1 view .LVU89
 246:Core/Src/main.c ****   hadc1.Init.DMAContinuousRequests = DISABLE;
 301              		.loc 1 246 35 is_stmt 0 view .LVU90
 302 003e 0463     		str	r4, [r0, #48]
 247:Core/Src/main.c ****   hadc1.Init.Overrun = ADC_OVR_DATA_PRESERVED;
 303              		.loc 1 247 3 is_stmt 1 view .LVU91
 247:Core/Src/main.c ****   hadc1.Init.Overrun = ADC_OVR_DATA_PRESERVED;
 304              		.loc 1 247 36 is_stmt 0 view .LVU92
 305 0040 80F83840 		strb	r4, [r0, #56]
 248:Core/Src/main.c ****   hadc1.Init.OversamplingMode = DISABLE;
 306              		.loc 1 248 3 is_stmt 1 view .LVU93
 248:Core/Src/main.c ****   hadc1.Init.OversamplingMode = DISABLE;
 307              		.loc 1 248 22 is_stmt 0 view .LVU94
 308 0044 C463     		str	r4, [r0, #60]
 249:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 309              		.loc 1 249 3 is_stmt 1 view .LVU95
 249:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 310              		.loc 1 249 31 is_stmt 0 view .LVU96
 311 0046 80F84040 		strb	r4, [r0, #64]
 250:Core/Src/main.c ****   {
 312              		.loc 1 250 3 is_stmt 1 view .LVU97
 250:Core/Src/main.c ****   {
 313              		.loc 1 250 7 is_stmt 0 view .LVU98
 314 004a FFF7FEFF 		bl	HAL_ADC_Init
 315              	.LVL6:
 250:Core/Src/main.c ****   {
 316              		.loc 1 250 6 view .LVU99
ARM GAS  /tmp/cc4iZfnV.s 			page 24


 317 004e C8B9     		cbnz	r0, .L12
 256:Core/Src/main.c ****   if (HAL_ADCEx_MultiModeConfigChannel(&hadc1, &multimode) != HAL_OK)
 318              		.loc 1 256 3 is_stmt 1 view .LVU100
 256:Core/Src/main.c ****   if (HAL_ADCEx_MultiModeConfigChannel(&hadc1, &multimode) != HAL_OK)
 319              		.loc 1 256 18 is_stmt 0 view .LVU101
 320 0050 0023     		movs	r3, #0
 321 0052 0993     		str	r3, [sp, #36]
 257:Core/Src/main.c ****   {
 322              		.loc 1 257 3 is_stmt 1 view .LVU102
 257:Core/Src/main.c ****   {
 323              		.loc 1 257 7 is_stmt 0 view .LVU103
 324 0054 09A9     		add	r1, sp, #36
 325 0056 0E48     		ldr	r0, .L15
 326 0058 FFF7FEFF 		bl	HAL_ADCEx_MultiModeConfigChannel
 327              	.LVL7:
 257:Core/Src/main.c ****   {
 328              		.loc 1 257 6 view .LVU104
 329 005c A0B9     		cbnz	r0, .L13
 263:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 330              		.loc 1 263 3 is_stmt 1 view .LVU105
 263:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 331              		.loc 1 263 19 is_stmt 0 view .LVU106
 332 005e 0D4B     		ldr	r3, .L15+4
 333 0060 0193     		str	r3, [sp, #4]
 264:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_2CYCLES_5;
 334              		.loc 1 264 3 is_stmt 1 view .LVU107
 264:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_2CYCLES_5;
 335              		.loc 1 264 16 is_stmt 0 view .LVU108
 336 0062 0623     		movs	r3, #6
 337 0064 0293     		str	r3, [sp, #8]
 265:Core/Src/main.c ****   sConfig.SingleDiff = ADC_DIFFERENTIAL_ENDED;
 338              		.loc 1 265 3 is_stmt 1 view .LVU109
 265:Core/Src/main.c ****   sConfig.SingleDiff = ADC_DIFFERENTIAL_ENDED;
 339              		.loc 1 265 24 is_stmt 0 view .LVU110
 340 0066 0023     		movs	r3, #0
 341 0068 0393     		str	r3, [sp, #12]
 266:Core/Src/main.c ****   sConfig.OffsetNumber = ADC_OFFSET_NONE;
 342              		.loc 1 266 3 is_stmt 1 view .LVU111
 266:Core/Src/main.c ****   sConfig.OffsetNumber = ADC_OFFSET_NONE;
 343              		.loc 1 266 22 is_stmt 0 view .LVU112
 344 006a 0B4A     		ldr	r2, .L15+8
 345 006c 0492     		str	r2, [sp, #16]
 267:Core/Src/main.c ****   sConfig.Offset = 0;
 346              		.loc 1 267 3 is_stmt 1 view .LVU113
 267:Core/Src/main.c ****   sConfig.Offset = 0;
 347              		.loc 1 267 24 is_stmt 0 view .LVU114
 348 006e 0422     		movs	r2, #4
 349 0070 0592     		str	r2, [sp, #20]
 268:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 350              		.loc 1 268 3 is_stmt 1 view .LVU115
 268:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 351              		.loc 1 268 18 is_stmt 0 view .LVU116
 352 0072 0693     		str	r3, [sp, #24]
 269:Core/Src/main.c ****   {
 353              		.loc 1 269 3 is_stmt 1 view .LVU117
 269:Core/Src/main.c ****   {
 354              		.loc 1 269 7 is_stmt 0 view .LVU118
ARM GAS  /tmp/cc4iZfnV.s 			page 25


 355 0074 0DEB0201 		add	r1, sp, r2
 356 0078 0548     		ldr	r0, .L15
 357 007a FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 358              	.LVL8:
 269:Core/Src/main.c ****   {
 359              		.loc 1 269 6 view .LVU119
 360 007e 28B9     		cbnz	r0, .L14
 277:Core/Src/main.c **** 
 361              		.loc 1 277 1 view .LVU120
 362 0080 0CB0     		add	sp, sp, #48
 363              	.LCFI5:
 364              		.cfi_remember_state
 365              		.cfi_def_cfa_offset 8
 366              		@ sp needed
 367 0082 10BD     		pop	{r4, pc}
 368              	.L12:
 369              	.LCFI6:
 370              		.cfi_restore_state
 252:Core/Src/main.c ****   }
 371              		.loc 1 252 5 is_stmt 1 view .LVU121
 372 0084 FFF7FEFF 		bl	Error_Handler
 373              	.LVL9:
 374              	.L13:
 259:Core/Src/main.c ****   }
 375              		.loc 1 259 5 view .LVU122
 376 0088 FFF7FEFF 		bl	Error_Handler
 377              	.LVL10:
 378              	.L14:
 271:Core/Src/main.c ****   }
 379              		.loc 1 271 5 view .LVU123
 380 008c FFF7FEFF 		bl	Error_Handler
 381              	.LVL11:
 382              	.L16:
 383              		.align	2
 384              	.L15:
 385 0090 00000000 		.word	.LANCHOR0
 386 0094 02003004 		.word	70254594
 387 0098 00007F40 		.word	1082064896
 388              		.cfi_endproc
 389              	.LFE331:
 391              		.section	.text.MX_ADC2_Init,"ax",%progbits
 392              		.align	1
 393              		.syntax unified
 394              		.thumb
 395              		.thumb_func
 397              	MX_ADC2_Init:
 398              	.LFB332:
 285:Core/Src/main.c **** 
 399              		.loc 1 285 1 view -0
 400              		.cfi_startproc
 401              		@ args = 0, pretend = 0, frame = 32
 402              		@ frame_needed = 0, uses_anonymous_args = 0
 403 0000 00B5     		push	{lr}
 404              	.LCFI7:
 405              		.cfi_def_cfa_offset 4
 406              		.cfi_offset 14, -4
 407 0002 89B0     		sub	sp, sp, #36
ARM GAS  /tmp/cc4iZfnV.s 			page 26


 408              	.LCFI8:
 409              		.cfi_def_cfa_offset 40
 291:Core/Src/main.c **** 
 410              		.loc 1 291 3 view .LVU125
 291:Core/Src/main.c **** 
 411              		.loc 1 291 26 is_stmt 0 view .LVU126
 412 0004 2022     		movs	r2, #32
 413 0006 0021     		movs	r1, #0
 414 0008 6846     		mov	r0, sp
 415 000a FFF7FEFF 		bl	memset
 416              	.LVL12:
 298:Core/Src/main.c ****   hadc2.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 417              		.loc 1 298 3 is_stmt 1 view .LVU127
 298:Core/Src/main.c ****   hadc2.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 418              		.loc 1 298 18 is_stmt 0 view .LVU128
 419 000e 1A48     		ldr	r0, .L23
 420 0010 1A4B     		ldr	r3, .L23+4
 421 0012 0360     		str	r3, [r0]
 299:Core/Src/main.c ****   hadc2.Init.Resolution = ADC_RESOLUTION_12B;
 422              		.loc 1 299 3 is_stmt 1 view .LVU129
 299:Core/Src/main.c ****   hadc2.Init.Resolution = ADC_RESOLUTION_12B;
 423              		.loc 1 299 29 is_stmt 0 view .LVU130
 424 0014 4FF44033 		mov	r3, #196608
 425 0018 4360     		str	r3, [r0, #4]
 300:Core/Src/main.c ****   hadc2.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 426              		.loc 1 300 3 is_stmt 1 view .LVU131
 300:Core/Src/main.c ****   hadc2.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 427              		.loc 1 300 25 is_stmt 0 view .LVU132
 428 001a 0023     		movs	r3, #0
 429 001c 8360     		str	r3, [r0, #8]
 301:Core/Src/main.c ****   hadc2.Init.GainCompensation = 0;
 430              		.loc 1 301 3 is_stmt 1 view .LVU133
 301:Core/Src/main.c ****   hadc2.Init.GainCompensation = 0;
 431              		.loc 1 301 24 is_stmt 0 view .LVU134
 432 001e C360     		str	r3, [r0, #12]
 302:Core/Src/main.c ****   hadc2.Init.ScanConvMode = ADC_SCAN_DISABLE;
 433              		.loc 1 302 3 is_stmt 1 view .LVU135
 302:Core/Src/main.c ****   hadc2.Init.ScanConvMode = ADC_SCAN_DISABLE;
 434              		.loc 1 302 31 is_stmt 0 view .LVU136
 435 0020 0361     		str	r3, [r0, #16]
 303:Core/Src/main.c ****   hadc2.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 436              		.loc 1 303 3 is_stmt 1 view .LVU137
 303:Core/Src/main.c ****   hadc2.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 437              		.loc 1 303 27 is_stmt 0 view .LVU138
 438 0022 4361     		str	r3, [r0, #20]
 304:Core/Src/main.c ****   hadc2.Init.LowPowerAutoWait = DISABLE;
 439              		.loc 1 304 3 is_stmt 1 view .LVU139
 304:Core/Src/main.c ****   hadc2.Init.LowPowerAutoWait = DISABLE;
 440              		.loc 1 304 27 is_stmt 0 view .LVU140
 441 0024 0422     		movs	r2, #4
 442 0026 8261     		str	r2, [r0, #24]
 305:Core/Src/main.c ****   hadc2.Init.ContinuousConvMode = DISABLE;
 443              		.loc 1 305 3 is_stmt 1 view .LVU141
 305:Core/Src/main.c ****   hadc2.Init.ContinuousConvMode = DISABLE;
 444              		.loc 1 305 31 is_stmt 0 view .LVU142
 445 0028 0377     		strb	r3, [r0, #28]
 306:Core/Src/main.c ****   hadc2.Init.NbrOfConversion = 1;
ARM GAS  /tmp/cc4iZfnV.s 			page 27


 446              		.loc 1 306 3 is_stmt 1 view .LVU143
 306:Core/Src/main.c ****   hadc2.Init.NbrOfConversion = 1;
 447              		.loc 1 306 33 is_stmt 0 view .LVU144
 448 002a 4377     		strb	r3, [r0, #29]
 307:Core/Src/main.c ****   hadc2.Init.DiscontinuousConvMode = DISABLE;
 449              		.loc 1 307 3 is_stmt 1 view .LVU145
 307:Core/Src/main.c ****   hadc2.Init.DiscontinuousConvMode = DISABLE;
 450              		.loc 1 307 30 is_stmt 0 view .LVU146
 451 002c 0122     		movs	r2, #1
 452 002e 0262     		str	r2, [r0, #32]
 308:Core/Src/main.c ****   hadc2.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 453              		.loc 1 308 3 is_stmt 1 view .LVU147
 308:Core/Src/main.c ****   hadc2.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 454              		.loc 1 308 36 is_stmt 0 view .LVU148
 455 0030 80F82430 		strb	r3, [r0, #36]
 309:Core/Src/main.c ****   hadc2.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 456              		.loc 1 309 3 is_stmt 1 view .LVU149
 309:Core/Src/main.c ****   hadc2.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 457              		.loc 1 309 31 is_stmt 0 view .LVU150
 458 0034 C362     		str	r3, [r0, #44]
 310:Core/Src/main.c ****   hadc2.Init.DMAContinuousRequests = DISABLE;
 459              		.loc 1 310 3 is_stmt 1 view .LVU151
 310:Core/Src/main.c ****   hadc2.Init.DMAContinuousRequests = DISABLE;
 460              		.loc 1 310 35 is_stmt 0 view .LVU152
 461 0036 0363     		str	r3, [r0, #48]
 311:Core/Src/main.c ****   hadc2.Init.Overrun = ADC_OVR_DATA_PRESERVED;
 462              		.loc 1 311 3 is_stmt 1 view .LVU153
 311:Core/Src/main.c ****   hadc2.Init.Overrun = ADC_OVR_DATA_PRESERVED;
 463              		.loc 1 311 36 is_stmt 0 view .LVU154
 464 0038 80F83830 		strb	r3, [r0, #56]
 312:Core/Src/main.c ****   hadc2.Init.OversamplingMode = DISABLE;
 465              		.loc 1 312 3 is_stmt 1 view .LVU155
 312:Core/Src/main.c ****   hadc2.Init.OversamplingMode = DISABLE;
 466              		.loc 1 312 22 is_stmt 0 view .LVU156
 467 003c C363     		str	r3, [r0, #60]
 313:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc2) != HAL_OK)
 468              		.loc 1 313 3 is_stmt 1 view .LVU157
 313:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc2) != HAL_OK)
 469              		.loc 1 313 31 is_stmt 0 view .LVU158
 470 003e 80F84030 		strb	r3, [r0, #64]
 314:Core/Src/main.c ****   {
 471              		.loc 1 314 3 is_stmt 1 view .LVU159
 314:Core/Src/main.c ****   {
 472              		.loc 1 314 7 is_stmt 0 view .LVU160
 473 0042 FFF7FEFF 		bl	HAL_ADC_Init
 474              	.LVL13:
 314:Core/Src/main.c ****   {
 475              		.loc 1 314 6 view .LVU161
 476 0046 90B9     		cbnz	r0, .L21
 320:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 477              		.loc 1 320 3 is_stmt 1 view .LVU162
 320:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 478              		.loc 1 320 19 is_stmt 0 view .LVU163
 479 0048 0D4B     		ldr	r3, .L23+8
 480 004a 0093     		str	r3, [sp]
 321:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_2CYCLES_5;
 481              		.loc 1 321 3 is_stmt 1 view .LVU164
ARM GAS  /tmp/cc4iZfnV.s 			page 28


 321:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_2CYCLES_5;
 482              		.loc 1 321 16 is_stmt 0 view .LVU165
 483 004c 0623     		movs	r3, #6
 484 004e 0193     		str	r3, [sp, #4]
 322:Core/Src/main.c ****   sConfig.SingleDiff = ADC_DIFFERENTIAL_ENDED;
 485              		.loc 1 322 3 is_stmt 1 view .LVU166
 322:Core/Src/main.c ****   sConfig.SingleDiff = ADC_DIFFERENTIAL_ENDED;
 486              		.loc 1 322 24 is_stmt 0 view .LVU167
 487 0050 0023     		movs	r3, #0
 488 0052 0293     		str	r3, [sp, #8]
 323:Core/Src/main.c ****   sConfig.OffsetNumber = ADC_OFFSET_NONE;
 489              		.loc 1 323 3 is_stmt 1 view .LVU168
 323:Core/Src/main.c ****   sConfig.OffsetNumber = ADC_OFFSET_NONE;
 490              		.loc 1 323 22 is_stmt 0 view .LVU169
 491 0054 0B4A     		ldr	r2, .L23+12
 492 0056 0392     		str	r2, [sp, #12]
 324:Core/Src/main.c ****   sConfig.Offset = 0;
 493              		.loc 1 324 3 is_stmt 1 view .LVU170
 324:Core/Src/main.c ****   sConfig.Offset = 0;
 494              		.loc 1 324 24 is_stmt 0 view .LVU171
 495 0058 0422     		movs	r2, #4
 496 005a 0492     		str	r2, [sp, #16]
 325:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc2, &sConfig) != HAL_OK)
 497              		.loc 1 325 3 is_stmt 1 view .LVU172
 325:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc2, &sConfig) != HAL_OK)
 498              		.loc 1 325 18 is_stmt 0 view .LVU173
 499 005c 0593     		str	r3, [sp, #20]
 326:Core/Src/main.c ****   {
 500              		.loc 1 326 3 is_stmt 1 view .LVU174
 326:Core/Src/main.c ****   {
 501              		.loc 1 326 7 is_stmt 0 view .LVU175
 502 005e 6946     		mov	r1, sp
 503 0060 0548     		ldr	r0, .L23
 504 0062 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 505              	.LVL14:
 326:Core/Src/main.c ****   {
 506              		.loc 1 326 6 view .LVU176
 507 0066 20B9     		cbnz	r0, .L22
 334:Core/Src/main.c **** 
 508              		.loc 1 334 1 view .LVU177
 509 0068 09B0     		add	sp, sp, #36
 510              	.LCFI9:
 511              		.cfi_remember_state
 512              		.cfi_def_cfa_offset 4
 513              		@ sp needed
 514 006a 5DF804FB 		ldr	pc, [sp], #4
 515              	.L21:
 516              	.LCFI10:
 517              		.cfi_restore_state
 316:Core/Src/main.c ****   }
 518              		.loc 1 316 5 is_stmt 1 view .LVU178
 519 006e FFF7FEFF 		bl	Error_Handler
 520              	.LVL15:
 521              	.L22:
 328:Core/Src/main.c ****   }
 522              		.loc 1 328 5 view .LVU179
 523 0072 FFF7FEFF 		bl	Error_Handler
ARM GAS  /tmp/cc4iZfnV.s 			page 29


 524              	.LVL16:
 525              	.L24:
 526 0076 00BF     		.align	2
 527              	.L23:
 528 0078 00000000 		.word	.LANCHOR1
 529 007c 00010050 		.word	1342177536
 530 0080 0800900C 		.word	210763784
 531 0084 00007F40 		.word	1082064896
 532              		.cfi_endproc
 533              	.LFE332:
 535              		.section	.text.MX_FDCAN1_Init,"ax",%progbits
 536              		.align	1
 537              		.syntax unified
 538              		.thumb
 539              		.thumb_func
 541              	MX_FDCAN1_Init:
 542              	.LFB333:
 342:Core/Src/main.c **** 
 543              		.loc 1 342 1 view -0
 544              		.cfi_startproc
 545              		@ args = 0, pretend = 0, frame = 0
 546              		@ frame_needed = 0, uses_anonymous_args = 0
 547 0000 70B5     		push	{r4, r5, r6, lr}
 548              	.LCFI11:
 549              		.cfi_def_cfa_offset 16
 550              		.cfi_offset 4, -16
 551              		.cfi_offset 5, -12
 552              		.cfi_offset 6, -8
 553              		.cfi_offset 14, -4
 351:Core/Src/main.c ****   hfdcan1.Init.ClockDivider = FDCAN_CLOCK_DIV1;
 554              		.loc 1 351 3 view .LVU181
 351:Core/Src/main.c ****   hfdcan1.Init.ClockDivider = FDCAN_CLOCK_DIV1;
 555              		.loc 1 351 20 is_stmt 0 view .LVU182
 556 0002 1048     		ldr	r0, .L29
 557 0004 104B     		ldr	r3, .L29+4
 558 0006 0360     		str	r3, [r0]
 352:Core/Src/main.c ****   hfdcan1.Init.FrameFormat = FDCAN_FRAME_CLASSIC;
 559              		.loc 1 352 3 is_stmt 1 view .LVU183
 352:Core/Src/main.c ****   hfdcan1.Init.FrameFormat = FDCAN_FRAME_CLASSIC;
 560              		.loc 1 352 29 is_stmt 0 view .LVU184
 561 0008 0023     		movs	r3, #0
 562 000a 4360     		str	r3, [r0, #4]
 353:Core/Src/main.c ****   hfdcan1.Init.Mode = FDCAN_MODE_NORMAL;
 563              		.loc 1 353 3 is_stmt 1 view .LVU185
 353:Core/Src/main.c ****   hfdcan1.Init.Mode = FDCAN_MODE_NORMAL;
 564              		.loc 1 353 28 is_stmt 0 view .LVU186
 565 000c 8360     		str	r3, [r0, #8]
 354:Core/Src/main.c ****   hfdcan1.Init.AutoRetransmission = ENABLE;
 566              		.loc 1 354 3 is_stmt 1 view .LVU187
 354:Core/Src/main.c ****   hfdcan1.Init.AutoRetransmission = ENABLE;
 567              		.loc 1 354 21 is_stmt 0 view .LVU188
 568 000e C360     		str	r3, [r0, #12]
 355:Core/Src/main.c ****   hfdcan1.Init.TransmitPause = ENABLE;
 569              		.loc 1 355 3 is_stmt 1 view .LVU189
 355:Core/Src/main.c ****   hfdcan1.Init.TransmitPause = ENABLE;
 570              		.loc 1 355 35 is_stmt 0 view .LVU190
 571 0010 0122     		movs	r2, #1
ARM GAS  /tmp/cc4iZfnV.s 			page 30


 572 0012 0274     		strb	r2, [r0, #16]
 356:Core/Src/main.c ****   hfdcan1.Init.ProtocolException = DISABLE;
 573              		.loc 1 356 3 is_stmt 1 view .LVU191
 356:Core/Src/main.c ****   hfdcan1.Init.ProtocolException = DISABLE;
 574              		.loc 1 356 30 is_stmt 0 view .LVU192
 575 0014 4274     		strb	r2, [r0, #17]
 357:Core/Src/main.c ****   hfdcan1.Init.NominalPrescaler = 20;
 576              		.loc 1 357 3 is_stmt 1 view .LVU193
 357:Core/Src/main.c ****   hfdcan1.Init.NominalPrescaler = 20;
 577              		.loc 1 357 34 is_stmt 0 view .LVU194
 578 0016 8374     		strb	r3, [r0, #18]
 358:Core/Src/main.c ****   hfdcan1.Init.NominalSyncJumpWidth = 16;
 579              		.loc 1 358 3 is_stmt 1 view .LVU195
 358:Core/Src/main.c ****   hfdcan1.Init.NominalSyncJumpWidth = 16;
 580              		.loc 1 358 33 is_stmt 0 view .LVU196
 581 0018 1426     		movs	r6, #20
 582 001a 4661     		str	r6, [r0, #20]
 359:Core/Src/main.c ****   hfdcan1.Init.NominalTimeSeg1 = 13;
 583              		.loc 1 359 3 is_stmt 1 view .LVU197
 359:Core/Src/main.c ****   hfdcan1.Init.NominalTimeSeg1 = 13;
 584              		.loc 1 359 37 is_stmt 0 view .LVU198
 585 001c 1025     		movs	r5, #16
 586 001e 8561     		str	r5, [r0, #24]
 360:Core/Src/main.c ****   hfdcan1.Init.NominalTimeSeg2 = 2;
 587              		.loc 1 360 3 is_stmt 1 view .LVU199
 360:Core/Src/main.c ****   hfdcan1.Init.NominalTimeSeg2 = 2;
 588              		.loc 1 360 32 is_stmt 0 view .LVU200
 589 0020 0D24     		movs	r4, #13
 590 0022 C461     		str	r4, [r0, #28]
 361:Core/Src/main.c ****   hfdcan1.Init.DataPrescaler = 20;
 591              		.loc 1 361 3 is_stmt 1 view .LVU201
 361:Core/Src/main.c ****   hfdcan1.Init.DataPrescaler = 20;
 592              		.loc 1 361 32 is_stmt 0 view .LVU202
 593 0024 0221     		movs	r1, #2
 594 0026 0162     		str	r1, [r0, #32]
 362:Core/Src/main.c ****   hfdcan1.Init.DataSyncJumpWidth = 16;
 595              		.loc 1 362 3 is_stmt 1 view .LVU203
 362:Core/Src/main.c ****   hfdcan1.Init.DataSyncJumpWidth = 16;
 596              		.loc 1 362 30 is_stmt 0 view .LVU204
 597 0028 4662     		str	r6, [r0, #36]
 363:Core/Src/main.c ****   hfdcan1.Init.DataTimeSeg1 = 13;
 598              		.loc 1 363 3 is_stmt 1 view .LVU205
 363:Core/Src/main.c ****   hfdcan1.Init.DataTimeSeg1 = 13;
 599              		.loc 1 363 34 is_stmt 0 view .LVU206
 600 002a 8562     		str	r5, [r0, #40]
 364:Core/Src/main.c ****   hfdcan1.Init.DataTimeSeg2 = 2;
 601              		.loc 1 364 3 is_stmt 1 view .LVU207
 364:Core/Src/main.c ****   hfdcan1.Init.DataTimeSeg2 = 2;
 602              		.loc 1 364 29 is_stmt 0 view .LVU208
 603 002c C462     		str	r4, [r0, #44]
 365:Core/Src/main.c ****   hfdcan1.Init.StdFiltersNbr = 1;
 604              		.loc 1 365 3 is_stmt 1 view .LVU209
 365:Core/Src/main.c ****   hfdcan1.Init.StdFiltersNbr = 1;
 605              		.loc 1 365 29 is_stmt 0 view .LVU210
 606 002e 0163     		str	r1, [r0, #48]
 366:Core/Src/main.c ****   hfdcan1.Init.ExtFiltersNbr = 0;
 607              		.loc 1 366 3 is_stmt 1 view .LVU211
ARM GAS  /tmp/cc4iZfnV.s 			page 31


 366:Core/Src/main.c ****   hfdcan1.Init.ExtFiltersNbr = 0;
 608              		.loc 1 366 30 is_stmt 0 view .LVU212
 609 0030 4263     		str	r2, [r0, #52]
 367:Core/Src/main.c ****   hfdcan1.Init.TxFifoQueueMode = FDCAN_TX_FIFO_OPERATION;
 610              		.loc 1 367 3 is_stmt 1 view .LVU213
 367:Core/Src/main.c ****   hfdcan1.Init.TxFifoQueueMode = FDCAN_TX_FIFO_OPERATION;
 611              		.loc 1 367 30 is_stmt 0 view .LVU214
 612 0032 8363     		str	r3, [r0, #56]
 368:Core/Src/main.c ****   if (HAL_FDCAN_Init(&hfdcan1) != HAL_OK)
 613              		.loc 1 368 3 is_stmt 1 view .LVU215
 368:Core/Src/main.c ****   if (HAL_FDCAN_Init(&hfdcan1) != HAL_OK)
 614              		.loc 1 368 32 is_stmt 0 view .LVU216
 615 0034 C363     		str	r3, [r0, #60]
 369:Core/Src/main.c ****   {
 616              		.loc 1 369 3 is_stmt 1 view .LVU217
 369:Core/Src/main.c ****   {
 617              		.loc 1 369 7 is_stmt 0 view .LVU218
 618 0036 FFF7FEFF 		bl	HAL_FDCAN_Init
 619              	.LVL17:
 369:Core/Src/main.c ****   {
 620              		.loc 1 369 6 view .LVU219
 621 003a 00B9     		cbnz	r0, .L28
 377:Core/Src/main.c **** 
 622              		.loc 1 377 1 view .LVU220
 623 003c 70BD     		pop	{r4, r5, r6, pc}
 624              	.L28:
 371:Core/Src/main.c ****   }
 625              		.loc 1 371 5 is_stmt 1 view .LVU221
 626 003e FFF7FEFF 		bl	Error_Handler
 627              	.LVL18:
 628              	.L30:
 629 0042 00BF     		.align	2
 630              	.L29:
 631 0044 00000000 		.word	.LANCHOR2
 632 0048 00640040 		.word	1073767424
 633              		.cfi_endproc
 634              	.LFE333:
 636              		.section	.text.MX_TIM1_Init,"ax",%progbits
 637              		.align	1
 638              		.syntax unified
 639              		.thumb
 640              		.thumb_func
 642              	MX_TIM1_Init:
 643              	.LFB334:
 385:Core/Src/main.c **** 
 644              		.loc 1 385 1 view -0
 645              		.cfi_startproc
 646              		@ args = 0, pretend = 0, frame = 96
 647              		@ frame_needed = 0, uses_anonymous_args = 0
 648 0000 10B5     		push	{r4, lr}
 649              	.LCFI12:
 650              		.cfi_def_cfa_offset 8
 651              		.cfi_offset 4, -8
 652              		.cfi_offset 14, -4
 653 0002 98B0     		sub	sp, sp, #96
 654              	.LCFI13:
 655              		.cfi_def_cfa_offset 104
ARM GAS  /tmp/cc4iZfnV.s 			page 32


 391:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 656              		.loc 1 391 3 view .LVU223
 391:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 657              		.loc 1 391 27 is_stmt 0 view .LVU224
 658 0004 0024     		movs	r4, #0
 659 0006 1594     		str	r4, [sp, #84]
 660 0008 1694     		str	r4, [sp, #88]
 661 000a 1794     		str	r4, [sp, #92]
 392:Core/Src/main.c ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 662              		.loc 1 392 3 is_stmt 1 view .LVU225
 392:Core/Src/main.c ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 663              		.loc 1 392 22 is_stmt 0 view .LVU226
 664 000c 0E94     		str	r4, [sp, #56]
 665 000e 0F94     		str	r4, [sp, #60]
 666 0010 1094     		str	r4, [sp, #64]
 667 0012 1194     		str	r4, [sp, #68]
 668 0014 1294     		str	r4, [sp, #72]
 669 0016 1394     		str	r4, [sp, #76]
 670 0018 1494     		str	r4, [sp, #80]
 393:Core/Src/main.c **** 
 671              		.loc 1 393 3 is_stmt 1 view .LVU227
 393:Core/Src/main.c **** 
 672              		.loc 1 393 34 is_stmt 0 view .LVU228
 673 001a 3422     		movs	r2, #52
 674 001c 2146     		mov	r1, r4
 675 001e 01A8     		add	r0, sp, #4
 676 0020 FFF7FEFF 		bl	memset
 677              	.LVL19:
 398:Core/Src/main.c ****   htim1.Init.Prescaler = 0;
 678              		.loc 1 398 3 is_stmt 1 view .LVU229
 398:Core/Src/main.c ****   htim1.Init.Prescaler = 0;
 679              		.loc 1 398 18 is_stmt 0 view .LVU230
 680 0024 2848     		ldr	r0, .L43
 681 0026 294B     		ldr	r3, .L43+4
 682 0028 0360     		str	r3, [r0]
 399:Core/Src/main.c ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 683              		.loc 1 399 3 is_stmt 1 view .LVU231
 399:Core/Src/main.c ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 684              		.loc 1 399 24 is_stmt 0 view .LVU232
 685 002a 4460     		str	r4, [r0, #4]
 400:Core/Src/main.c ****   htim1.Init.Period = 65535;
 686              		.loc 1 400 3 is_stmt 1 view .LVU233
 400:Core/Src/main.c ****   htim1.Init.Period = 65535;
 687              		.loc 1 400 26 is_stmt 0 view .LVU234
 688 002c 8460     		str	r4, [r0, #8]
 401:Core/Src/main.c ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 689              		.loc 1 401 3 is_stmt 1 view .LVU235
 401:Core/Src/main.c ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 690              		.loc 1 401 21 is_stmt 0 view .LVU236
 691 002e 4FF6FF73 		movw	r3, #65535
 692 0032 C360     		str	r3, [r0, #12]
 402:Core/Src/main.c ****   htim1.Init.RepetitionCounter = 0;
 693              		.loc 1 402 3 is_stmt 1 view .LVU237
 402:Core/Src/main.c ****   htim1.Init.RepetitionCounter = 0;
 694              		.loc 1 402 28 is_stmt 0 view .LVU238
 695 0034 0461     		str	r4, [r0, #16]
 403:Core/Src/main.c ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
ARM GAS  /tmp/cc4iZfnV.s 			page 33


 696              		.loc 1 403 3 is_stmt 1 view .LVU239
 403:Core/Src/main.c ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 697              		.loc 1 403 32 is_stmt 0 view .LVU240
 698 0036 4461     		str	r4, [r0, #20]
 404:Core/Src/main.c ****   if (HAL_TIM_OC_Init(&htim1) != HAL_OK)
 699              		.loc 1 404 3 is_stmt 1 view .LVU241
 404:Core/Src/main.c ****   if (HAL_TIM_OC_Init(&htim1) != HAL_OK)
 700              		.loc 1 404 32 is_stmt 0 view .LVU242
 701 0038 8461     		str	r4, [r0, #24]
 405:Core/Src/main.c ****   {
 702              		.loc 1 405 3 is_stmt 1 view .LVU243
 405:Core/Src/main.c ****   {
 703              		.loc 1 405 7 is_stmt 0 view .LVU244
 704 003a FFF7FEFF 		bl	HAL_TIM_OC_Init
 705              	.LVL20:
 405:Core/Src/main.c ****   {
 706              		.loc 1 405 6 view .LVU245
 707 003e 0028     		cmp	r0, #0
 708 0040 38D1     		bne	.L38
 409:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger2 = TIM_TRGO2_RESET;
 709              		.loc 1 409 3 is_stmt 1 view .LVU246
 409:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger2 = TIM_TRGO2_RESET;
 710              		.loc 1 409 37 is_stmt 0 view .LVU247
 711 0042 0023     		movs	r3, #0
 712 0044 1593     		str	r3, [sp, #84]
 410:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 713              		.loc 1 410 3 is_stmt 1 view .LVU248
 410:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 714              		.loc 1 410 38 is_stmt 0 view .LVU249
 715 0046 1693     		str	r3, [sp, #88]
 411:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 716              		.loc 1 411 3 is_stmt 1 view .LVU250
 411:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 717              		.loc 1 411 33 is_stmt 0 view .LVU251
 718 0048 1793     		str	r3, [sp, #92]
 412:Core/Src/main.c ****   {
 719              		.loc 1 412 3 is_stmt 1 view .LVU252
 412:Core/Src/main.c ****   {
 720              		.loc 1 412 7 is_stmt 0 view .LVU253
 721 004a 15A9     		add	r1, sp, #84
 722 004c 1E48     		ldr	r0, .L43
 723 004e FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 724              	.LVL21:
 412:Core/Src/main.c ****   {
 725              		.loc 1 412 6 view .LVU254
 726 0052 0028     		cmp	r0, #0
 727 0054 30D1     		bne	.L39
 416:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 728              		.loc 1 416 3 is_stmt 1 view .LVU255
 416:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 729              		.loc 1 416 20 is_stmt 0 view .LVU256
 730 0056 0022     		movs	r2, #0
 731 0058 0E92     		str	r2, [sp, #56]
 417:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 732              		.loc 1 417 3 is_stmt 1 view .LVU257
 417:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 733              		.loc 1 417 19 is_stmt 0 view .LVU258
ARM GAS  /tmp/cc4iZfnV.s 			page 34


 734 005a 0F92     		str	r2, [sp, #60]
 418:Core/Src/main.c ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 735              		.loc 1 418 3 is_stmt 1 view .LVU259
 418:Core/Src/main.c ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 736              		.loc 1 418 24 is_stmt 0 view .LVU260
 737 005c 1092     		str	r2, [sp, #64]
 419:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 738              		.loc 1 419 3 is_stmt 1 view .LVU261
 419:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 739              		.loc 1 419 25 is_stmt 0 view .LVU262
 740 005e 1192     		str	r2, [sp, #68]
 420:Core/Src/main.c ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 741              		.loc 1 420 3 is_stmt 1 view .LVU263
 420:Core/Src/main.c ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 742              		.loc 1 420 24 is_stmt 0 view .LVU264
 743 0060 1292     		str	r2, [sp, #72]
 421:Core/Src/main.c ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 744              		.loc 1 421 3 is_stmt 1 view .LVU265
 421:Core/Src/main.c ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 745              		.loc 1 421 25 is_stmt 0 view .LVU266
 746 0062 1392     		str	r2, [sp, #76]
 422:Core/Src/main.c ****   if (HAL_TIM_OC_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 747              		.loc 1 422 3 is_stmt 1 view .LVU267
 422:Core/Src/main.c ****   if (HAL_TIM_OC_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 748              		.loc 1 422 26 is_stmt 0 view .LVU268
 749 0064 1492     		str	r2, [sp, #80]
 423:Core/Src/main.c ****   {
 750              		.loc 1 423 3 is_stmt 1 view .LVU269
 423:Core/Src/main.c ****   {
 751              		.loc 1 423 7 is_stmt 0 view .LVU270
 752 0066 0EA9     		add	r1, sp, #56
 753 0068 1748     		ldr	r0, .L43
 754 006a FFF7FEFF 		bl	HAL_TIM_OC_ConfigChannel
 755              	.LVL22:
 423:Core/Src/main.c ****   {
 756              		.loc 1 423 6 view .LVU271
 757 006e 28BB     		cbnz	r0, .L40
 427:Core/Src/main.c ****   {
 758              		.loc 1 427 3 is_stmt 1 view .LVU272
 427:Core/Src/main.c ****   {
 759              		.loc 1 427 7 is_stmt 0 view .LVU273
 760 0070 0422     		movs	r2, #4
 761 0072 0EA9     		add	r1, sp, #56
 762 0074 1448     		ldr	r0, .L43
 763 0076 FFF7FEFF 		bl	HAL_TIM_OC_ConfigChannel
 764              	.LVL23:
 427:Core/Src/main.c ****   {
 765              		.loc 1 427 6 view .LVU274
 766 007a 08BB     		cbnz	r0, .L41
 431:Core/Src/main.c ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 767              		.loc 1 431 3 is_stmt 1 view .LVU275
 431:Core/Src/main.c ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 768              		.loc 1 431 40 is_stmt 0 view .LVU276
 769 007c 0023     		movs	r3, #0
 770 007e 0193     		str	r3, [sp, #4]
 432:Core/Src/main.c ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 771              		.loc 1 432 3 is_stmt 1 view .LVU277
ARM GAS  /tmp/cc4iZfnV.s 			page 35


 432:Core/Src/main.c ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 772              		.loc 1 432 41 is_stmt 0 view .LVU278
 773 0080 0293     		str	r3, [sp, #8]
 433:Core/Src/main.c ****   sBreakDeadTimeConfig.DeadTime = 0;
 774              		.loc 1 433 3 is_stmt 1 view .LVU279
 433:Core/Src/main.c ****   sBreakDeadTimeConfig.DeadTime = 0;
 775              		.loc 1 433 34 is_stmt 0 view .LVU280
 776 0082 0393     		str	r3, [sp, #12]
 434:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 777              		.loc 1 434 3 is_stmt 1 view .LVU281
 434:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 778              		.loc 1 434 33 is_stmt 0 view .LVU282
 779 0084 0493     		str	r3, [sp, #16]
 435:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 780              		.loc 1 435 3 is_stmt 1 view .LVU283
 435:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 781              		.loc 1 435 35 is_stmt 0 view .LVU284
 782 0086 0593     		str	r3, [sp, #20]
 436:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakFilter = 0;
 783              		.loc 1 436 3 is_stmt 1 view .LVU285
 436:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakFilter = 0;
 784              		.loc 1 436 38 is_stmt 0 view .LVU286
 785 0088 4FF40052 		mov	r2, #8192
 786 008c 0692     		str	r2, [sp, #24]
 437:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakAFMode = TIM_BREAK_AFMODE_INPUT;
 787              		.loc 1 437 3 is_stmt 1 view .LVU287
 437:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakAFMode = TIM_BREAK_AFMODE_INPUT;
 788              		.loc 1 437 36 is_stmt 0 view .LVU288
 789 008e 0793     		str	r3, [sp, #28]
 438:Core/Src/main.c ****   sBreakDeadTimeConfig.Break2State = TIM_BREAK2_DISABLE;
 790              		.loc 1 438 3 is_stmt 1 view .LVU289
 438:Core/Src/main.c ****   sBreakDeadTimeConfig.Break2State = TIM_BREAK2_DISABLE;
 791              		.loc 1 438 36 is_stmt 0 view .LVU290
 792 0090 0893     		str	r3, [sp, #32]
 439:Core/Src/main.c ****   sBreakDeadTimeConfig.Break2Polarity = TIM_BREAK2POLARITY_HIGH;
 793              		.loc 1 439 3 is_stmt 1 view .LVU291
 439:Core/Src/main.c ****   sBreakDeadTimeConfig.Break2Polarity = TIM_BREAK2POLARITY_HIGH;
 794              		.loc 1 439 36 is_stmt 0 view .LVU292
 795 0092 0993     		str	r3, [sp, #36]
 440:Core/Src/main.c ****   sBreakDeadTimeConfig.Break2Filter = 0;
 796              		.loc 1 440 3 is_stmt 1 view .LVU293
 440:Core/Src/main.c ****   sBreakDeadTimeConfig.Break2Filter = 0;
 797              		.loc 1 440 39 is_stmt 0 view .LVU294
 798 0094 4FF00072 		mov	r2, #33554432
 799 0098 0A92     		str	r2, [sp, #40]
 441:Core/Src/main.c ****   sBreakDeadTimeConfig.Break2AFMode = TIM_BREAK_AFMODE_INPUT;
 800              		.loc 1 441 3 is_stmt 1 view .LVU295
 441:Core/Src/main.c ****   sBreakDeadTimeConfig.Break2AFMode = TIM_BREAK_AFMODE_INPUT;
 801              		.loc 1 441 37 is_stmt 0 view .LVU296
 802 009a 0B93     		str	r3, [sp, #44]
 442:Core/Src/main.c ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 803              		.loc 1 442 3 is_stmt 1 view .LVU297
 442:Core/Src/main.c ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 804              		.loc 1 442 37 is_stmt 0 view .LVU298
 805 009c 0C93     		str	r3, [sp, #48]
 443:Core/Src/main.c ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 806              		.loc 1 443 3 is_stmt 1 view .LVU299
ARM GAS  /tmp/cc4iZfnV.s 			page 36


 443:Core/Src/main.c ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 807              		.loc 1 443 40 is_stmt 0 view .LVU300
 808 009e 0D93     		str	r3, [sp, #52]
 444:Core/Src/main.c ****   {
 809              		.loc 1 444 3 is_stmt 1 view .LVU301
 444:Core/Src/main.c ****   {
 810              		.loc 1 444 7 is_stmt 0 view .LVU302
 811 00a0 01A9     		add	r1, sp, #4
 812 00a2 0948     		ldr	r0, .L43
 813 00a4 FFF7FEFF 		bl	HAL_TIMEx_ConfigBreakDeadTime
 814              	.LVL24:
 444:Core/Src/main.c ****   {
 815              		.loc 1 444 6 view .LVU303
 816 00a8 60B9     		cbnz	r0, .L42
 451:Core/Src/main.c **** 
 817              		.loc 1 451 3 is_stmt 1 view .LVU304
 818 00aa 0748     		ldr	r0, .L43
 819 00ac FFF7FEFF 		bl	HAL_TIM_MspPostInit
 820              	.LVL25:
 453:Core/Src/main.c **** 
 821              		.loc 1 453 1 is_stmt 0 view .LVU305
 822 00b0 18B0     		add	sp, sp, #96
 823              	.LCFI14:
 824              		.cfi_remember_state
 825              		.cfi_def_cfa_offset 8
 826              		@ sp needed
 827 00b2 10BD     		pop	{r4, pc}
 828              	.L38:
 829              	.LCFI15:
 830              		.cfi_restore_state
 407:Core/Src/main.c ****   }
 831              		.loc 1 407 5 is_stmt 1 view .LVU306
 832 00b4 FFF7FEFF 		bl	Error_Handler
 833              	.LVL26:
 834              	.L39:
 414:Core/Src/main.c ****   }
 835              		.loc 1 414 5 view .LVU307
 836 00b8 FFF7FEFF 		bl	Error_Handler
 837              	.LVL27:
 838              	.L40:
 425:Core/Src/main.c ****   }
 839              		.loc 1 425 5 view .LVU308
 840 00bc FFF7FEFF 		bl	Error_Handler
 841              	.LVL28:
 842              	.L41:
 429:Core/Src/main.c ****   }
 843              		.loc 1 429 5 view .LVU309
 844 00c0 FFF7FEFF 		bl	Error_Handler
 845              	.LVL29:
 846              	.L42:
 446:Core/Src/main.c ****   }
 847              		.loc 1 446 5 view .LVU310
 848 00c4 FFF7FEFF 		bl	Error_Handler
 849              	.LVL30:
 850              	.L44:
 851              		.align	2
 852              	.L43:
ARM GAS  /tmp/cc4iZfnV.s 			page 37


 853 00c8 00000000 		.word	.LANCHOR3
 854 00cc 002C0140 		.word	1073818624
 855              		.cfi_endproc
 856              	.LFE334:
 858              		.section	.text.MX_USART1_UART_Init,"ax",%progbits
 859              		.align	1
 860              		.syntax unified
 861              		.thumb
 862              		.thumb_func
 864              	MX_USART1_UART_Init:
 865              	.LFB338:
 574:Core/Src/main.c **** 
 866              		.loc 1 574 1 view -0
 867              		.cfi_startproc
 868              		@ args = 0, pretend = 0, frame = 0
 869              		@ frame_needed = 0, uses_anonymous_args = 0
 870 0000 08B5     		push	{r3, lr}
 871              	.LCFI16:
 872              		.cfi_def_cfa_offset 8
 873              		.cfi_offset 3, -8
 874              		.cfi_offset 14, -4
 583:Core/Src/main.c ****   huart1.Init.BaudRate = 115200;
 875              		.loc 1 583 3 view .LVU312
 583:Core/Src/main.c ****   huart1.Init.BaudRate = 115200;
 876              		.loc 1 583 19 is_stmt 0 view .LVU313
 877 0002 1548     		ldr	r0, .L55
 878 0004 154B     		ldr	r3, .L55+4
 879 0006 0360     		str	r3, [r0]
 584:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 880              		.loc 1 584 3 is_stmt 1 view .LVU314
 584:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 881              		.loc 1 584 24 is_stmt 0 view .LVU315
 882 0008 4FF4E133 		mov	r3, #115200
 883 000c 4360     		str	r3, [r0, #4]
 585:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 884              		.loc 1 585 3 is_stmt 1 view .LVU316
 585:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 885              		.loc 1 585 26 is_stmt 0 view .LVU317
 886 000e 0023     		movs	r3, #0
 887 0010 8360     		str	r3, [r0, #8]
 586:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 888              		.loc 1 586 3 is_stmt 1 view .LVU318
 586:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 889              		.loc 1 586 24 is_stmt 0 view .LVU319
 890 0012 C360     		str	r3, [r0, #12]
 587:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 891              		.loc 1 587 3 is_stmt 1 view .LVU320
 587:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 892              		.loc 1 587 22 is_stmt 0 view .LVU321
 893 0014 0361     		str	r3, [r0, #16]
 588:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 894              		.loc 1 588 3 is_stmt 1 view .LVU322
 588:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 895              		.loc 1 588 20 is_stmt 0 view .LVU323
 896 0016 0C22     		movs	r2, #12
 897 0018 4261     		str	r2, [r0, #20]
 589:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
ARM GAS  /tmp/cc4iZfnV.s 			page 38


 898              		.loc 1 589 3 is_stmt 1 view .LVU324
 589:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 899              		.loc 1 589 25 is_stmt 0 view .LVU325
 900 001a 8361     		str	r3, [r0, #24]
 590:Core/Src/main.c ****   huart1.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 901              		.loc 1 590 3 is_stmt 1 view .LVU326
 590:Core/Src/main.c ****   huart1.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 902              		.loc 1 590 28 is_stmt 0 view .LVU327
 903 001c C361     		str	r3, [r0, #28]
 591:Core/Src/main.c ****   huart1.Init.ClockPrescaler = UART_PRESCALER_DIV1;
 904              		.loc 1 591 3 is_stmt 1 view .LVU328
 591:Core/Src/main.c ****   huart1.Init.ClockPrescaler = UART_PRESCALER_DIV1;
 905              		.loc 1 591 30 is_stmt 0 view .LVU329
 906 001e 0362     		str	r3, [r0, #32]
 592:Core/Src/main.c ****   huart1.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 907              		.loc 1 592 3 is_stmt 1 view .LVU330
 592:Core/Src/main.c ****   huart1.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 908              		.loc 1 592 30 is_stmt 0 view .LVU331
 909 0020 4362     		str	r3, [r0, #36]
 593:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 910              		.loc 1 593 3 is_stmt 1 view .LVU332
 593:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 911              		.loc 1 593 38 is_stmt 0 view .LVU333
 912 0022 8362     		str	r3, [r0, #40]
 594:Core/Src/main.c ****   {
 913              		.loc 1 594 3 is_stmt 1 view .LVU334
 594:Core/Src/main.c ****   {
 914              		.loc 1 594 7 is_stmt 0 view .LVU335
 915 0024 FFF7FEFF 		bl	HAL_UART_Init
 916              	.LVL31:
 594:Core/Src/main.c ****   {
 917              		.loc 1 594 6 view .LVU336
 918 0028 70B9     		cbnz	r0, .L51
 598:Core/Src/main.c ****   {
 919              		.loc 1 598 3 is_stmt 1 view .LVU337
 598:Core/Src/main.c ****   {
 920              		.loc 1 598 7 is_stmt 0 view .LVU338
 921 002a 0021     		movs	r1, #0
 922 002c 0A48     		ldr	r0, .L55
 923 002e FFF7FEFF 		bl	HAL_UARTEx_SetTxFifoThreshold
 924              	.LVL32:
 598:Core/Src/main.c ****   {
 925              		.loc 1 598 6 view .LVU339
 926 0032 58B9     		cbnz	r0, .L52
 602:Core/Src/main.c ****   {
 927              		.loc 1 602 3 is_stmt 1 view .LVU340
 602:Core/Src/main.c ****   {
 928              		.loc 1 602 7 is_stmt 0 view .LVU341
 929 0034 0021     		movs	r1, #0
 930 0036 0848     		ldr	r0, .L55
 931 0038 FFF7FEFF 		bl	HAL_UARTEx_SetRxFifoThreshold
 932              	.LVL33:
 602:Core/Src/main.c ****   {
 933              		.loc 1 602 6 view .LVU342
 934 003c 40B9     		cbnz	r0, .L53
 606:Core/Src/main.c ****   {
 935              		.loc 1 606 3 is_stmt 1 view .LVU343
ARM GAS  /tmp/cc4iZfnV.s 			page 39


 606:Core/Src/main.c ****   {
 936              		.loc 1 606 7 is_stmt 0 view .LVU344
 937 003e 0648     		ldr	r0, .L55
 938 0040 FFF7FEFF 		bl	HAL_UARTEx_DisableFifoMode
 939              	.LVL34:
 606:Core/Src/main.c ****   {
 940              		.loc 1 606 6 view .LVU345
 941 0044 30B9     		cbnz	r0, .L54
 614:Core/Src/main.c **** 
 942              		.loc 1 614 1 view .LVU346
 943 0046 08BD     		pop	{r3, pc}
 944              	.L51:
 596:Core/Src/main.c ****   }
 945              		.loc 1 596 5 is_stmt 1 view .LVU347
 946 0048 FFF7FEFF 		bl	Error_Handler
 947              	.LVL35:
 948              	.L52:
 600:Core/Src/main.c ****   }
 949              		.loc 1 600 5 view .LVU348
 950 004c FFF7FEFF 		bl	Error_Handler
 951              	.LVL36:
 952              	.L53:
 604:Core/Src/main.c ****   }
 953              		.loc 1 604 5 view .LVU349
 954 0050 FFF7FEFF 		bl	Error_Handler
 955              	.LVL37:
 956              	.L54:
 608:Core/Src/main.c ****   }
 957              		.loc 1 608 5 view .LVU350
 958 0054 FFF7FEFF 		bl	Error_Handler
 959              	.LVL38:
 960              	.L56:
 961              		.align	2
 962              	.L55:
 963 0058 00000000 		.word	.LANCHOR4
 964 005c 00380140 		.word	1073821696
 965              		.cfi_endproc
 966              	.LFE338:
 968              		.section	.text.MX_TIM2_Init,"ax",%progbits
 969              		.align	1
 970              		.syntax unified
 971              		.thumb
 972              		.thumb_func
 974              	MX_TIM2_Init:
 975              	.LFB335:
 461:Core/Src/main.c **** 
 976              		.loc 1 461 1 view -0
 977              		.cfi_startproc
 978              		@ args = 0, pretend = 0, frame = 40
 979              		@ frame_needed = 0, uses_anonymous_args = 0
 980 0000 00B5     		push	{lr}
 981              	.LCFI17:
 982              		.cfi_def_cfa_offset 4
 983              		.cfi_offset 14, -4
 984 0002 8BB0     		sub	sp, sp, #44
 985              	.LCFI18:
 986              		.cfi_def_cfa_offset 48
ARM GAS  /tmp/cc4iZfnV.s 			page 40


 467:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 987              		.loc 1 467 3 view .LVU352
 467:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 988              		.loc 1 467 27 is_stmt 0 view .LVU353
 989 0004 0023     		movs	r3, #0
 990 0006 0793     		str	r3, [sp, #28]
 991 0008 0893     		str	r3, [sp, #32]
 992 000a 0993     		str	r3, [sp, #36]
 468:Core/Src/main.c **** 
 993              		.loc 1 468 3 is_stmt 1 view .LVU354
 468:Core/Src/main.c **** 
 994              		.loc 1 468 22 is_stmt 0 view .LVU355
 995 000c 0093     		str	r3, [sp]
 996 000e 0193     		str	r3, [sp, #4]
 997 0010 0293     		str	r3, [sp, #8]
 998 0012 0393     		str	r3, [sp, #12]
 999 0014 0493     		str	r3, [sp, #16]
 1000 0016 0593     		str	r3, [sp, #20]
 1001 0018 0693     		str	r3, [sp, #24]
 473:Core/Src/main.c ****   htim2.Init.Prescaler = 0;
 1002              		.loc 1 473 3 is_stmt 1 view .LVU356
 473:Core/Src/main.c ****   htim2.Init.Prescaler = 0;
 1003              		.loc 1 473 18 is_stmt 0 view .LVU357
 1004 001a 1748     		ldr	r0, .L65
 1005 001c 4FF08042 		mov	r2, #1073741824
 1006 0020 0260     		str	r2, [r0]
 474:Core/Src/main.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 1007              		.loc 1 474 3 is_stmt 1 view .LVU358
 474:Core/Src/main.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 1008              		.loc 1 474 24 is_stmt 0 view .LVU359
 1009 0022 4360     		str	r3, [r0, #4]
 475:Core/Src/main.c ****   htim2.Init.Period = 4.294967295E9;
 1010              		.loc 1 475 3 is_stmt 1 view .LVU360
 475:Core/Src/main.c ****   htim2.Init.Period = 4.294967295E9;
 1011              		.loc 1 475 26 is_stmt 0 view .LVU361
 1012 0024 8360     		str	r3, [r0, #8]
 476:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 1013              		.loc 1 476 3 is_stmt 1 view .LVU362
 476:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 1014              		.loc 1 476 21 is_stmt 0 view .LVU363
 1015 0026 4FF0FF32 		mov	r2, #-1
 1016 002a C260     		str	r2, [r0, #12]
 477:Core/Src/main.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 1017              		.loc 1 477 3 is_stmt 1 view .LVU364
 477:Core/Src/main.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 1018              		.loc 1 477 28 is_stmt 0 view .LVU365
 1019 002c 0361     		str	r3, [r0, #16]
 478:Core/Src/main.c ****   if (HAL_TIM_PWM_Init(&htim2) != HAL_OK)
 1020              		.loc 1 478 3 is_stmt 1 view .LVU366
 478:Core/Src/main.c ****   if (HAL_TIM_PWM_Init(&htim2) != HAL_OK)
 1021              		.loc 1 478 32 is_stmt 0 view .LVU367
 1022 002e 8361     		str	r3, [r0, #24]
 479:Core/Src/main.c ****   {
 1023              		.loc 1 479 3 is_stmt 1 view .LVU368
 479:Core/Src/main.c ****   {
 1024              		.loc 1 479 7 is_stmt 0 view .LVU369
 1025 0030 FFF7FEFF 		bl	HAL_TIM_PWM_Init
ARM GAS  /tmp/cc4iZfnV.s 			page 41


 1026              	.LVL39:
 479:Core/Src/main.c ****   {
 1027              		.loc 1 479 6 view .LVU370
 1028 0034 C8B9     		cbnz	r0, .L62
 483:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 1029              		.loc 1 483 3 is_stmt 1 view .LVU371
 483:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 1030              		.loc 1 483 37 is_stmt 0 view .LVU372
 1031 0036 0023     		movs	r3, #0
 1032 0038 0793     		str	r3, [sp, #28]
 484:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 1033              		.loc 1 484 3 is_stmt 1 view .LVU373
 484:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 1034              		.loc 1 484 33 is_stmt 0 view .LVU374
 1035 003a 0993     		str	r3, [sp, #36]
 485:Core/Src/main.c ****   {
 1036              		.loc 1 485 3 is_stmt 1 view .LVU375
 485:Core/Src/main.c ****   {
 1037              		.loc 1 485 7 is_stmt 0 view .LVU376
 1038 003c 07A9     		add	r1, sp, #28
 1039 003e 0E48     		ldr	r0, .L65
 1040 0040 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 1041              	.LVL40:
 485:Core/Src/main.c ****   {
 1042              		.loc 1 485 6 view .LVU377
 1043 0044 98B9     		cbnz	r0, .L63
 489:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 1044              		.loc 1 489 3 is_stmt 1 view .LVU378
 489:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 1045              		.loc 1 489 20 is_stmt 0 view .LVU379
 1046 0046 6023     		movs	r3, #96
 1047 0048 0093     		str	r3, [sp]
 490:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 1048              		.loc 1 490 3 is_stmt 1 view .LVU380
 490:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 1049              		.loc 1 490 19 is_stmt 0 view .LVU381
 1050 004a 0023     		movs	r3, #0
 1051 004c 0193     		str	r3, [sp, #4]
 491:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 1052              		.loc 1 491 3 is_stmt 1 view .LVU382
 491:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 1053              		.loc 1 491 24 is_stmt 0 view .LVU383
 1054 004e 0293     		str	r3, [sp, #8]
 492:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_4) != HAL_OK)
 1055              		.loc 1 492 3 is_stmt 1 view .LVU384
 492:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_4) != HAL_OK)
 1056              		.loc 1 492 24 is_stmt 0 view .LVU385
 1057 0050 0493     		str	r3, [sp, #16]
 493:Core/Src/main.c ****   {
 1058              		.loc 1 493 3 is_stmt 1 view .LVU386
 493:Core/Src/main.c ****   {
 1059              		.loc 1 493 7 is_stmt 0 view .LVU387
 1060 0052 0C22     		movs	r2, #12
 1061 0054 6946     		mov	r1, sp
 1062 0056 0848     		ldr	r0, .L65
 1063 0058 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 1064              	.LVL41:
ARM GAS  /tmp/cc4iZfnV.s 			page 42


 493:Core/Src/main.c ****   {
 1065              		.loc 1 493 6 view .LVU388
 1066 005c 48B9     		cbnz	r0, .L64
 500:Core/Src/main.c **** 
 1067              		.loc 1 500 3 is_stmt 1 view .LVU389
 1068 005e 0648     		ldr	r0, .L65
 1069 0060 FFF7FEFF 		bl	HAL_TIM_MspPostInit
 1070              	.LVL42:
 502:Core/Src/main.c **** 
 1071              		.loc 1 502 1 is_stmt 0 view .LVU390
 1072 0064 0BB0     		add	sp, sp, #44
 1073              	.LCFI19:
 1074              		.cfi_remember_state
 1075              		.cfi_def_cfa_offset 4
 1076              		@ sp needed
 1077 0066 5DF804FB 		ldr	pc, [sp], #4
 1078              	.L62:
 1079              	.LCFI20:
 1080              		.cfi_restore_state
 481:Core/Src/main.c ****   }
 1081              		.loc 1 481 5 is_stmt 1 view .LVU391
 1082 006a FFF7FEFF 		bl	Error_Handler
 1083              	.LVL43:
 1084              	.L63:
 487:Core/Src/main.c ****   }
 1085              		.loc 1 487 5 view .LVU392
 1086 006e FFF7FEFF 		bl	Error_Handler
 1087              	.LVL44:
 1088              	.L64:
 495:Core/Src/main.c ****   }
 1089              		.loc 1 495 5 view .LVU393
 1090 0072 FFF7FEFF 		bl	Error_Handler
 1091              	.LVL45:
 1092              	.L66:
 1093 0076 00BF     		.align	2
 1094              	.L65:
 1095 0078 00000000 		.word	.LANCHOR5
 1096              		.cfi_endproc
 1097              	.LFE335:
 1099              		.section	.text.MX_TIM16_Init,"ax",%progbits
 1100              		.align	1
 1101              		.syntax unified
 1102              		.thumb
 1103              		.thumb_func
 1105              	MX_TIM16_Init:
 1106              	.LFB336:
 510:Core/Src/main.c **** 
 1107              		.loc 1 510 1 view -0
 1108              		.cfi_startproc
 1109              		@ args = 0, pretend = 0, frame = 0
 1110              		@ frame_needed = 0, uses_anonymous_args = 0
 1111 0000 08B5     		push	{r3, lr}
 1112              	.LCFI21:
 1113              		.cfi_def_cfa_offset 8
 1114              		.cfi_offset 3, -8
 1115              		.cfi_offset 14, -4
 519:Core/Src/main.c ****   htim16.Init.Prescaler = 0;
ARM GAS  /tmp/cc4iZfnV.s 			page 43


 1116              		.loc 1 519 3 view .LVU395
 519:Core/Src/main.c ****   htim16.Init.Prescaler = 0;
 1117              		.loc 1 519 19 is_stmt 0 view .LVU396
 1118 0002 0948     		ldr	r0, .L71
 1119 0004 094B     		ldr	r3, .L71+4
 1120 0006 0360     		str	r3, [r0]
 520:Core/Src/main.c ****   htim16.Init.CounterMode = TIM_COUNTERMODE_UP;
 1121              		.loc 1 520 3 is_stmt 1 view .LVU397
 520:Core/Src/main.c ****   htim16.Init.CounterMode = TIM_COUNTERMODE_UP;
 1122              		.loc 1 520 25 is_stmt 0 view .LVU398
 1123 0008 0023     		movs	r3, #0
 1124 000a 4360     		str	r3, [r0, #4]
 521:Core/Src/main.c ****   htim16.Init.Period = 65535;
 1125              		.loc 1 521 3 is_stmt 1 view .LVU399
 521:Core/Src/main.c ****   htim16.Init.Period = 65535;
 1126              		.loc 1 521 27 is_stmt 0 view .LVU400
 1127 000c 8360     		str	r3, [r0, #8]
 522:Core/Src/main.c ****   htim16.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 1128              		.loc 1 522 3 is_stmt 1 view .LVU401
 522:Core/Src/main.c ****   htim16.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 1129              		.loc 1 522 22 is_stmt 0 view .LVU402
 1130 000e 4FF6FF72 		movw	r2, #65535
 1131 0012 C260     		str	r2, [r0, #12]
 523:Core/Src/main.c ****   htim16.Init.RepetitionCounter = 0;
 1132              		.loc 1 523 3 is_stmt 1 view .LVU403
 523:Core/Src/main.c ****   htim16.Init.RepetitionCounter = 0;
 1133              		.loc 1 523 29 is_stmt 0 view .LVU404
 1134 0014 0361     		str	r3, [r0, #16]
 524:Core/Src/main.c ****   htim16.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 1135              		.loc 1 524 3 is_stmt 1 view .LVU405
 524:Core/Src/main.c ****   htim16.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 1136              		.loc 1 524 33 is_stmt 0 view .LVU406
 1137 0016 4361     		str	r3, [r0, #20]
 525:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim16) != HAL_OK)
 1138              		.loc 1 525 3 is_stmt 1 view .LVU407
 525:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim16) != HAL_OK)
 1139              		.loc 1 525 33 is_stmt 0 view .LVU408
 1140 0018 8361     		str	r3, [r0, #24]
 526:Core/Src/main.c ****   {
 1141              		.loc 1 526 3 is_stmt 1 view .LVU409
 526:Core/Src/main.c ****   {
 1142              		.loc 1 526 7 is_stmt 0 view .LVU410
 1143 001a FFF7FEFF 		bl	HAL_TIM_Base_Init
 1144              	.LVL46:
 526:Core/Src/main.c ****   {
 1145              		.loc 1 526 6 view .LVU411
 1146 001e 00B9     		cbnz	r0, .L70
 534:Core/Src/main.c **** 
 1147              		.loc 1 534 1 view .LVU412
 1148 0020 08BD     		pop	{r3, pc}
 1149              	.L70:
 528:Core/Src/main.c ****   }
 1150              		.loc 1 528 5 is_stmt 1 view .LVU413
 1151 0022 FFF7FEFF 		bl	Error_Handler
 1152              	.LVL47:
 1153              	.L72:
 1154 0026 00BF     		.align	2
ARM GAS  /tmp/cc4iZfnV.s 			page 44


 1155              	.L71:
 1156 0028 00000000 		.word	.LANCHOR6
 1157 002c 00440140 		.word	1073824768
 1158              		.cfi_endproc
 1159              	.LFE336:
 1161              		.section	.text.MX_TIM17_Init,"ax",%progbits
 1162              		.align	1
 1163              		.syntax unified
 1164              		.thumb
 1165              		.thumb_func
 1167              	MX_TIM17_Init:
 1168              	.LFB337:
 542:Core/Src/main.c **** 
 1169              		.loc 1 542 1 view -0
 1170              		.cfi_startproc
 1171              		@ args = 0, pretend = 0, frame = 0
 1172              		@ frame_needed = 0, uses_anonymous_args = 0
 1173 0000 08B5     		push	{r3, lr}
 1174              	.LCFI22:
 1175              		.cfi_def_cfa_offset 8
 1176              		.cfi_offset 3, -8
 1177              		.cfi_offset 14, -4
 551:Core/Src/main.c ****   htim17.Init.Prescaler = 0;
 1178              		.loc 1 551 3 view .LVU415
 551:Core/Src/main.c ****   htim17.Init.Prescaler = 0;
 1179              		.loc 1 551 19 is_stmt 0 view .LVU416
 1180 0002 0948     		ldr	r0, .L77
 1181 0004 094B     		ldr	r3, .L77+4
 1182 0006 0360     		str	r3, [r0]
 552:Core/Src/main.c ****   htim17.Init.CounterMode = TIM_COUNTERMODE_UP;
 1183              		.loc 1 552 3 is_stmt 1 view .LVU417
 552:Core/Src/main.c ****   htim17.Init.CounterMode = TIM_COUNTERMODE_UP;
 1184              		.loc 1 552 25 is_stmt 0 view .LVU418
 1185 0008 0023     		movs	r3, #0
 1186 000a 4360     		str	r3, [r0, #4]
 553:Core/Src/main.c ****   htim17.Init.Period = 65535;
 1187              		.loc 1 553 3 is_stmt 1 view .LVU419
 553:Core/Src/main.c ****   htim17.Init.Period = 65535;
 1188              		.loc 1 553 27 is_stmt 0 view .LVU420
 1189 000c 8360     		str	r3, [r0, #8]
 554:Core/Src/main.c ****   htim17.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 1190              		.loc 1 554 3 is_stmt 1 view .LVU421
 554:Core/Src/main.c ****   htim17.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 1191              		.loc 1 554 22 is_stmt 0 view .LVU422
 1192 000e 4FF6FF72 		movw	r2, #65535
 1193 0012 C260     		str	r2, [r0, #12]
 555:Core/Src/main.c ****   htim17.Init.RepetitionCounter = 0;
 1194              		.loc 1 555 3 is_stmt 1 view .LVU423
 555:Core/Src/main.c ****   htim17.Init.RepetitionCounter = 0;
 1195              		.loc 1 555 29 is_stmt 0 view .LVU424
 1196 0014 0361     		str	r3, [r0, #16]
 556:Core/Src/main.c ****   htim17.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 1197              		.loc 1 556 3 is_stmt 1 view .LVU425
 556:Core/Src/main.c ****   htim17.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 1198              		.loc 1 556 33 is_stmt 0 view .LVU426
 1199 0016 4361     		str	r3, [r0, #20]
 557:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim17) != HAL_OK)
ARM GAS  /tmp/cc4iZfnV.s 			page 45


 1200              		.loc 1 557 3 is_stmt 1 view .LVU427
 557:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim17) != HAL_OK)
 1201              		.loc 1 557 33 is_stmt 0 view .LVU428
 1202 0018 8361     		str	r3, [r0, #24]
 558:Core/Src/main.c ****   {
 1203              		.loc 1 558 3 is_stmt 1 view .LVU429
 558:Core/Src/main.c ****   {
 1204              		.loc 1 558 7 is_stmt 0 view .LVU430
 1205 001a FFF7FEFF 		bl	HAL_TIM_Base_Init
 1206              	.LVL48:
 558:Core/Src/main.c ****   {
 1207              		.loc 1 558 6 view .LVU431
 1208 001e 00B9     		cbnz	r0, .L76
 566:Core/Src/main.c **** 
 1209              		.loc 1 566 1 view .LVU432
 1210 0020 08BD     		pop	{r3, pc}
 1211              	.L76:
 560:Core/Src/main.c ****   }
 1212              		.loc 1 560 5 is_stmt 1 view .LVU433
 1213 0022 FFF7FEFF 		bl	Error_Handler
 1214              	.LVL49:
 1215              	.L78:
 1216 0026 00BF     		.align	2
 1217              	.L77:
 1218 0028 00000000 		.word	.LANCHOR7
 1219 002c 00480140 		.word	1073825792
 1220              		.cfi_endproc
 1221              	.LFE337:
 1223              		.section	.text.FDCAN_Config,"ax",%progbits
 1224              		.align	1
 1225              		.syntax unified
 1226              		.thumb
 1227              		.thumb_func
 1229              	FDCAN_Config:
 1230              	.LFB340:
 660:Core/Src/main.c **** 	FDCAN_FilterTypeDef sFilterConfig;
 1231              		.loc 1 660 1 view -0
 1232              		.cfi_startproc
 1233              		@ args = 0, pretend = 0, frame = 24
 1234              		@ frame_needed = 0, uses_anonymous_args = 0
 1235 0000 00B5     		push	{lr}
 1236              	.LCFI23:
 1237              		.cfi_def_cfa_offset 4
 1238              		.cfi_offset 14, -4
 1239 0002 89B0     		sub	sp, sp, #36
 1240              	.LCFI24:
 1241              		.cfi_def_cfa_offset 40
 661:Core/Src/main.c **** 
 1242              		.loc 1 661 2 view .LVU435
 664:Core/Src/main.c **** 	sFilterConfig.FilterIndex = 0;
 1243              		.loc 1 664 2 view .LVU436
 664:Core/Src/main.c **** 	sFilterConfig.FilterIndex = 0;
 1244              		.loc 1 664 23 is_stmt 0 view .LVU437
 1245 0004 0023     		movs	r3, #0
 1246 0006 0293     		str	r3, [sp, #8]
 665:Core/Src/main.c **** 	sFilterConfig.FilterType = FDCAN_FILTER_MASK;
 1247              		.loc 1 665 2 is_stmt 1 view .LVU438
ARM GAS  /tmp/cc4iZfnV.s 			page 46


 665:Core/Src/main.c **** 	sFilterConfig.FilterType = FDCAN_FILTER_MASK;
 1248              		.loc 1 665 28 is_stmt 0 view .LVU439
 1249 0008 0393     		str	r3, [sp, #12]
 666:Core/Src/main.c **** 	sFilterConfig.FilterConfig = FDCAN_FILTER_TO_RXFIFO0;
 1250              		.loc 1 666 2 is_stmt 1 view .LVU440
 666:Core/Src/main.c **** 	sFilterConfig.FilterConfig = FDCAN_FILTER_TO_RXFIFO0;
 1251              		.loc 1 666 27 is_stmt 0 view .LVU441
 1252 000a 0222     		movs	r2, #2
 1253 000c 0492     		str	r2, [sp, #16]
 667:Core/Src/main.c **** 	sFilterConfig.FilterID1 = 0x00;
 1254              		.loc 1 667 2 is_stmt 1 view .LVU442
 667:Core/Src/main.c **** 	sFilterConfig.FilterID1 = 0x00;
 1255              		.loc 1 667 29 is_stmt 0 view .LVU443
 1256 000e 0122     		movs	r2, #1
 1257 0010 0592     		str	r2, [sp, #20]
 668:Core/Src/main.c **** 	sFilterConfig.FilterID2 = 0x00;
 1258              		.loc 1 668 2 is_stmt 1 view .LVU444
 668:Core/Src/main.c **** 	sFilterConfig.FilterID2 = 0x00;
 1259              		.loc 1 668 26 is_stmt 0 view .LVU445
 1260 0012 0693     		str	r3, [sp, #24]
 669:Core/Src/main.c **** 	if (HAL_FDCAN_ConfigFilter(&hfdcan1, &sFilterConfig) != HAL_OK)
 1261              		.loc 1 669 2 is_stmt 1 view .LVU446
 669:Core/Src/main.c **** 	if (HAL_FDCAN_ConfigFilter(&hfdcan1, &sFilterConfig) != HAL_OK)
 1262              		.loc 1 669 26 is_stmt 0 view .LVU447
 1263 0014 0793     		str	r3, [sp, #28]
 670:Core/Src/main.c **** 	{
 1264              		.loc 1 670 2 is_stmt 1 view .LVU448
 670:Core/Src/main.c **** 	{
 1265              		.loc 1 670 6 is_stmt 0 view .LVU449
 1266 0016 02A9     		add	r1, sp, #8
 1267 0018 1B48     		ldr	r0, .L91
 1268 001a FFF7FEFF 		bl	HAL_FDCAN_ConfigFilter
 1269              	.LVL50:
 670:Core/Src/main.c **** 	{
 1270              		.loc 1 670 5 view .LVU450
 1271 001e 48BB     		cbnz	r0, .L86
 678:Core/Src/main.c **** 	{
 1272              		.loc 1 678 2 is_stmt 1 view .LVU451
 678:Core/Src/main.c **** 	{
 1273              		.loc 1 678 6 is_stmt 0 view .LVU452
 1274 0020 0023     		movs	r3, #0
 1275 0022 0093     		str	r3, [sp]
 1276 0024 0222     		movs	r2, #2
 1277 0026 1146     		mov	r1, r2
 1278 0028 1748     		ldr	r0, .L91
 1279 002a FFF7FEFF 		bl	HAL_FDCAN_ConfigGlobalFilter
 1280              	.LVL51:
 678:Core/Src/main.c **** 	{
 1281              		.loc 1 678 5 view .LVU453
 1282 002e 18BB     		cbnz	r0, .L87
 684:Core/Src/main.c **** 	{
 1283              		.loc 1 684 2 is_stmt 1 view .LVU454
 684:Core/Src/main.c **** 	{
 1284              		.loc 1 684 6 is_stmt 0 view .LVU455
 1285 0030 1548     		ldr	r0, .L91
 1286 0032 FFF7FEFF 		bl	HAL_FDCAN_Start
 1287              	.LVL52:
ARM GAS  /tmp/cc4iZfnV.s 			page 47


 684:Core/Src/main.c **** 	{
 1288              		.loc 1 684 5 view .LVU456
 1289 0036 08BB     		cbnz	r0, .L88
 689:Core/Src/main.c **** 	{
 1290              		.loc 1 689 2 is_stmt 1 view .LVU457
 689:Core/Src/main.c **** 	{
 1291              		.loc 1 689 6 is_stmt 0 view .LVU458
 1292 0038 0022     		movs	r2, #0
 1293 003a 0121     		movs	r1, #1
 1294 003c 1248     		ldr	r0, .L91
 1295 003e FFF7FEFF 		bl	HAL_FDCAN_ActivateNotification
 1296              	.LVL53:
 689:Core/Src/main.c **** 	{
 1297              		.loc 1 689 5 view .LVU459
 1298 0042 E8B9     		cbnz	r0, .L89
 693:Core/Src/main.c **** 	{
 1299              		.loc 1 693 3 is_stmt 1 view .LVU460
 693:Core/Src/main.c **** 	{
 1300              		.loc 1 693 7 is_stmt 0 view .LVU461
 1301 0044 0022     		movs	r2, #0
 1302 0046 0821     		movs	r1, #8
 1303 0048 0F48     		ldr	r0, .L91
 1304 004a FFF7FEFF 		bl	HAL_FDCAN_ActivateNotification
 1305              	.LVL54:
 693:Core/Src/main.c **** 	{
 1306              		.loc 1 693 6 view .LVU462
 1307 004e C8B9     		cbnz	r0, .L90
 699:Core/Src/main.c **** 	TxHeader.IdType = FDCAN_STANDARD_ID;
 1308              		.loc 1 699 2 is_stmt 1 view .LVU463
 699:Core/Src/main.c **** 	TxHeader.IdType = FDCAN_STANDARD_ID;
 1309              		.loc 1 699 22 is_stmt 0 view .LVU464
 1310 0050 0E4B     		ldr	r3, .L91+4
 1311 0052 40F22132 		movw	r2, #801
 1312 0056 1A60     		str	r2, [r3]
 700:Core/Src/main.c **** 	TxHeader.TxFrameType = FDCAN_DATA_FRAME;
 1313              		.loc 1 700 2 is_stmt 1 view .LVU465
 700:Core/Src/main.c **** 	TxHeader.TxFrameType = FDCAN_DATA_FRAME;
 1314              		.loc 1 700 18 is_stmt 0 view .LVU466
 1315 0058 0022     		movs	r2, #0
 1316 005a 5A60     		str	r2, [r3, #4]
 701:Core/Src/main.c **** 	TxHeader.DataLength = FDCAN_DLC_BYTES_2;
 1317              		.loc 1 701 2 is_stmt 1 view .LVU467
 701:Core/Src/main.c **** 	TxHeader.DataLength = FDCAN_DLC_BYTES_2;
 1318              		.loc 1 701 23 is_stmt 0 view .LVU468
 1319 005c 9A60     		str	r2, [r3, #8]
 702:Core/Src/main.c **** 	TxHeader.ErrorStateIndicator = FDCAN_ESI_ACTIVE;
 1320              		.loc 1 702 2 is_stmt 1 view .LVU469
 702:Core/Src/main.c **** 	TxHeader.ErrorStateIndicator = FDCAN_ESI_ACTIVE;
 1321              		.loc 1 702 22 is_stmt 0 view .LVU470
 1322 005e 4FF40031 		mov	r1, #131072
 1323 0062 D960     		str	r1, [r3, #12]
 703:Core/Src/main.c **** 	TxHeader.BitRateSwitch = FDCAN_BRS_OFF;
 1324              		.loc 1 703 2 is_stmt 1 view .LVU471
 703:Core/Src/main.c **** 	TxHeader.BitRateSwitch = FDCAN_BRS_OFF;
 1325              		.loc 1 703 31 is_stmt 0 view .LVU472
 1326 0064 1A61     		str	r2, [r3, #16]
 704:Core/Src/main.c **** 	TxHeader.FDFormat = FDCAN_CLASSIC_CAN;
ARM GAS  /tmp/cc4iZfnV.s 			page 48


 1327              		.loc 1 704 2 is_stmt 1 view .LVU473
 704:Core/Src/main.c **** 	TxHeader.FDFormat = FDCAN_CLASSIC_CAN;
 1328              		.loc 1 704 25 is_stmt 0 view .LVU474
 1329 0066 5A61     		str	r2, [r3, #20]
 705:Core/Src/main.c **** 	TxHeader.TxEventFifoControl = FDCAN_NO_TX_EVENTS;
 1330              		.loc 1 705 2 is_stmt 1 view .LVU475
 705:Core/Src/main.c **** 	TxHeader.TxEventFifoControl = FDCAN_NO_TX_EVENTS;
 1331              		.loc 1 705 20 is_stmt 0 view .LVU476
 1332 0068 9A61     		str	r2, [r3, #24]
 706:Core/Src/main.c **** 	TxHeader.MessageMarker = 0;
 1333              		.loc 1 706 2 is_stmt 1 view .LVU477
 706:Core/Src/main.c **** 	TxHeader.MessageMarker = 0;
 1334              		.loc 1 706 30 is_stmt 0 view .LVU478
 1335 006a DA61     		str	r2, [r3, #28]
 707:Core/Src/main.c **** }
 1336              		.loc 1 707 2 is_stmt 1 view .LVU479
 707:Core/Src/main.c **** }
 1337              		.loc 1 707 25 is_stmt 0 view .LVU480
 1338 006c 1A62     		str	r2, [r3, #32]
 708:Core/Src/main.c **** 
 1339              		.loc 1 708 1 view .LVU481
 1340 006e 09B0     		add	sp, sp, #36
 1341              	.LCFI25:
 1342              		.cfi_remember_state
 1343              		.cfi_def_cfa_offset 4
 1344              		@ sp needed
 1345 0070 5DF804FB 		ldr	pc, [sp], #4
 1346              	.L86:
 1347              	.LCFI26:
 1348              		.cfi_restore_state
 672:Core/Src/main.c **** 	}
 1349              		.loc 1 672 3 is_stmt 1 view .LVU482
 1350 0074 FFF7FEFF 		bl	Error_Handler
 1351              	.LVL55:
 1352              	.L87:
 680:Core/Src/main.c **** 	}
 1353              		.loc 1 680 3 view .LVU483
 1354 0078 FFF7FEFF 		bl	Error_Handler
 1355              	.LVL56:
 1356              	.L88:
 686:Core/Src/main.c **** 	}
 1357              		.loc 1 686 3 view .LVU484
 1358 007c FFF7FEFF 		bl	Error_Handler
 1359              	.LVL57:
 1360              	.L89:
 691:Core/Src/main.c **** 	}
 1361              		.loc 1 691 3 view .LVU485
 1362 0080 FFF7FEFF 		bl	Error_Handler
 1363              	.LVL58:
 1364              	.L90:
 695:Core/Src/main.c **** 	}
 1365              		.loc 1 695 3 view .LVU486
 1366 0084 FFF7FEFF 		bl	Error_Handler
 1367              	.LVL59:
 1368              	.L92:
 1369              		.align	2
 1370              	.L91:
ARM GAS  /tmp/cc4iZfnV.s 			page 49


 1371 0088 00000000 		.word	.LANCHOR2
 1372 008c 00000000 		.word	.LANCHOR8
 1373              		.cfi_endproc
 1374              	.LFE340:
 1376              		.section	.text.SystemClock_Config,"ax",%progbits
 1377              		.align	1
 1378              		.global	SystemClock_Config
 1379              		.syntax unified
 1380              		.thumb
 1381              		.thumb_func
 1383              	SystemClock_Config:
 1384              	.LFB330:
 163:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 1385              		.loc 1 163 1 view -0
 1386              		.cfi_startproc
 1387              		@ args = 0, pretend = 0, frame = 144
 1388              		@ frame_needed = 0, uses_anonymous_args = 0
 1389 0000 10B5     		push	{r4, lr}
 1390              	.LCFI27:
 1391              		.cfi_def_cfa_offset 8
 1392              		.cfi_offset 4, -8
 1393              		.cfi_offset 14, -4
 1394 0002 A4B0     		sub	sp, sp, #144
 1395              	.LCFI28:
 1396              		.cfi_def_cfa_offset 152
 164:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1397              		.loc 1 164 3 view .LVU488
 164:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1398              		.loc 1 164 22 is_stmt 0 view .LVU489
 1399 0004 3822     		movs	r2, #56
 1400 0006 0021     		movs	r1, #0
 1401 0008 16A8     		add	r0, sp, #88
 1402 000a FFF7FEFF 		bl	memset
 1403              	.LVL60:
 165:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 1404              		.loc 1 165 3 is_stmt 1 view .LVU490
 165:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 1405              		.loc 1 165 22 is_stmt 0 view .LVU491
 1406 000e 0024     		movs	r4, #0
 1407 0010 1194     		str	r4, [sp, #68]
 1408 0012 1294     		str	r4, [sp, #72]
 1409 0014 1394     		str	r4, [sp, #76]
 1410 0016 1494     		str	r4, [sp, #80]
 1411 0018 1594     		str	r4, [sp, #84]
 166:Core/Src/main.c **** 
 1412              		.loc 1 166 3 is_stmt 1 view .LVU492
 166:Core/Src/main.c **** 
 1413              		.loc 1 166 28 is_stmt 0 view .LVU493
 1414 001a 4422     		movs	r2, #68
 1415 001c 2146     		mov	r1, r4
 1416 001e 6846     		mov	r0, sp
 1417 0020 FFF7FEFF 		bl	memset
 1418              	.LVL61:
 170:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 1419              		.loc 1 170 3 is_stmt 1 view .LVU494
 1420 0024 2046     		mov	r0, r4
 1421 0026 FFF7FEFF 		bl	HAL_PWREx_ControlVoltageScaling
ARM GAS  /tmp/cc4iZfnV.s 			page 50


 1422              	.LVL62:
 174:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 1423              		.loc 1 174 3 view .LVU495
 174:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 1424              		.loc 1 174 36 is_stmt 0 view .LVU496
 1425 002a 0223     		movs	r3, #2
 1426 002c 1693     		str	r3, [sp, #88]
 175:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 1427              		.loc 1 175 3 is_stmt 1 view .LVU497
 175:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 1428              		.loc 1 175 30 is_stmt 0 view .LVU498
 1429 002e 4FF48072 		mov	r2, #256
 1430 0032 1992     		str	r2, [sp, #100]
 176:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1431              		.loc 1 176 3 is_stmt 1 view .LVU499
 176:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1432              		.loc 1 176 41 is_stmt 0 view .LVU500
 1433 0034 4022     		movs	r2, #64
 1434 0036 1A92     		str	r2, [sp, #104]
 177:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 1435              		.loc 1 177 3 is_stmt 1 view .LVU501
 177:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 1436              		.loc 1 177 34 is_stmt 0 view .LVU502
 1437 0038 1D93     		str	r3, [sp, #116]
 178:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = RCC_PLLM_DIV1;
 1438              		.loc 1 178 3 is_stmt 1 view .LVU503
 178:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = RCC_PLLM_DIV1;
 1439              		.loc 1 178 35 is_stmt 0 view .LVU504
 1440 003a 1E93     		str	r3, [sp, #120]
 179:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 20;
 1441              		.loc 1 179 3 is_stmt 1 view .LVU505
 179:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 20;
 1442              		.loc 1 179 30 is_stmt 0 view .LVU506
 1443 003c 0122     		movs	r2, #1
 1444 003e 1F92     		str	r2, [sp, #124]
 180:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 1445              		.loc 1 180 3 is_stmt 1 view .LVU507
 180:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 1446              		.loc 1 180 30 is_stmt 0 view .LVU508
 1447 0040 1422     		movs	r2, #20
 1448 0042 2092     		str	r2, [sp, #128]
 181:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = RCC_PLLQ_DIV2;
 1449              		.loc 1 181 3 is_stmt 1 view .LVU509
 181:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = RCC_PLLQ_DIV2;
 1450              		.loc 1 181 30 is_stmt 0 view .LVU510
 1451 0044 2193     		str	r3, [sp, #132]
 182:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
 1452              		.loc 1 182 3 is_stmt 1 view .LVU511
 182:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
 1453              		.loc 1 182 30 is_stmt 0 view .LVU512
 1454 0046 2293     		str	r3, [sp, #136]
 183:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1455              		.loc 1 183 3 is_stmt 1 view .LVU513
 183:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1456              		.loc 1 183 30 is_stmt 0 view .LVU514
 1457 0048 2393     		str	r3, [sp, #140]
 184:Core/Src/main.c ****   {
ARM GAS  /tmp/cc4iZfnV.s 			page 51


 1458              		.loc 1 184 3 is_stmt 1 view .LVU515
 184:Core/Src/main.c ****   {
 1459              		.loc 1 184 7 is_stmt 0 view .LVU516
 1460 004a 16A8     		add	r0, sp, #88
 1461 004c FFF7FEFF 		bl	HAL_RCC_OscConfig
 1462              	.LVL63:
 184:Core/Src/main.c ****   {
 1463              		.loc 1 184 6 view .LVU517
 1464 0050 E8B9     		cbnz	r0, .L98
 190:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1465              		.loc 1 190 3 is_stmt 1 view .LVU518
 190:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1466              		.loc 1 190 31 is_stmt 0 view .LVU519
 1467 0052 0F23     		movs	r3, #15
 1468 0054 1193     		str	r3, [sp, #68]
 192:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1469              		.loc 1 192 3 is_stmt 1 view .LVU520
 192:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1470              		.loc 1 192 34 is_stmt 0 view .LVU521
 1471 0056 0323     		movs	r3, #3
 1472 0058 1293     		str	r3, [sp, #72]
 193:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 1473              		.loc 1 193 3 is_stmt 1 view .LVU522
 193:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 1474              		.loc 1 193 35 is_stmt 0 view .LVU523
 1475 005a 0023     		movs	r3, #0
 1476 005c 1393     		str	r3, [sp, #76]
 194:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 1477              		.loc 1 194 3 is_stmt 1 view .LVU524
 194:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 1478              		.loc 1 194 36 is_stmt 0 view .LVU525
 1479 005e 1493     		str	r3, [sp, #80]
 195:Core/Src/main.c **** 
 1480              		.loc 1 195 3 is_stmt 1 view .LVU526
 195:Core/Src/main.c **** 
 1481              		.loc 1 195 36 is_stmt 0 view .LVU527
 1482 0060 1593     		str	r3, [sp, #84]
 197:Core/Src/main.c ****   {
 1483              		.loc 1 197 3 is_stmt 1 view .LVU528
 197:Core/Src/main.c ****   {
 1484              		.loc 1 197 7 is_stmt 0 view .LVU529
 1485 0062 0421     		movs	r1, #4
 1486 0064 11A8     		add	r0, sp, #68
 1487 0066 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 1488              	.LVL64:
 197:Core/Src/main.c ****   {
 1489              		.loc 1 197 6 view .LVU530
 1490 006a 90B9     		cbnz	r0, .L99
 203:Core/Src/main.c ****                               |RCC_PERIPHCLK_FDCAN;
 1491              		.loc 1 203 3 is_stmt 1 view .LVU531
 203:Core/Src/main.c ****                               |RCC_PERIPHCLK_FDCAN;
 1492              		.loc 1 203 38 is_stmt 0 view .LVU532
 1493 006c 49F20103 		movw	r3, #36865
 1494 0070 0093     		str	r3, [sp]
 205:Core/Src/main.c ****   PeriphClkInit.FdcanClockSelection = RCC_FDCANCLKSOURCE_PCLK1;
 1495              		.loc 1 205 3 is_stmt 1 view .LVU533
 205:Core/Src/main.c ****   PeriphClkInit.FdcanClockSelection = RCC_FDCANCLKSOURCE_PCLK1;
ARM GAS  /tmp/cc4iZfnV.s 			page 52


 1496              		.loc 1 205 38 is_stmt 0 view .LVU534
 1497 0072 0023     		movs	r3, #0
 1498 0074 0193     		str	r3, [sp, #4]
 206:Core/Src/main.c ****   PeriphClkInit.Adc12ClockSelection = RCC_ADC12CLKSOURCE_SYSCLK;
 1499              		.loc 1 206 3 is_stmt 1 view .LVU535
 206:Core/Src/main.c ****   PeriphClkInit.Adc12ClockSelection = RCC_ADC12CLKSOURCE_SYSCLK;
 1500              		.loc 1 206 37 is_stmt 0 view .LVU536
 1501 0076 4FF00073 		mov	r3, #33554432
 1502 007a 0C93     		str	r3, [sp, #48]
 207:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 1503              		.loc 1 207 3 is_stmt 1 view .LVU537
 207:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 1504              		.loc 1 207 37 is_stmt 0 view .LVU538
 1505 007c 4FF00053 		mov	r3, #536870912
 1506 0080 0F93     		str	r3, [sp, #60]
 208:Core/Src/main.c ****   {
 1507              		.loc 1 208 3 is_stmt 1 view .LVU539
 208:Core/Src/main.c ****   {
 1508              		.loc 1 208 7 is_stmt 0 view .LVU540
 1509 0082 6846     		mov	r0, sp
 1510 0084 FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 1511              	.LVL65:
 208:Core/Src/main.c ****   {
 1512              		.loc 1 208 6 view .LVU541
 1513 0088 28B9     		cbnz	r0, .L100
 212:Core/Src/main.c **** 
 1514              		.loc 1 212 1 view .LVU542
 1515 008a 24B0     		add	sp, sp, #144
 1516              	.LCFI29:
 1517              		.cfi_remember_state
 1518              		.cfi_def_cfa_offset 8
 1519              		@ sp needed
 1520 008c 10BD     		pop	{r4, pc}
 1521              	.L98:
 1522              	.LCFI30:
 1523              		.cfi_restore_state
 186:Core/Src/main.c ****   }
 1524              		.loc 1 186 5 is_stmt 1 view .LVU543
 1525 008e FFF7FEFF 		bl	Error_Handler
 1526              	.LVL66:
 1527              	.L99:
 199:Core/Src/main.c ****   }
 1528              		.loc 1 199 5 view .LVU544
 1529 0092 FFF7FEFF 		bl	Error_Handler
 1530              	.LVL67:
 1531              	.L100:
 210:Core/Src/main.c ****   }
 1532              		.loc 1 210 5 view .LVU545
 1533 0096 FFF7FEFF 		bl	Error_Handler
 1534              	.LVL68:
 1535              		.cfi_endproc
 1536              	.LFE330:
 1538              		.section	.text.main,"ax",%progbits
 1539              		.align	1
 1540              		.global	main
 1541              		.syntax unified
 1542              		.thumb
ARM GAS  /tmp/cc4iZfnV.s 			page 53


 1543              		.thumb_func
 1545              	main:
 1546              	.LFB329:
  89:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 1547              		.loc 1 89 1 view -0
 1548              		.cfi_startproc
 1549              		@ Volatile: function does not return.
 1550              		@ args = 0, pretend = 0, frame = 0
 1551              		@ frame_needed = 0, uses_anonymous_args = 0
 1552 0000 08B5     		push	{r3, lr}
 1553              	.LCFI31:
 1554              		.cfi_def_cfa_offset 8
 1555              		.cfi_offset 3, -8
 1556              		.cfi_offset 14, -4
  97:Core/Src/main.c **** 
 1557              		.loc 1 97 3 view .LVU547
 1558 0002 FFF7FEFF 		bl	HAL_Init
 1559              	.LVL69:
 104:Core/Src/main.c **** 
 1560              		.loc 1 104 3 view .LVU548
 1561 0006 FFF7FEFF 		bl	SystemClock_Config
 1562              	.LVL70:
 111:Core/Src/main.c ****   MX_ADC1_Init();
 1563              		.loc 1 111 3 view .LVU549
 1564 000a FFF7FEFF 		bl	MX_GPIO_Init
 1565              	.LVL71:
 112:Core/Src/main.c ****   MX_ADC2_Init();
 1566              		.loc 1 112 3 view .LVU550
 1567 000e FFF7FEFF 		bl	MX_ADC1_Init
 1568              	.LVL72:
 113:Core/Src/main.c ****   MX_FDCAN1_Init();
 1569              		.loc 1 113 3 view .LVU551
 1570 0012 FFF7FEFF 		bl	MX_ADC2_Init
 1571              	.LVL73:
 114:Core/Src/main.c ****   MX_TIM1_Init();
 1572              		.loc 1 114 3 view .LVU552
 1573 0016 FFF7FEFF 		bl	MX_FDCAN1_Init
 1574              	.LVL74:
 115:Core/Src/main.c ****   MX_USART1_UART_Init();
 1575              		.loc 1 115 3 view .LVU553
 1576 001a FFF7FEFF 		bl	MX_TIM1_Init
 1577              	.LVL75:
 116:Core/Src/main.c ****   MX_TIM2_Init();
 1578              		.loc 1 116 3 view .LVU554
 1579 001e FFF7FEFF 		bl	MX_USART1_UART_Init
 1580              	.LVL76:
 117:Core/Src/main.c ****   MX_TIM16_Init();
 1581              		.loc 1 117 3 view .LVU555
 1582 0022 FFF7FEFF 		bl	MX_TIM2_Init
 1583              	.LVL77:
 118:Core/Src/main.c ****   MX_TIM17_Init();
 1584              		.loc 1 118 3 view .LVU556
 1585 0026 FFF7FEFF 		bl	MX_TIM16_Init
 1586              	.LVL78:
 119:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 1587              		.loc 1 119 3 view .LVU557
 1588 002a FFF7FEFF 		bl	MX_TIM17_Init
ARM GAS  /tmp/cc4iZfnV.s 			page 54


 1589              	.LVL79:
 123:Core/Src/main.c ****   /* USER CODE END 2 */
 1590              		.loc 1 123 4 view .LVU558
 1591 002e FFF7FEFF 		bl	FDCAN_Config
 1592              	.LVL80:
 1593 0032 0DE0     		b	.L103
 1594              	.L102:
 150:Core/Src/main.c ****         HAL_Delay(10);
 1595              		.loc 1 150 3 view .LVU559
 1596 0034 1548     		ldr	r0, .L105
 1597 0036 FFF7FEFF 		bl	HAL_FDCAN_IRQHandler
 1598              	.LVL81:
 151:Core/Src/main.c **** 		HAL_GPIO_TogglePin(GPIOC,GPIO_PIN_15);
 1599              		.loc 1 151 9 view .LVU560
 1600 003a 0A20     		movs	r0, #10
 1601 003c FFF7FEFF 		bl	HAL_Delay
 1602              	.LVL82:
 152:Core/Src/main.c **** 		HAL_Delay(100);
 1603              		.loc 1 152 3 view .LVU561
 1604 0040 4FF40041 		mov	r1, #32768
 1605 0044 1248     		ldr	r0, .L105+4
 1606 0046 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1607              	.LVL83:
 153:Core/Src/main.c **** 	}
 1608              		.loc 1 153 3 view .LVU562
 1609 004a 6420     		movs	r0, #100
 1610 004c FFF7FEFF 		bl	HAL_Delay
 1611              	.LVL84:
 128:Core/Src/main.c **** 	{
 1612              		.loc 1 128 8 view .LVU563
 1613              	.L103:
 128:Core/Src/main.c **** 	{
 1614              		.loc 1 128 2 view .LVU564
 134:Core/Src/main.c ****         TxData[1] = 0xAD;
 1615              		.loc 1 134 9 view .LVU565
 134:Core/Src/main.c ****         TxData[1] = 0xAD;
 1616              		.loc 1 134 19 is_stmt 0 view .LVU566
 1617 0050 104B     		ldr	r3, .L105+8
 1618 0052 114A     		ldr	r2, .L105+12
 1619 0054 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1620 0056 1A70     		strb	r2, [r3]
 135:Core/Src/main.c **** 		batata = HAL_FDCAN_GetRxFifoFillLevel(&hfdcan1, FDCAN_RX_FIFO0);
 1621              		.loc 1 135 9 is_stmt 1 view .LVU567
 135:Core/Src/main.c **** 		batata = HAL_FDCAN_GetRxFifoFillLevel(&hfdcan1, FDCAN_RX_FIFO0);
 1622              		.loc 1 135 19 is_stmt 0 view .LVU568
 1623 0058 AD22     		movs	r2, #173
 1624 005a 5A70     		strb	r2, [r3, #1]
 136:Core/Src/main.c ****         /* Start the Transmission process */
 1625              		.loc 1 136 3 is_stmt 1 view .LVU569
 136:Core/Src/main.c ****         /* Start the Transmission process */
 1626              		.loc 1 136 12 is_stmt 0 view .LVU570
 1627 005c 0B4C     		ldr	r4, .L105
 1628 005e 4021     		movs	r1, #64
 1629 0060 2046     		mov	r0, r4
 1630 0062 FFF7FEFF 		bl	HAL_FDCAN_GetRxFifoFillLevel
 1631              	.LVL85:
 136:Core/Src/main.c ****         /* Start the Transmission process */
ARM GAS  /tmp/cc4iZfnV.s 			page 55


 1632              		.loc 1 136 10 view .LVU571
 1633 0066 0D4B     		ldr	r3, .L105+16
 1634 0068 1870     		strb	r0, [r3]
 144:Core/Src/main.c **** 			if (HAL_FDCAN_GetRxMessage(&hfdcan1, FDCAN_RX_FIFO0, &RxHeader, RxData) != HAL_OK)
 1635              		.loc 1 144 3 is_stmt 1 view .LVU572
 144:Core/Src/main.c **** 			if (HAL_FDCAN_GetRxMessage(&hfdcan1, FDCAN_RX_FIFO0, &RxHeader, RxData) != HAL_OK)
 1636              		.loc 1 144 6 is_stmt 0 view .LVU573
 1637 006a 4021     		movs	r1, #64
 1638 006c 2046     		mov	r0, r4
 1639 006e FFF7FEFF 		bl	HAL_FDCAN_GetRxFifoFillLevel
 1640              	.LVL86:
 144:Core/Src/main.c **** 			if (HAL_FDCAN_GetRxMessage(&hfdcan1, FDCAN_RX_FIFO0, &RxHeader, RxData) != HAL_OK)
 1641              		.loc 1 144 5 view .LVU574
 1642 0072 0028     		cmp	r0, #0
 1643 0074 DED0     		beq	.L102
 145:Core/Src/main.c **** 			{
 1644              		.loc 1 145 4 is_stmt 1 view .LVU575
 145:Core/Src/main.c **** 			{
 1645              		.loc 1 145 8 is_stmt 0 view .LVU576
 1646 0076 0A4B     		ldr	r3, .L105+20
 1647 0078 0A4A     		ldr	r2, .L105+24
 1648 007a 4021     		movs	r1, #64
 1649 007c 2046     		mov	r0, r4
 1650 007e FFF7FEFF 		bl	HAL_FDCAN_GetRxMessage
 1651              	.LVL87:
 145:Core/Src/main.c **** 			{
 1652              		.loc 1 145 7 view .LVU577
 1653 0082 0028     		cmp	r0, #0
 1654 0084 D6D0     		beq	.L102
 147:Core/Src/main.c **** 			}
 1655              		.loc 1 147 4 is_stmt 1 view .LVU578
 1656 0086 FFF7FEFF 		bl	Error_Handler
 1657              	.LVL88:
 1658              	.L106:
 1659 008a 00BF     		.align	2
 1660              	.L105:
 1661 008c 00000000 		.word	.LANCHOR2
 1662 0090 00080048 		.word	1207961600
 1663 0094 00000000 		.word	.LANCHOR9
 1664 0098 00000000 		.word	.LANCHOR10
 1665 009c 00000000 		.word	.LANCHOR11
 1666 00a0 00000000 		.word	.LANCHOR12
 1667 00a4 00000000 		.word	.LANCHOR13
 1668              		.cfi_endproc
 1669              	.LFE329:
 1671              		.section	.text.HAL_FDCAN_RxFifo0Callback,"ax",%progbits
 1672              		.align	1
 1673              		.global	HAL_FDCAN_RxFifo0Callback
 1674              		.syntax unified
 1675              		.thumb
 1676              		.thumb_func
 1678              	HAL_FDCAN_RxFifo0Callback:
 1679              	.LVL89:
 1680              	.LFB341:
 711:Core/Src/main.c ****   if((RxFifo0ITs & FDCAN_IT_RX_FIFO0_NEW_MESSAGE) != RESET)
 1681              		.loc 1 711 1 view -0
 1682              		.cfi_startproc
ARM GAS  /tmp/cc4iZfnV.s 			page 56


 1683              		@ args = 0, pretend = 0, frame = 0
 1684              		@ frame_needed = 0, uses_anonymous_args = 0
 712:Core/Src/main.c ****   {
 1685              		.loc 1 712 3 view .LVU580
 712:Core/Src/main.c ****   {
 1686              		.loc 1 712 5 is_stmt 0 view .LVU581
 1687 0000 11F0010F 		tst	r1, #1
 1688 0004 00D1     		bne	.L114
 1689 0006 7047     		bx	lr
 1690              	.L114:
 711:Core/Src/main.c ****   if((RxFifo0ITs & FDCAN_IT_RX_FIFO0_NEW_MESSAGE) != RESET)
 1691              		.loc 1 711 1 view .LVU582
 1692 0008 08B5     		push	{r3, lr}
 1693              	.LCFI32:
 1694              		.cfi_def_cfa_offset 8
 1695              		.cfi_offset 3, -8
 1696              		.cfi_offset 14, -4
 715:Core/Src/main.c ****     {
 1697              		.loc 1 715 5 is_stmt 1 view .LVU583
 715:Core/Src/main.c ****     {
 1698              		.loc 1 715 9 is_stmt 0 view .LVU584
 1699 000a 074B     		ldr	r3, .L116
 1700 000c 074A     		ldr	r2, .L116+4
 1701 000e 4021     		movs	r1, #64
 1702              	.LVL90:
 715:Core/Src/main.c ****     {
 1703              		.loc 1 715 9 view .LVU585
 1704 0010 FFF7FEFF 		bl	HAL_FDCAN_GetRxMessage
 1705              	.LVL91:
 715:Core/Src/main.c ****     {
 1706              		.loc 1 715 8 view .LVU586
 1707 0014 28B9     		cbnz	r0, .L115
 720:Core/Src/main.c ****   }
 1708              		.loc 1 720 2 is_stmt 1 view .LVU587
 1709 0016 4FF48041 		mov	r1, #16384
 1710 001a 0548     		ldr	r0, .L116+8
 1711 001c FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1712              	.LVL92:
 722:Core/Src/main.c **** void HAL_FDCAN_RxFifo1Callback(FDCAN_HandleTypeDef *hfdcan, uint32_t RxFifo1ITs)
 1713              		.loc 1 722 1 is_stmt 0 view .LVU588
 1714 0020 08BD     		pop	{r3, pc}
 1715              	.L115:
 717:Core/Src/main.c ****     }
 1716              		.loc 1 717 5 is_stmt 1 view .LVU589
 1717 0022 FFF7FEFF 		bl	Error_Handler
 1718              	.LVL93:
 1719              	.L117:
 1720 0026 00BF     		.align	2
 1721              	.L116:
 1722 0028 00000000 		.word	.LANCHOR12
 1723 002c 00000000 		.word	.LANCHOR13
 1724 0030 00080048 		.word	1207961600
 1725              		.cfi_endproc
 1726              	.LFE341:
 1728              		.section	.text.HAL_FDCAN_RxFifo1Callback,"ax",%progbits
 1729              		.align	1
 1730              		.global	HAL_FDCAN_RxFifo1Callback
ARM GAS  /tmp/cc4iZfnV.s 			page 57


 1731              		.syntax unified
 1732              		.thumb
 1733              		.thumb_func
 1735              	HAL_FDCAN_RxFifo1Callback:
 1736              	.LVL94:
 1737              	.LFB342:
 724:Core/Src/main.c ****   if((RxFifo1ITs & FDCAN_IT_RX_FIFO1_NEW_MESSAGE) != RESET)
 1738              		.loc 1 724 1 view -0
 1739              		.cfi_startproc
 1740              		@ args = 0, pretend = 0, frame = 0
 1741              		@ frame_needed = 0, uses_anonymous_args = 0
 725:Core/Src/main.c ****   {
 1742              		.loc 1 725 3 view .LVU591
 725:Core/Src/main.c ****   {
 1743              		.loc 1 725 5 is_stmt 0 view .LVU592
 1744 0000 11F0080F 		tst	r1, #8
 1745 0004 00D1     		bne	.L125
 1746 0006 7047     		bx	lr
 1747              	.L125:
 724:Core/Src/main.c ****   if((RxFifo1ITs & FDCAN_IT_RX_FIFO1_NEW_MESSAGE) != RESET)
 1748              		.loc 1 724 1 view .LVU593
 1749 0008 08B5     		push	{r3, lr}
 1750              	.LCFI33:
 1751              		.cfi_def_cfa_offset 8
 1752              		.cfi_offset 3, -8
 1753              		.cfi_offset 14, -4
 728:Core/Src/main.c ****     {
 1754              		.loc 1 728 5 is_stmt 1 view .LVU594
 728:Core/Src/main.c ****     {
 1755              		.loc 1 728 9 is_stmt 0 view .LVU595
 1756 000a 074B     		ldr	r3, .L127
 1757 000c 074A     		ldr	r2, .L127+4
 1758 000e 4121     		movs	r1, #65
 1759              	.LVL95:
 728:Core/Src/main.c ****     {
 1760              		.loc 1 728 9 view .LVU596
 1761 0010 FFF7FEFF 		bl	HAL_FDCAN_GetRxMessage
 1762              	.LVL96:
 728:Core/Src/main.c ****     {
 1763              		.loc 1 728 8 view .LVU597
 1764 0014 28B9     		cbnz	r0, .L126
 733:Core/Src/main.c ****   }
 1765              		.loc 1 733 2 is_stmt 1 view .LVU598
 1766 0016 4FF48041 		mov	r1, #16384
 1767 001a 0548     		ldr	r0, .L127+8
 1768 001c FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1769              	.LVL97:
 735:Core/Src/main.c **** 
 1770              		.loc 1 735 1 is_stmt 0 view .LVU599
 1771 0020 08BD     		pop	{r3, pc}
 1772              	.L126:
 730:Core/Src/main.c ****     }
 1773              		.loc 1 730 5 is_stmt 1 view .LVU600
 1774 0022 FFF7FEFF 		bl	Error_Handler
 1775              	.LVL98:
 1776              	.L128:
 1777 0026 00BF     		.align	2
ARM GAS  /tmp/cc4iZfnV.s 			page 58


 1778              	.L127:
 1779 0028 00000000 		.word	.LANCHOR12
 1780 002c 00000000 		.word	.LANCHOR13
 1781 0030 00080048 		.word	1207961600
 1782              		.cfi_endproc
 1783              	.LFE342:
 1785              		.global	TxData
 1786              		.global	TxHeader
 1787              		.global	RxData
 1788              		.global	RxHeader
 1789              		.global	ubKeyNumber
 1790              		.global	batata
 1791              		.global	huart1
 1792              		.global	htim17
 1793              		.global	htim16
 1794              		.global	htim2
 1795              		.global	htim1
 1796              		.global	hfdcan1
 1797              		.global	hadc2
 1798              		.global	hadc1
 1799              		.section	.bss.RxData,"aw",%nobits
 1800              		.align	2
 1801              		.set	.LANCHOR12,. + 0
 1804              	RxData:
 1805 0000 00000000 		.space	8
 1805      00000000 
 1806              		.section	.bss.RxHeader,"aw",%nobits
 1807              		.align	2
 1808              		.set	.LANCHOR13,. + 0
 1811              	RxHeader:
 1812 0000 00000000 		.space	40
 1812      00000000 
 1812      00000000 
 1812      00000000 
 1812      00000000 
 1813              		.section	.bss.TxData,"aw",%nobits
 1814              		.align	2
 1815              		.set	.LANCHOR9,. + 0
 1818              	TxData:
 1819 0000 00000000 		.space	8
 1819      00000000 
 1820              		.section	.bss.TxHeader,"aw",%nobits
 1821              		.align	2
 1822              		.set	.LANCHOR8,. + 0
 1825              	TxHeader:
 1826 0000 00000000 		.space	36
 1826      00000000 
 1826      00000000 
 1826      00000000 
 1826      00000000 
 1827              		.section	.bss.batata,"aw",%nobits
 1828              		.set	.LANCHOR11,. + 0
 1831              	batata:
 1832 0000 00       		.space	1
 1833              		.section	.bss.hadc1,"aw",%nobits
 1834              		.align	2
 1835              		.set	.LANCHOR0,. + 0
ARM GAS  /tmp/cc4iZfnV.s 			page 59


 1838              	hadc1:
 1839 0000 00000000 		.space	108
 1839      00000000 
 1839      00000000 
 1839      00000000 
 1839      00000000 
 1840              		.section	.bss.hadc2,"aw",%nobits
 1841              		.align	2
 1842              		.set	.LANCHOR1,. + 0
 1845              	hadc2:
 1846 0000 00000000 		.space	108
 1846      00000000 
 1846      00000000 
 1846      00000000 
 1846      00000000 
 1847              		.section	.bss.hfdcan1,"aw",%nobits
 1848              		.align	2
 1849              		.set	.LANCHOR2,. + 0
 1852              	hfdcan1:
 1853 0000 00000000 		.space	100
 1853      00000000 
 1853      00000000 
 1853      00000000 
 1853      00000000 
 1854              		.section	.bss.htim1,"aw",%nobits
 1855              		.align	2
 1856              		.set	.LANCHOR3,. + 0
 1859              	htim1:
 1860 0000 00000000 		.space	76
 1860      00000000 
 1860      00000000 
 1860      00000000 
 1860      00000000 
 1861              		.section	.bss.htim16,"aw",%nobits
 1862              		.align	2
 1863              		.set	.LANCHOR6,. + 0
 1866              	htim16:
 1867 0000 00000000 		.space	76
 1867      00000000 
 1867      00000000 
 1867      00000000 
 1867      00000000 
 1868              		.section	.bss.htim17,"aw",%nobits
 1869              		.align	2
 1870              		.set	.LANCHOR7,. + 0
 1873              	htim17:
 1874 0000 00000000 		.space	76
 1874      00000000 
 1874      00000000 
 1874      00000000 
 1874      00000000 
 1875              		.section	.bss.htim2,"aw",%nobits
 1876              		.align	2
 1877              		.set	.LANCHOR5,. + 0
 1880              	htim2:
 1881 0000 00000000 		.space	76
 1881      00000000 
ARM GAS  /tmp/cc4iZfnV.s 			page 60


 1881      00000000 
 1881      00000000 
 1881      00000000 
 1882              		.section	.bss.huart1,"aw",%nobits
 1883              		.align	2
 1884              		.set	.LANCHOR4,. + 0
 1887              	huart1:
 1888 0000 00000000 		.space	144
 1888      00000000 
 1888      00000000 
 1888      00000000 
 1888      00000000 
 1889              		.section	.bss.ubKeyNumber,"aw",%nobits
 1890              		.set	.LANCHOR10,. + 0
 1893              	ubKeyNumber:
 1894 0000 00       		.space	1
 1895              		.text
 1896              	.Letext0:
 1897              		.file 3 "/home/alejopm/.config/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-tools/arm-n
 1898              		.file 4 "/home/alejopm/.config/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-tools/arm-n
 1899              		.file 5 "Drivers/CMSIS/Device/ST/STM32G4xx/Include/stm32g431xx.h"
 1900              		.file 6 "Drivers/CMSIS/Device/ST/STM32G4xx/Include/stm32g4xx.h"
 1901              		.file 7 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_def.h"
 1902              		.file 8 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_rcc.h"
 1903              		.file 9 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_rcc_ex.h"
 1904              		.file 10 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_gpio.h"
 1905              		.file 11 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_dma.h"
 1906              		.file 12 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_adc.h"
 1907              		.file 13 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_adc_ex.h"
 1908              		.file 14 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_fdcan.h"
 1909              		.file 15 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_tim.h"
 1910              		.file 16 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_uart.h"
 1911              		.file 17 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_pwr_ex.h"
 1912              		.file 18 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_uart_ex.h"
 1913              		.file 19 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_tim_ex.h"
 1914              		.file 20 "Core/Inc/main.h"
 1915              		.file 21 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal.h"
 1916              		.file 22 "<built-in>"
ARM GAS  /tmp/cc4iZfnV.s 			page 61


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/cc4iZfnV.s:20     .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/cc4iZfnV.s:25     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/cc4iZfnV.s:181    .text.MX_GPIO_Init:00000000000000b4 $d
     /tmp/cc4iZfnV.s:189    .text.Error_Handler:0000000000000000 $t
     /tmp/cc4iZfnV.s:195    .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/cc4iZfnV.s:227    .text.MX_ADC1_Init:0000000000000000 $t
     /tmp/cc4iZfnV.s:232    .text.MX_ADC1_Init:0000000000000000 MX_ADC1_Init
     /tmp/cc4iZfnV.s:385    .text.MX_ADC1_Init:0000000000000090 $d
     /tmp/cc4iZfnV.s:392    .text.MX_ADC2_Init:0000000000000000 $t
     /tmp/cc4iZfnV.s:397    .text.MX_ADC2_Init:0000000000000000 MX_ADC2_Init
     /tmp/cc4iZfnV.s:528    .text.MX_ADC2_Init:0000000000000078 $d
     /tmp/cc4iZfnV.s:536    .text.MX_FDCAN1_Init:0000000000000000 $t
     /tmp/cc4iZfnV.s:541    .text.MX_FDCAN1_Init:0000000000000000 MX_FDCAN1_Init
     /tmp/cc4iZfnV.s:631    .text.MX_FDCAN1_Init:0000000000000044 $d
     /tmp/cc4iZfnV.s:637    .text.MX_TIM1_Init:0000000000000000 $t
     /tmp/cc4iZfnV.s:642    .text.MX_TIM1_Init:0000000000000000 MX_TIM1_Init
     /tmp/cc4iZfnV.s:853    .text.MX_TIM1_Init:00000000000000c8 $d
     /tmp/cc4iZfnV.s:859    .text.MX_USART1_UART_Init:0000000000000000 $t
     /tmp/cc4iZfnV.s:864    .text.MX_USART1_UART_Init:0000000000000000 MX_USART1_UART_Init
     /tmp/cc4iZfnV.s:963    .text.MX_USART1_UART_Init:0000000000000058 $d
     /tmp/cc4iZfnV.s:969    .text.MX_TIM2_Init:0000000000000000 $t
     /tmp/cc4iZfnV.s:974    .text.MX_TIM2_Init:0000000000000000 MX_TIM2_Init
     /tmp/cc4iZfnV.s:1095   .text.MX_TIM2_Init:0000000000000078 $d
     /tmp/cc4iZfnV.s:1100   .text.MX_TIM16_Init:0000000000000000 $t
     /tmp/cc4iZfnV.s:1105   .text.MX_TIM16_Init:0000000000000000 MX_TIM16_Init
     /tmp/cc4iZfnV.s:1156   .text.MX_TIM16_Init:0000000000000028 $d
     /tmp/cc4iZfnV.s:1162   .text.MX_TIM17_Init:0000000000000000 $t
     /tmp/cc4iZfnV.s:1167   .text.MX_TIM17_Init:0000000000000000 MX_TIM17_Init
     /tmp/cc4iZfnV.s:1218   .text.MX_TIM17_Init:0000000000000028 $d
     /tmp/cc4iZfnV.s:1224   .text.FDCAN_Config:0000000000000000 $t
     /tmp/cc4iZfnV.s:1229   .text.FDCAN_Config:0000000000000000 FDCAN_Config
     /tmp/cc4iZfnV.s:1371   .text.FDCAN_Config:0000000000000088 $d
     /tmp/cc4iZfnV.s:1377   .text.SystemClock_Config:0000000000000000 $t
     /tmp/cc4iZfnV.s:1383   .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/cc4iZfnV.s:1539   .text.main:0000000000000000 $t
     /tmp/cc4iZfnV.s:1545   .text.main:0000000000000000 main
     /tmp/cc4iZfnV.s:1661   .text.main:000000000000008c $d
     /tmp/cc4iZfnV.s:1672   .text.HAL_FDCAN_RxFifo0Callback:0000000000000000 $t
     /tmp/cc4iZfnV.s:1678   .text.HAL_FDCAN_RxFifo0Callback:0000000000000000 HAL_FDCAN_RxFifo0Callback
     /tmp/cc4iZfnV.s:1722   .text.HAL_FDCAN_RxFifo0Callback:0000000000000028 $d
     /tmp/cc4iZfnV.s:1729   .text.HAL_FDCAN_RxFifo1Callback:0000000000000000 $t
     /tmp/cc4iZfnV.s:1735   .text.HAL_FDCAN_RxFifo1Callback:0000000000000000 HAL_FDCAN_RxFifo1Callback
     /tmp/cc4iZfnV.s:1779   .text.HAL_FDCAN_RxFifo1Callback:0000000000000028 $d
     /tmp/cc4iZfnV.s:1818   .bss.TxData:0000000000000000 TxData
     /tmp/cc4iZfnV.s:1825   .bss.TxHeader:0000000000000000 TxHeader
     /tmp/cc4iZfnV.s:1804   .bss.RxData:0000000000000000 RxData
     /tmp/cc4iZfnV.s:1811   .bss.RxHeader:0000000000000000 RxHeader
     /tmp/cc4iZfnV.s:1893   .bss.ubKeyNumber:0000000000000000 ubKeyNumber
     /tmp/cc4iZfnV.s:1831   .bss.batata:0000000000000000 batata
     /tmp/cc4iZfnV.s:1887   .bss.huart1:0000000000000000 huart1
     /tmp/cc4iZfnV.s:1873   .bss.htim17:0000000000000000 htim17
     /tmp/cc4iZfnV.s:1866   .bss.htim16:0000000000000000 htim16
     /tmp/cc4iZfnV.s:1880   .bss.htim2:0000000000000000 htim2
     /tmp/cc4iZfnV.s:1859   .bss.htim1:0000000000000000 htim1
     /tmp/cc4iZfnV.s:1852   .bss.hfdcan1:0000000000000000 hfdcan1
ARM GAS  /tmp/cc4iZfnV.s 			page 62


     /tmp/cc4iZfnV.s:1845   .bss.hadc2:0000000000000000 hadc2
     /tmp/cc4iZfnV.s:1838   .bss.hadc1:0000000000000000 hadc1
     /tmp/cc4iZfnV.s:1800   .bss.RxData:0000000000000000 $d
     /tmp/cc4iZfnV.s:1807   .bss.RxHeader:0000000000000000 $d
     /tmp/cc4iZfnV.s:1814   .bss.TxData:0000000000000000 $d
     /tmp/cc4iZfnV.s:1821   .bss.TxHeader:0000000000000000 $d
     /tmp/cc4iZfnV.s:1832   .bss.batata:0000000000000000 $d
     /tmp/cc4iZfnV.s:1834   .bss.hadc1:0000000000000000 $d
     /tmp/cc4iZfnV.s:1841   .bss.hadc2:0000000000000000 $d
     /tmp/cc4iZfnV.s:1848   .bss.hfdcan1:0000000000000000 $d
     /tmp/cc4iZfnV.s:1855   .bss.htim1:0000000000000000 $d
     /tmp/cc4iZfnV.s:1862   .bss.htim16:0000000000000000 $d
     /tmp/cc4iZfnV.s:1869   .bss.htim17:0000000000000000 $d
     /tmp/cc4iZfnV.s:1876   .bss.htim2:0000000000000000 $d
     /tmp/cc4iZfnV.s:1883   .bss.huart1:0000000000000000 $d
     /tmp/cc4iZfnV.s:1894   .bss.ubKeyNumber:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
memset
HAL_ADC_Init
HAL_ADCEx_MultiModeConfigChannel
HAL_ADC_ConfigChannel
HAL_FDCAN_Init
HAL_TIM_OC_Init
HAL_TIMEx_MasterConfigSynchronization
HAL_TIM_OC_ConfigChannel
HAL_TIMEx_ConfigBreakDeadTime
HAL_TIM_MspPostInit
HAL_UART_Init
HAL_UARTEx_SetTxFifoThreshold
HAL_UARTEx_SetRxFifoThreshold
HAL_UARTEx_DisableFifoMode
HAL_TIM_PWM_Init
HAL_TIM_PWM_ConfigChannel
HAL_TIM_Base_Init
HAL_FDCAN_ConfigFilter
HAL_FDCAN_ConfigGlobalFilter
HAL_FDCAN_Start
HAL_FDCAN_ActivateNotification
HAL_PWREx_ControlVoltageScaling
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
HAL_Init
HAL_FDCAN_IRQHandler
HAL_Delay
HAL_GPIO_TogglePin
HAL_FDCAN_GetRxFifoFillLevel
HAL_FDCAN_GetRxMessage
