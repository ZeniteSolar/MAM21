ARM GAS  /tmp/ccEuGJBQ.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"stm32g4xx_hal_adc.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.HAL_ADC_MspInit,"ax",%progbits
  20              		.align	1
  21              		.weak	HAL_ADC_MspInit
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	HAL_ADC_MspInit:
  27              	.LVL0:
  28              	.LFB331:
  29              		.file 1 "Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c"
   1:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** /**
   2:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   ******************************************************************************
   3:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @file    stm32g4xx_hal_adc.c
   4:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @author  MCD Application Team
   5:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @brief   This file provides firmware functions to manage the following
   6:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *          functionalities of the Analog to Digital Converter (ADC)
   7:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *          peripheral:
   8:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *           + Initialization and de-initialization functions
   9:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *             ++ Initialization and Configuration of ADC
  10:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *           + Operation functions
  11:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *             ++ Start, stop, get result of conversions of regular
  12:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *                group, using 3 possible modes: polling, interruption or DMA.
  13:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *           + Control functions
  14:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *             ++ Channels configuration on regular group
  15:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *             ++ Analog Watchdog configuration
  16:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *           + State functions
  17:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *             ++ ADC state machine management
  18:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *             ++ Interrupts and flags management
  19:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *          Other functions (extended functions) are available in file
  20:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *          "stm32g4xx_hal_adc_ex.c".
  21:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *
  22:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   @verbatim
  23:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   ==============================================================================
  24:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                      ##### ADC peripheral features #####
  25:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   ==============================================================================
  26:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   [..]
  27:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   (+) 12-bit, 10-bit, 8-bit or 6-bit configurable resolution.
  28:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
  29:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   (+) Interrupt generation at the end of regular conversion and in case of
ARM GAS  /tmp/ccEuGJBQ.s 			page 2


  30:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       analog watchdog or overrun events.
  31:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
  32:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   (+) Single and continuous conversion modes.
  33:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
  34:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   (+) Scan mode for conversion of several channels sequentially.
  35:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
  36:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   (+) Data alignment with in-built data coherency.
  37:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
  38:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   (+) Programmable sampling time (channel wise)
  39:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
  40:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   (+) External trigger (timer or EXTI) with configurable polarity
  41:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
  42:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   (+) DMA request generation for transfer of conversions data of regular group.
  43:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
  44:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   (+) Configurable delay between conversions in Dual interleaved mode.
  45:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
  46:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   (+) ADC channels selectable single/differential input.
  47:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
  48:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   (+) ADC offset shared on 4 offset instances.
  49:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   (+) ADC gain compensation
  50:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
  51:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   (+) ADC calibration
  52:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
  53:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   (+) ADC conversion of regular group.
  54:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
  55:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   (+) ADC supply requirements: 1.62 V to 3.6 V.
  56:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
  57:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   (+) ADC input range: from Vref- (connected to Vssa) to Vref+ (connected to
  58:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       Vdda or to an external voltage reference).
  59:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
  60:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
  61:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                      ##### How to use this driver #####
  62:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   ==============================================================================
  63:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     [..]
  64:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
  65:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****      *** Configuration of top level parameters related to ADC ***
  66:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****      ============================================================
  67:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****      [..]
  68:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
  69:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     (#) Enable the ADC interface
  70:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         (++) As prerequisite, ADC clock must be configured at RCC top level.
  71:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
  72:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         (++) Two clock settings are mandatory:
  73:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****              (+++) ADC clock (core clock, also possibly conversion clock).
  74:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
  75:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****              (+++) ADC clock (conversions clock).
  76:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                    Two possible clock sources: synchronous clock derived from AHB clock
  77:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                    or asynchronous clock derived from system clock or PLL (output divider P)
  78:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                    running up to 75MHz.
  79:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
  80:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****              (+++) Example:
  81:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                    Into HAL_ADC_MspInit() (recommended code location) or with
  82:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                    other device clock parameters configuration:
  83:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                (+++) __HAL_RCC_ADC_CLK_ENABLE();                  (mandatory)
  84:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
  85:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                RCC_ADCCLKSOURCE_PLL enable:                       (optional: if asynchronous clock 
  86:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                (+++) RCC_PeriphClkInitTypeDef   RCC_PeriphClkInit;
ARM GAS  /tmp/ccEuGJBQ.s 			page 3


  87:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                (+++) PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_ADC;
  88:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                (+++) PeriphClkInit.AdcClockSelection    = RCC_ADCCLKSOURCE_PLL;
  89:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                (+++) HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit);
  90:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
  91:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         (++) ADC clock source and clock prescaler are configured at ADC level with
  92:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****              parameter "ClockPrescaler" using function HAL_ADC_Init().
  93:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
  94:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     (#) ADC pins configuration
  95:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****          (++) Enable the clock for the ADC GPIOs
  96:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****               using macro __HAL_RCC_GPIOx_CLK_ENABLE()
  97:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****          (++) Configure these ADC pins in analog mode
  98:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****               using function HAL_GPIO_Init()
  99:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 100:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     (#) Optionally, in case of usage of ADC with interruptions:
 101:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****          (++) Configure the NVIC for ADC
 102:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****               using function HAL_NVIC_EnableIRQ(ADCx_IRQn)
 103:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****          (++) Insert the ADC interruption handler function HAL_ADC_IRQHandler()
 104:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****               into the function of corresponding ADC interruption vector
 105:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****               ADCx_IRQHandler().
 106:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 107:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     (#) Optionally, in case of usage of DMA:
 108:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****          (++) Configure the DMA (DMA channel, mode normal or circular, ...)
 109:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****               using function HAL_DMA_Init().
 110:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****          (++) Configure the NVIC for DMA
 111:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****               using function HAL_NVIC_EnableIRQ(DMAx_Channelx_IRQn)
 112:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****          (++) Insert the ADC interruption handler function HAL_ADC_IRQHandler()
 113:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****               into the function of corresponding DMA interruption vector
 114:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****               DMAx_Channelx_IRQHandler().
 115:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 116:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****      *** Configuration of ADC, group regular, channels parameters ***
 117:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****      ================================================================
 118:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****      [..]
 119:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 120:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     (#) Configure the ADC parameters (resolution, data alignment, ...)
 121:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         and regular group parameters (conversion trigger, sequencer, ...)
 122:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         using function HAL_ADC_Init().
 123:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 124:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     (#) Configure the channels for regular group parameters (channel number,
 125:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         channel rank into sequencer, ..., into regular group)
 126:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         using function HAL_ADC_ConfigChannel().
 127:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 128:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     (#) Optionally, configure the analog watchdog parameters (channels
 129:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         monitored, thresholds, ...)
 130:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         using function HAL_ADC_AnalogWDGConfig().
 131:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 132:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****      *** Execution of ADC conversions ***
 133:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****      ====================================
 134:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****      [..]
 135:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 136:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     (#) Optionally, perform an automatic ADC calibration to improve the
 137:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         conversion accuracy
 138:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         using function HAL_ADCEx_Calibration_Start().
 139:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 140:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     (#) ADC driver can be used among three modes: polling, interruption,
 141:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         transfer by DMA.
 142:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 143:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         (++) ADC conversion by polling:
ARM GAS  /tmp/ccEuGJBQ.s 			page 4


 144:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           (+++) Activate the ADC peripheral and start conversions
 145:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                 using function HAL_ADC_Start()
 146:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           (+++) Wait for ADC conversion completion
 147:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                 using function HAL_ADC_PollForConversion()
 148:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           (+++) Retrieve conversion results
 149:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                 using function HAL_ADC_GetValue()
 150:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           (+++) Stop conversion and disable the ADC peripheral
 151:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                 using function HAL_ADC_Stop()
 152:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 153:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         (++) ADC conversion by interruption:
 154:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           (+++) Activate the ADC peripheral and start conversions
 155:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                 using function HAL_ADC_Start_IT()
 156:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           (+++) Wait for ADC conversion completion by call of function
 157:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                 HAL_ADC_ConvCpltCallback()
 158:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                 (this function must be implemented in user program)
 159:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           (+++) Retrieve conversion results
 160:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                 using function HAL_ADC_GetValue()
 161:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           (+++) Stop conversion and disable the ADC peripheral
 162:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                 using function HAL_ADC_Stop_IT()
 163:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 164:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         (++) ADC conversion with transfer by DMA:
 165:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           (+++) Activate the ADC peripheral and start conversions
 166:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                 using function HAL_ADC_Start_DMA()
 167:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           (+++) Wait for ADC conversion completion by call of function
 168:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                 HAL_ADC_ConvCpltCallback() or HAL_ADC_ConvHalfCpltCallback()
 169:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                 (these functions must be implemented in user program)
 170:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           (+++) Conversion results are automatically transferred by DMA into
 171:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                 destination variable address.
 172:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           (+++) Stop conversion and disable the ADC peripheral
 173:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                 using function HAL_ADC_Stop_DMA()
 174:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 175:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****      [..]
 176:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 177:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     (@) Callback functions must be implemented in user program:
 178:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       (+@) HAL_ADC_ErrorCallback()
 179:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       (+@) HAL_ADC_LevelOutOfWindowCallback() (callback of analog watchdog)
 180:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       (+@) HAL_ADC_ConvCpltCallback()
 181:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       (+@) HAL_ADC_ConvHalfCpltCallback
 182:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 183:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****      *** Deinitialization of ADC ***
 184:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****      ============================================================
 185:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****      [..]
 186:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 187:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     (#) Disable the ADC interface
 188:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       (++) ADC clock can be hard reset and disabled at RCC top level.
 189:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         (++) Hard reset of ADC peripherals
 190:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****              using macro __ADCx_FORCE_RESET(), __ADCx_RELEASE_RESET().
 191:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         (++) ADC clock disable
 192:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****              using the equivalent macro/functions as configuration step.
 193:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****              (+++) Example:
 194:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                    Into HAL_ADC_MspDeInit() (recommended code location) or with
 195:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                    other device clock parameters configuration:
 196:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                (+++) RCC_OscInitStructure.OscillatorType = RCC_OSCILLATORTYPE_HSI14;
 197:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                (+++) RCC_OscInitStructure.HSI14State = RCC_HSI14_OFF; (if not used for system clock
 198:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                (+++) HAL_RCC_OscConfig(&RCC_OscInitStructure);
 199:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 200:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     (#) ADC pins configuration
ARM GAS  /tmp/ccEuGJBQ.s 			page 5


 201:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****          (++) Disable the clock for the ADC GPIOs
 202:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****               using macro __HAL_RCC_GPIOx_CLK_DISABLE()
 203:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 204:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     (#) Optionally, in case of usage of ADC with interruptions:
 205:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****          (++) Disable the NVIC for ADC
 206:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****               using function HAL_NVIC_EnableIRQ(ADCx_IRQn)
 207:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 208:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     (#) Optionally, in case of usage of DMA:
 209:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****          (++) Deinitialize the DMA
 210:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****               using function HAL_DMA_Init().
 211:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****          (++) Disable the NVIC for DMA
 212:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****               using function HAL_NVIC_EnableIRQ(DMAx_Channelx_IRQn)
 213:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 214:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     [..]
 215:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 216:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     *** Callback registration ***
 217:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     =============================================
 218:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     [..]
 219:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 220:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****      The compilation flag USE_HAL_ADC_REGISTER_CALLBACKS, when set to 1,
 221:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****      allows the user to configure dynamically the driver callbacks.
 222:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****      Use Functions @ref HAL_ADC_RegisterCallback()
 223:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****      to register an interrupt callback.
 224:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     [..]
 225:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 226:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****      Function @ref HAL_ADC_RegisterCallback() allows to register following callbacks:
 227:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****        (+) ConvCpltCallback               : ADC conversion complete callback
 228:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****        (+) ConvHalfCpltCallback           : ADC conversion DMA half-transfer callback
 229:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****        (+) LevelOutOfWindowCallback       : ADC analog watchdog 1 callback
 230:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****        (+) ErrorCallback                  : ADC error callback
 231:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****        (+) InjectedConvCpltCallback       : ADC group injected conversion complete callback
 232:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****        (+) InjectedQueueOverflowCallback  : ADC group injected context queue overflow callback
 233:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****        (+) LevelOutOfWindow2Callback      : ADC analog watchdog 2 callback
 234:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****        (+) LevelOutOfWindow3Callback      : ADC analog watchdog 3 callback
 235:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****        (+) EndOfSamplingCallback          : ADC end of sampling callback
 236:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****        (+) MspInitCallback                : ADC Msp Init callback
 237:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****        (+) MspDeInitCallback              : ADC Msp DeInit callback
 238:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****      This function takes as parameters the HAL peripheral handle, the Callback ID
 239:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****      and a pointer to the user callback function.
 240:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     [..]
 241:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 242:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****      Use function @ref HAL_ADC_UnRegisterCallback to reset a callback to the default
 243:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****      weak function.
 244:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     [..]
 245:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 246:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****      @ref HAL_ADC_UnRegisterCallback takes as parameters the HAL peripheral handle,
 247:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****      and the Callback ID.
 248:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****      This function allows to reset following callbacks:
 249:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****        (+) ConvCpltCallback               : ADC conversion complete callback
 250:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****        (+) ConvHalfCpltCallback           : ADC conversion DMA half-transfer callback
 251:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****        (+) LevelOutOfWindowCallback       : ADC analog watchdog 1 callback
 252:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****        (+) ErrorCallback                  : ADC error callback
 253:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****        (+) InjectedConvCpltCallback       : ADC group injected conversion complete callback
 254:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****        (+) InjectedQueueOverflowCallback  : ADC group injected context queue overflow callback
 255:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****        (+) LevelOutOfWindow2Callback      : ADC analog watchdog 2 callback
 256:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****        (+) LevelOutOfWindow3Callback      : ADC analog watchdog 3 callback
 257:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****        (+) EndOfSamplingCallback          : ADC end of sampling callback
ARM GAS  /tmp/ccEuGJBQ.s 			page 6


 258:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****        (+) MspInitCallback                : ADC Msp Init callback
 259:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****        (+) MspDeInitCallback              : ADC Msp DeInit callback
 260:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****      [..]
 261:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 262:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****      By default, after the @ref HAL_ADC_Init() and when the state is @ref HAL_ADC_STATE_RESET
 263:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****      all callbacks are set to the corresponding weak functions:
 264:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****      examples @ref HAL_ADC_ConvCpltCallback(), @ref HAL_ADC_ErrorCallback().
 265:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****      Exception done for MspInit and MspDeInit functions that are
 266:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****      reset to the legacy weak functions in the @ref HAL_ADC_Init()/ @ref HAL_ADC_DeInit() only when
 267:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****      these callbacks are null (not registered beforehand).
 268:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     [..]
 269:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 270:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****      If MspInit or MspDeInit are not null, the @ref HAL_ADC_Init()/ @ref HAL_ADC_DeInit()
 271:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****      keep and use the user MspInit/MspDeInit callbacks (registered beforehand) whatever the state.
 272:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****      [..]
 273:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 274:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****      Callbacks can be registered/unregistered in @ref HAL_ADC_STATE_READY state only.
 275:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****      Exception done MspInit/MspDeInit functions that can be registered/unregistered
 276:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****      in @ref HAL_ADC_STATE_READY or @ref HAL_ADC_STATE_RESET state,
 277:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****      thus registered (user) MspInit/DeInit callbacks can be used during the Init/DeInit.
 278:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     [..]
 279:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 280:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****      Then, the user first registers the MspInit/MspDeInit user callbacks
 281:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****      using @ref HAL_ADC_RegisterCallback() before calling @ref HAL_ADC_DeInit()
 282:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****      or @ref HAL_ADC_Init() function.
 283:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****      [..]
 284:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 285:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****      When the compilation flag USE_HAL_ADC_REGISTER_CALLBACKS is set to 0 or
 286:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****      not defined, the callback registration feature is not available and all callbacks
 287:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****      are set to the corresponding weak functions.
 288:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 289:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   @endverbatim
 290:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   ******************************************************************************
 291:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @attention
 292:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *
 293:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * <h2><center>&copy; Copyright (c) 2019 STMicroelectronics.
 294:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * All rights reserved.</center></h2>
 295:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *
 296:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * This software component is licensed by ST under BSD 3-Clause license,
 297:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * the "License"; You may not use this file except in compliance with the
 298:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * License. You may obtain a copy of the License at:
 299:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *                        opensource.org/licenses/BSD-3-Clause
 300:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *
 301:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   ******************************************************************************
 302:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   */
 303:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 304:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** /* Includes ------------------------------------------------------------------*/
 305:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #include "stm32g4xx_hal.h"
 306:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 307:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** /** @addtogroup STM32G4xx_HAL_Driver
 308:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @{
 309:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   */
 310:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 311:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** /** @defgroup ADC ADC
 312:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @brief ADC HAL module driver
 313:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @{
 314:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   */
ARM GAS  /tmp/ccEuGJBQ.s 			page 7


 315:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 316:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #ifdef HAL_ADC_MODULE_ENABLED
 317:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 318:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** /* Private typedef -----------------------------------------------------------*/
 319:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** /* Private define ------------------------------------------------------------*/
 320:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 321:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** /** @defgroup ADC_Private_Constants ADC Private Constants
 322:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @{
 323:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   */
 324:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 325:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #define ADC_CFGR_FIELDS_1  ((ADC_CFGR_RES    | ADC_CFGR_ALIGN   |\
 326:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                              ADC_CFGR_CONT   | ADC_CFGR_OVRMOD  |\
 327:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                              ADC_CFGR_DISCEN | ADC_CFGR_DISCNUM |\
 328:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                              ADC_CFGR_EXTEN  | ADC_CFGR_EXTSEL))   /*!< ADC_CFGR fields of paramete
 329:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 330:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** /* Timeout values for ADC operations (enable settling time,                   */
 331:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** /*   disable settling time, ...).                                             */
 332:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** /*   Values defined to be higher than worst cases: low clock frequency,       */
 333:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** /*   maximum prescalers.                                                      */
 334:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #define ADC_ENABLE_TIMEOUT              (2UL)    /*!< ADC enable time-out value  */
 335:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #define ADC_DISABLE_TIMEOUT             (2UL)    /*!< ADC disable time-out value */
 336:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 337:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** /* Timeout to wait for current conversion on going to be completed.           */
 338:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** /* Timeout fixed to longest ADC conversion possible, for 1 channel:           */
 339:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** /*   - maximum sampling time (640.5 adc_clk)                                  */
 340:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** /*   - ADC resolution (Tsar 12 bits= 12.5 adc_clk)                            */
 341:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** /*   - System clock / ADC clock <= 4096 (hypothesis of maximum clock ratio)   */
 342:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** /*   - ADC oversampling ratio 256                                             */
 343:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** /*   Calculation: 653 * 4096 * 256 CPU clock cycles max                       */
 344:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** /* Unit: cycles of CPU clock.                                                 */
 345:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #define ADC_CONVERSION_TIME_MAX_CPU_CYCLES (653UL * 4096UL * 256UL)  /*!< ADC conversion completion
 346:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 347:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 348:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** /**
 349:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @}
 350:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   */
 351:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 352:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** /* Private macro -------------------------------------------------------------*/
 353:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** /* Private variables ---------------------------------------------------------*/
 354:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** /* Private function prototypes -----------------------------------------------*/
 355:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** /* Exported functions --------------------------------------------------------*/
 356:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 357:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** /** @defgroup ADC_Exported_Functions ADC Exported Functions
 358:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @{
 359:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   */
 360:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 361:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** /** @defgroup ADC_Exported_Functions_Group1 Initialization and de-initialization functions
 362:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @brief    ADC Initialization and Configuration functions
 363:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *
 364:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** @verbatim
 365:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****  ===============================================================================
 366:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****               ##### Initialization and de-initialization functions #####
 367:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****  ===============================================================================
 368:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     [..]  This section provides functions allowing to:
 369:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       (+) Initialize and configure the ADC.
 370:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       (+) De-initialize the ADC.
 371:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** @endverbatim
ARM GAS  /tmp/ccEuGJBQ.s 			page 8


 372:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @{
 373:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   */
 374:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 375:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** /**
 376:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @brief  Initialize the ADC peripheral and regular group according to
 377:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         parameters specified in structure "ADC_InitTypeDef".
 378:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @note   As prerequisite, ADC clock must be configured at RCC top level
 379:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         (refer to description of RCC configuration for ADC
 380:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         in header of this file).
 381:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @note   Possibility to update parameters on the fly:
 382:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         This function initializes the ADC MSP (HAL_ADC_MspInit()) only when
 383:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         coming from ADC state reset. Following calls to this function can
 384:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         be used to reconfigure some parameters of ADC_InitTypeDef
 385:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         structure on the fly, without modifying MSP configuration. If ADC
 386:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         MSP has to be modified again, HAL_ADC_DeInit() must be called
 387:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         before HAL_ADC_Init().
 388:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         The setting of these parameters is conditioned to ADC state.
 389:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         For parameters constraints, see comments of structure
 390:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         "ADC_InitTypeDef".
 391:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @note   This function configures the ADC within 2 scopes: scope of entire
 392:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         ADC and scope of regular group. For parameters details, see comments
 393:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         of structure "ADC_InitTypeDef".
 394:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @note   Parameters related to common ADC registers (ADC clock mode) are set
 395:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         only if all ADCs are disabled.
 396:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         If this is not the case, these common parameters setting are
 397:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         bypassed without error reporting: it can be the intended behaviour in
 398:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         case of update of a parameter of ADC_InitTypeDef on the fly,
 399:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         without  disabling the other ADCs.
 400:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @param hadc ADC handle
 401:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @retval HAL status
 402:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   */
 403:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Init(ADC_HandleTypeDef *hadc)
 404:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** {
 405:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 406:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t tmpCFGR;
 407:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t tmp_adc_reg_is_conversion_on_going;
 408:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   __IO uint32_t wait_loop_index = 0UL;
 409:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t tmp_adc_is_conversion_on_going_regular;
 410:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t tmp_adc_is_conversion_on_going_injected;
 411:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 412:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Check ADC handle */
 413:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   if (hadc == NULL)
 414:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
 415:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     return HAL_ERROR;
 416:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
 417:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 418:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Check the parameters */
 419:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 420:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   assert_param(IS_ADC_CLOCKPRESCALER(hadc->Init.ClockPrescaler));
 421:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   assert_param(IS_ADC_RESOLUTION(hadc->Init.Resolution));
 422:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   assert_param(IS_ADC_DATA_ALIGN(hadc->Init.DataAlign));
 423:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   assert_param(IS_ADC_GAIN_COMPENSATION(hadc->Init.GainCompensation));
 424:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   assert_param(IS_ADC_SCAN_MODE(hadc->Init.ScanConvMode));
 425:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.ContinuousConvMode));
 426:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   assert_param(IS_ADC_EXTTRIG_EDGE(hadc->Init.ExternalTrigConvEdge));
 427:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   assert_param(IS_ADC_EXTTRIG(hadc, hadc->Init.ExternalTrigConv));
 428:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   assert_param(IS_ADC_SAMPLINGMODE(hadc->Init.SamplingMode));
ARM GAS  /tmp/ccEuGJBQ.s 			page 9


 429:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.DMAContinuousRequests));
 430:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   assert_param(IS_ADC_EOC_SELECTION(hadc->Init.EOCSelection));
 431:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   assert_param(IS_ADC_OVERRUN(hadc->Init.Overrun));
 432:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.LowPowerAutoWait));
 433:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.OversamplingMode));
 434:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 435:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   if (hadc->Init.ScanConvMode != ADC_SCAN_DISABLE)
 436:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
 437:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     assert_param(IS_ADC_REGULAR_NB_CONV(hadc->Init.NbrOfConversion));
 438:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     assert_param(IS_FUNCTIONAL_STATE(hadc->Init.DiscontinuousConvMode));
 439:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 440:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     if (hadc->Init.DiscontinuousConvMode == ENABLE)
 441:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 442:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       assert_param(IS_ADC_REGULAR_DISCONT_NUMBER(hadc->Init.NbrOfDiscConversion));
 443:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
 444:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
 445:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 446:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* DISCEN and CONT bits cannot be set at the same time */
 447:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   assert_param(!((hadc->Init.DiscontinuousConvMode == ENABLE) && (hadc->Init.ContinuousConvMode == 
 448:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 449:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Actions performed only if ADC is coming from state reset:                */
 450:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* - Initialization of ADC MSP                                              */
 451:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   if (hadc->State == HAL_ADC_STATE_RESET)
 452:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
 453:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
 454:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Init the ADC Callback settings */
 455:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     hadc->ConvCpltCallback              = HAL_ADC_ConvCpltCallback;                 /* Legacy weak 
 456:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     hadc->ConvHalfCpltCallback          = HAL_ADC_ConvHalfCpltCallback;             /* Legacy weak 
 457:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     hadc->LevelOutOfWindowCallback      = HAL_ADC_LevelOutOfWindowCallback;         /* Legacy weak 
 458:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     hadc->ErrorCallback                 = HAL_ADC_ErrorCallback;                    /* Legacy weak 
 459:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     hadc->InjectedConvCpltCallback      = HAL_ADCEx_InjectedConvCpltCallback;       /* Legacy weak 
 460:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     hadc->InjectedQueueOverflowCallback = HAL_ADCEx_InjectedQueueOverflowCallback;  /* Legacy weak 
 461:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     hadc->LevelOutOfWindow2Callback     = HAL_ADCEx_LevelOutOfWindow2Callback;      /* Legacy weak 
 462:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     hadc->LevelOutOfWindow3Callback     = HAL_ADCEx_LevelOutOfWindow3Callback;      /* Legacy weak 
 463:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     hadc->EndOfSamplingCallback         = HAL_ADCEx_EndOfSamplingCallback;          /* Legacy weak 
 464:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 465:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     if (hadc->MspInitCallback == NULL)
 466:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 467:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       hadc->MspInitCallback = HAL_ADC_MspInit; /* Legacy weak MspInit  */
 468:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
 469:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 470:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Init the low level hardware */
 471:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     hadc->MspInitCallback(hadc);
 472:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #else
 473:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Init the low level hardware */
 474:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     HAL_ADC_MspInit(hadc);
 475:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 476:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 477:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Set ADC error code to none */
 478:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     ADC_CLEAR_ERRORCODE(hadc);
 479:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 480:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Initialize Lock */
 481:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     hadc->Lock = HAL_UNLOCKED;
 482:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
 483:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 484:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* - Exit from deep-power-down mode and ADC voltage regulator enable        */
 485:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   if (LL_ADC_IsDeepPowerDownEnabled(hadc->Instance) != 0UL)
ARM GAS  /tmp/ccEuGJBQ.s 			page 10


 486:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
 487:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Disable ADC deep power down mode */
 488:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     LL_ADC_DisableDeepPowerDown(hadc->Instance);
 489:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 490:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* System was in deep power down mode, calibration must
 491:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****      be relaunched or a previously saved calibration factor
 492:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****      re-applied once the ADC voltage regulator is enabled */
 493:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
 494:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 495:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   if (LL_ADC_IsInternalRegulatorEnabled(hadc->Instance) == 0UL)
 496:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
 497:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Enable ADC internal voltage regulator */
 498:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     LL_ADC_EnableInternalRegulator(hadc->Instance);
 499:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 500:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Note: Variable divided by 2 to compensate partially              */
 501:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /*       CPU processing cycles, scaling in us split to not          */
 502:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /*       exceed 32 bits register capacity and handle low frequency. */
 503:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     wait_loop_index = ((LL_ADC_DELAY_INTERNAL_REGUL_STAB_US / 10UL) * ((SystemCoreClock / (100000UL
 504:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     while (wait_loop_index != 0UL)
 505:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 506:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       wait_loop_index--;
 507:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
 508:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
 509:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 510:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Verification that ADC voltage regulator is correctly enabled, whether    */
 511:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* or not ADC is coming from state reset (if any potential problem of       */
 512:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* clocking, voltage regulator would not be enabled).                       */
 513:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   if (LL_ADC_IsInternalRegulatorEnabled(hadc->Instance) == 0UL)
 514:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
 515:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Update ADC state machine to error */
 516:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
 517:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 518:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Set ADC error code to ADC peripheral internal error */
 519:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
 520:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 521:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     tmp_hal_status = HAL_ERROR;
 522:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
 523:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 524:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Configuration of ADC parameters if previous preliminary actions are      */
 525:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* correctly completed and if there is no conversion on going on regular    */
 526:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* group (ADC may already be enabled at this point if HAL_ADC_Init() is     */
 527:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* called to update a parameter on the fly).                                */
 528:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   tmp_adc_reg_is_conversion_on_going = LL_ADC_REG_IsConversionOngoing(hadc->Instance);
 529:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 530:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   if (((hadc->State & HAL_ADC_STATE_ERROR_INTERNAL) == 0UL)
 531:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       && (tmp_adc_reg_is_conversion_on_going == 0UL)
 532:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****      )
 533:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
 534:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Set ADC state */
 535:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     ADC_STATE_CLR_SET(hadc->State,
 536:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                       HAL_ADC_STATE_REG_BUSY,
 537:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                       HAL_ADC_STATE_BUSY_INTERNAL);
 538:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 539:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Configuration of common ADC parameters                                 */
 540:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 541:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Parameters update conditioned to ADC state:                            */
 542:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Parameters that can be updated only when ADC is disabled:              */
ARM GAS  /tmp/ccEuGJBQ.s 			page 11


 543:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /*  - clock configuration                                                 */
 544:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     if (LL_ADC_IsEnabled(hadc->Instance) == 0UL)
 545:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 546:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       if (__LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE(__LL_ADC_COMMON_INSTANCE(hadc->Instance)) == 0UL)
 547:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 548:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* Reset configuration of ADC common register CCR:                      */
 549:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /*                                                                      */
 550:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /*   - ADC clock mode and ACC prescaler (CKMODE and PRESC bits)are set  */
 551:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /*     according to adc->Init.ClockPrescaler. It selects the clock      */
 552:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /*    source and sets the clock division factor.                        */
 553:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /*                                                                      */
 554:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* Some parameters of this register are not reset, since they are set   */
 555:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* by other functions and must be kept in case of usage of this         */
 556:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* function on the fly (update of a parameter of ADC_InitTypeDef        */
 557:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* without needing to reconfigure all other ADC groups/channels         */
 558:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* parameters):                                                         */
 559:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /*   - when multimode feature is available, multimode-related           */
 560:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /*     parameters: MDMA, DMACFG, DELAY, DUAL (set by API                */
 561:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /*     HAL_ADCEx_MultiModeConfigChannel() )                             */
 562:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /*   - internal measurement paths: Vbat, temperature sensor, Vref       */
 563:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /*     (set into HAL_ADC_ConfigChannel() or                             */
 564:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /*     HAL_ADCEx_InjectedConfigChannel() )                              */
 565:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         LL_ADC_SetCommonClock(__LL_ADC_COMMON_INSTANCE(hadc->Instance), hadc->Init.ClockPrescaler);
 566:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
 567:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
 568:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 569:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Configuration of ADC:                                                  */
 570:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /*  - resolution                               Init.Resolution            */
 571:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /*  - data alignment                           Init.DataAlign             */
 572:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /*  - external trigger to start conversion     Init.ExternalTrigConv      */
 573:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /*  - external trigger polarity                Init.ExternalTrigConvEdge  */
 574:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /*  - continuous conversion mode               Init.ContinuousConvMode    */
 575:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /*  - overrun                                  Init.Overrun               */
 576:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /*  - discontinuous mode                       Init.DiscontinuousConvMode */
 577:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /*  - discontinuous mode channel count         Init.NbrOfDiscConversion   */
 578:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     tmpCFGR  = (ADC_CFGR_CONTINUOUS((uint32_t)hadc->Init.ContinuousConvMode)           |
 579:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                 hadc->Init.Overrun                                                     |
 580:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                 hadc->Init.DataAlign                                                   |
 581:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                 hadc->Init.Resolution                                                  |
 582:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                 ADC_CFGR_REG_DISCONTINUOUS((uint32_t)hadc->Init.DiscontinuousConvMode));
 583:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 584:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     if (hadc->Init.DiscontinuousConvMode == ENABLE)
 585:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 586:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       tmpCFGR |= ADC_CFGR_DISCONTINUOUS_NUM(hadc->Init.NbrOfDiscConversion);
 587:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
 588:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 589:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Enable external trigger if trigger selection is different of software  */
 590:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* start.                                                                 */
 591:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Note: This configuration keeps the hardware feature of parameter       */
 592:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /*       ExternalTrigConvEdge "trigger edge none" equivalent to           */
 593:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /*       software start.                                                  */
 594:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     if (hadc->Init.ExternalTrigConv != ADC_SOFTWARE_START)
 595:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 596:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       tmpCFGR |= ((hadc->Init.ExternalTrigConv & ADC_CFGR_EXTSEL)
 597:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                   | hadc->Init.ExternalTrigConvEdge
 598:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                  );
 599:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
ARM GAS  /tmp/ccEuGJBQ.s 			page 12


 600:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 601:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Update Configuration Register CFGR */
 602:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     MODIFY_REG(hadc->Instance->CFGR, ADC_CFGR_FIELDS_1, tmpCFGR);
 603:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 604:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Configuration of sampling mode */
 605:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     MODIFY_REG(hadc->Instance->CFGR2, ADC_CFGR2_BULB | ADC_CFGR2_SMPTRIG, hadc->Init.SamplingMode);
 606:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 607:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Parameters update conditioned to ADC state:                            */
 608:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Parameters that can be updated when ADC is disabled or enabled without */
 609:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* conversion on going on regular and injected groups:                    */
 610:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /*  - Gain Compensation               Init.GainCompensation               */
 611:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /*  - DMA continuous request          Init.DMAContinuousRequests          */
 612:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /*  - LowPowerAutoWait feature        Init.LowPowerAutoWait               */
 613:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /*  - Oversampling parameters         Init.Oversampling                   */
 614:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     tmp_adc_is_conversion_on_going_regular = LL_ADC_REG_IsConversionOngoing(hadc->Instance);
 615:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     tmp_adc_is_conversion_on_going_injected = LL_ADC_INJ_IsConversionOngoing(hadc->Instance);
 616:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     if ((tmp_adc_is_conversion_on_going_regular == 0UL)
 617:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         && (tmp_adc_is_conversion_on_going_injected == 0UL)
 618:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****        )
 619:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 620:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       tmpCFGR = (ADC_CFGR_DFSDM(hadc)                                            |
 621:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                  ADC_CFGR_AUTOWAIT((uint32_t)hadc->Init.LowPowerAutoWait)        |
 622:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                  ADC_CFGR_DMACONTREQ((uint32_t)hadc->Init.DMAContinuousRequests));
 623:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 624:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       MODIFY_REG(hadc->Instance->CFGR, ADC_CFGR_FIELDS_2, tmpCFGR);
 625:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 626:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       if (hadc->Init.GainCompensation != 0UL)
 627:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 628:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         SET_BIT(hadc->Instance->CFGR2, ADC_CFGR2_GCOMP);
 629:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         MODIFY_REG(hadc->Instance->GCOMP, ADC_GCOMP_GCOMPCOEFF, hadc->Init.GainCompensation);
 630:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
 631:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       else
 632:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 633:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         CLEAR_BIT(hadc->Instance->CFGR2, ADC_CFGR2_GCOMP);
 634:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         MODIFY_REG(hadc->Instance->GCOMP, ADC_GCOMP_GCOMPCOEFF, 0UL);
 635:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
 636:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 637:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       if (hadc->Init.OversamplingMode == ENABLE)
 638:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 639:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         assert_param(IS_ADC_OVERSAMPLING_RATIO(hadc->Init.Oversampling.Ratio));
 640:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         assert_param(IS_ADC_RIGHT_BIT_SHIFT(hadc->Init.Oversampling.RightBitShift));
 641:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         assert_param(IS_ADC_TRIGGERED_OVERSAMPLING_MODE(hadc->Init.Oversampling.TriggeredMode));
 642:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         assert_param(IS_ADC_REGOVERSAMPLING_MODE(hadc->Init.Oversampling.OversamplingStopReset));
 643:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 644:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* Configuration of Oversampler:                                      */
 645:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /*  - Oversampling Ratio                                              */
 646:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /*  - Right bit shift                                                 */
 647:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /*  - Triggered mode                                                  */
 648:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /*  - Oversampling mode (continued/resumed)                           */
 649:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         MODIFY_REG(hadc->Instance->CFGR2,
 650:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                    ADC_CFGR2_OVSR  |
 651:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                    ADC_CFGR2_OVSS  |
 652:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                    ADC_CFGR2_TROVS |
 653:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                    ADC_CFGR2_ROVSM,
 654:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                    ADC_CFGR2_ROVSE                       |
 655:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                    hadc->Init.Oversampling.Ratio         |
 656:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                    hadc->Init.Oversampling.RightBitShift |
ARM GAS  /tmp/ccEuGJBQ.s 			page 13


 657:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                    hadc->Init.Oversampling.TriggeredMode |
 658:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                    hadc->Init.Oversampling.OversamplingStopReset
 659:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                   );
 660:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
 661:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       else
 662:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 663:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* Disable ADC oversampling scope on ADC group regular */
 664:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         CLEAR_BIT(hadc->Instance->CFGR2, ADC_CFGR2_ROVSE);
 665:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
 666:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 667:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
 668:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 669:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Configuration of regular group sequencer:                              */
 670:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* - if scan mode is disabled, regular channels sequence length is set to */
 671:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /*   0x00: 1 channel converted (channel on regular rank 1)                */
 672:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /*   Parameter "NbrOfConversion" is discarded.                            */
 673:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /*   Note: Scan mode is not present by hardware on this device, but       */
 674:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /*   emulated by software for alignment over all STM32 devices.           */
 675:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* - if scan mode is enabled, regular channels sequence length is set to  */
 676:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /*   parameter "NbrOfConversion".                                         */
 677:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 678:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     if (hadc->Init.ScanConvMode == ADC_SCAN_ENABLE)
 679:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 680:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Set number of ranks in regular group sequencer */
 681:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       MODIFY_REG(hadc->Instance->SQR1, ADC_SQR1_L, (hadc->Init.NbrOfConversion - (uint8_t)1));
 682:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
 683:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     else
 684:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 685:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       CLEAR_BIT(hadc->Instance->SQR1, ADC_SQR1_L);
 686:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
 687:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 688:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Initialize the ADC state */
 689:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Clear HAL_ADC_STATE_BUSY_INTERNAL bit, set HAL_ADC_STATE_READY bit */
 690:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_BUSY_INTERNAL, HAL_ADC_STATE_READY);
 691:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
 692:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   else
 693:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
 694:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Update ADC state machine to error */
 695:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
 696:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 697:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     tmp_hal_status = HAL_ERROR;
 698:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
 699:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 700:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Return function status */
 701:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   return tmp_hal_status;
 702:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** }
 703:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 704:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** /**
 705:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @brief  Deinitialize the ADC peripheral registers to their default reset
 706:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         values, with deinitialization of the ADC MSP.
 707:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @note   For devices with several ADCs: reset of ADC common registers is done
 708:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         only if all ADCs sharing the same common group are disabled.
 709:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         (function "HAL_ADC_MspDeInit()" is also called under the same conditions:
 710:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         all ADC instances use the same core clock at RCC level, disabling
 711:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         the core clock reset all ADC instances).
 712:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         If this is not the case, reset of these common parameters reset is
 713:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         bypassed without error reporting: it can be the intended behavior in
ARM GAS  /tmp/ccEuGJBQ.s 			page 14


 714:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         case of reset of a single ADC while the other ADCs sharing the same
 715:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         common group is still running.
 716:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @note   By default, HAL_ADC_DeInit() set ADC in mode deep power-down:
 717:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         this saves more power by reducing leakage currents
 718:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         and is particularly interesting before entering MCU low-power modes.
 719:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @param hadc ADC handle
 720:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @retval HAL status
 721:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   */
 722:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_DeInit(ADC_HandleTypeDef *hadc)
 723:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** {
 724:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 725:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 726:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Check ADC handle */
 727:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   if (hadc == NULL)
 728:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
 729:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     return HAL_ERROR;
 730:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
 731:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 732:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Check the parameters */
 733:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 734:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 735:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Set ADC state */
 736:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   SET_BIT(hadc->State, HAL_ADC_STATE_BUSY_INTERNAL);
 737:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 738:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Stop potential conversion on going */
 739:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   tmp_hal_status = ADC_ConversionStop(hadc, ADC_REGULAR_INJECTED_GROUP);
 740:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 741:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Disable ADC peripheral if conversions are effectively stopped            */
 742:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Flush register JSQR: reset the queue sequencer when injected             */
 743:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* queue sequencer is enabled and ADC disabled.                             */
 744:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* The software and hardware triggers of the injected sequence are both     */
 745:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* internally disabled just after the completion of the last valid          */
 746:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* injected sequence.                                                       */
 747:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   SET_BIT(hadc->Instance->CFGR, ADC_CFGR_JQM);
 748:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 749:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Disable ADC peripheral if conversions are effectively stopped */
 750:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   if (tmp_hal_status == HAL_OK)
 751:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
 752:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Disable the ADC peripheral */
 753:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     tmp_hal_status = ADC_Disable(hadc);
 754:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 755:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Check if ADC is effectively disabled */
 756:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     if (tmp_hal_status == HAL_OK)
 757:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 758:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Change ADC state */
 759:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       hadc->State = HAL_ADC_STATE_READY;
 760:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
 761:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
 762:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 763:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Note: HAL ADC deInit is done independently of ADC conversion stop        */
 764:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /*       and disable return status. In case of status fail, attempt to      */
 765:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /*       perform deinitialization anyway and it is up user code in          */
 766:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /*       in HAL_ADC_MspDeInit() to reset the ADC peripheral using           */
 767:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /*       system RCC hard reset.                                             */
 768:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 769:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* ========== Reset ADC registers ========== */
 770:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Reset register IER */
ARM GAS  /tmp/ccEuGJBQ.s 			page 15


 771:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   __HAL_ADC_DISABLE_IT(hadc, (ADC_IT_AWD3  | ADC_IT_AWD2 | ADC_IT_AWD1 |
 772:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                               ADC_IT_JQOVF | ADC_IT_OVR  |
 773:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                               ADC_IT_JEOS  | ADC_IT_JEOC |
 774:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                               ADC_IT_EOS   | ADC_IT_EOC  |
 775:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                               ADC_IT_EOSMP | ADC_IT_RDY));
 776:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 777:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Reset register ISR */
 778:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_AWD3  | ADC_FLAG_AWD2 | ADC_FLAG_AWD1 |
 779:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                               ADC_FLAG_JQOVF | ADC_FLAG_OVR  |
 780:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                               ADC_FLAG_JEOS  | ADC_FLAG_JEOC |
 781:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                               ADC_FLAG_EOS   | ADC_FLAG_EOC  |
 782:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                               ADC_FLAG_EOSMP | ADC_FLAG_RDY));
 783:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 784:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Reset register CR */
 785:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Bits ADC_CR_JADSTP, ADC_CR_ADSTP, ADC_CR_JADSTART, ADC_CR_ADSTART,
 786:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****      ADC_CR_ADCAL, ADC_CR_ADDIS and ADC_CR_ADEN are in access mode "read-set":
 787:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****      no direct reset applicable.
 788:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****      Update CR register to reset value where doable by software */
 789:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->CR, ADC_CR_ADVREGEN | ADC_CR_ADCALDIF);
 790:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   SET_BIT(hadc->Instance->CR, ADC_CR_DEEPPWD);
 791:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 792:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Reset register CFGR */
 793:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->CFGR, ADC_CFGR_FIELDS);
 794:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   SET_BIT(hadc->Instance->CFGR, ADC_CFGR_JQDIS);
 795:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 796:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Reset register CFGR2 */
 797:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->CFGR2, ADC_CFGR2_ROVSM  | ADC_CFGR2_TROVS   | ADC_CFGR2_OVSS |
 798:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             ADC_CFGR2_OVSR  | ADC_CFGR2_JOVSE | ADC_CFGR2_ROVSE);
 799:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 800:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Reset register SMPR1 */
 801:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->SMPR1, ADC_SMPR1_FIELDS);
 802:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 803:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Reset register SMPR2 */
 804:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->SMPR2, ADC_SMPR2_SMP18 | ADC_SMPR2_SMP17 | ADC_SMPR2_SMP16 |
 805:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             ADC_SMPR2_SMP15 | ADC_SMPR2_SMP14 | ADC_SMPR2_SMP13 |
 806:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             ADC_SMPR2_SMP12 | ADC_SMPR2_SMP11 | ADC_SMPR2_SMP10);
 807:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 808:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Reset register TR1 */
 809:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->TR1, ADC_TR1_HT1 | ADC_TR1_LT1);
 810:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 811:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Reset register TR2 */
 812:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->TR2, ADC_TR2_HT2 | ADC_TR2_LT2);
 813:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 814:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Reset register TR3 */
 815:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->TR3, ADC_TR3_HT3 | ADC_TR3_LT3);
 816:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 817:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Reset register SQR1 */
 818:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->SQR1, ADC_SQR1_SQ4 | ADC_SQR1_SQ3 | ADC_SQR1_SQ2 |
 819:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             ADC_SQR1_SQ1 | ADC_SQR1_L);
 820:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 821:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Reset register SQR2 */
 822:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->SQR2, ADC_SQR2_SQ9 | ADC_SQR2_SQ8 | ADC_SQR2_SQ7 |
 823:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             ADC_SQR2_SQ6 | ADC_SQR2_SQ5);
 824:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 825:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Reset register SQR3 */
 826:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->SQR3, ADC_SQR3_SQ14 | ADC_SQR3_SQ13 | ADC_SQR3_SQ12 |
 827:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             ADC_SQR3_SQ11 | ADC_SQR3_SQ10);
ARM GAS  /tmp/ccEuGJBQ.s 			page 16


 828:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 829:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Reset register SQR4 */
 830:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->SQR4, ADC_SQR4_SQ16 | ADC_SQR4_SQ15);
 831:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 832:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Register JSQR was reset when the ADC was disabled */
 833:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 834:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Reset register DR */
 835:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* bits in access mode read only, no direct reset applicable*/
 836:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 837:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Reset register OFR1 */
 838:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->OFR1, ADC_OFR1_OFFSET1_EN | ADC_OFR1_OFFSET1_CH | ADC_OFR1_OFFSET1);
 839:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Reset register OFR2 */
 840:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->OFR2, ADC_OFR2_OFFSET2_EN | ADC_OFR2_OFFSET2_CH | ADC_OFR2_OFFSET2);
 841:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Reset register OFR3 */
 842:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->OFR3, ADC_OFR3_OFFSET3_EN | ADC_OFR3_OFFSET3_CH | ADC_OFR3_OFFSET3);
 843:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Reset register OFR4 */
 844:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->OFR4, ADC_OFR4_OFFSET4_EN | ADC_OFR4_OFFSET4_CH | ADC_OFR4_OFFSET4);
 845:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 846:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Reset registers JDR1, JDR2, JDR3, JDR4 */
 847:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* bits in access mode read only, no direct reset applicable*/
 848:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 849:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Reset register AWD2CR */
 850:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->AWD2CR, ADC_AWD2CR_AWD2CH);
 851:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 852:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Reset register AWD3CR */
 853:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->AWD3CR, ADC_AWD3CR_AWD3CH);
 854:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 855:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Reset register DIFSEL */
 856:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->DIFSEL, ADC_DIFSEL_DIFSEL);
 857:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 858:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Reset register CALFACT */
 859:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->CALFACT, ADC_CALFACT_CALFACT_D | ADC_CALFACT_CALFACT_S);
 860:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 861:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 862:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* ========== Reset common ADC registers ========== */
 863:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 864:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Software is allowed to change common parameters only when all the other
 865:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****      ADCs are disabled.   */
 866:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   if (__LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE(__LL_ADC_COMMON_INSTANCE(hadc->Instance)) == 0UL)
 867:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
 868:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Reset configuration of ADC common register CCR:
 869:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       - clock mode: CKMODE, PRESCEN
 870:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       - multimode related parameters (when this feature is available): MDMA,
 871:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         DMACFG, DELAY, DUAL (set by HAL_ADCEx_MultiModeConfigChannel() API)
 872:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       - internal measurement paths: Vbat, temperature sensor, Vref (set into
 873:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         HAL_ADC_ConfigChannel() or HAL_ADCEx_InjectedConfigChannel() )
 874:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     */
 875:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     ADC_CLEAR_COMMON_CONTROL_REGISTER(hadc);
 876:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 877:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* ========== Hard reset ADC peripheral ========== */
 878:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Performs a global reset of the entire ADC peripherals instances        */
 879:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* sharing the same common ADC instance: ADC state is forced to           */
 880:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* a similar state as after device power-on.                              */
 881:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Note: A possible implementation is to add RCC bus reset of ADC         */
 882:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* (for example, using macro                                              */
 883:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /*  __HAL_RCC_ADC..._FORCE_RESET()/..._RELEASE_RESET()/..._CLK_DISABLE()) */
 884:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* in function "void HAL_ADC_MspDeInit(ADC_HandleTypeDef *hadc)":         */
ARM GAS  /tmp/ccEuGJBQ.s 			page 17


 885:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
 886:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     if (hadc->MspDeInitCallback == NULL)
 887:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 888:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       hadc->MspDeInitCallback = HAL_ADC_MspDeInit; /* Legacy weak MspDeInit  */
 889:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
 890:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 891:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* DeInit the low level hardware */
 892:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     hadc->MspDeInitCallback(hadc);
 893:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #else
 894:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* DeInit the low level hardware */
 895:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     HAL_ADC_MspDeInit(hadc);
 896:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 897:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
 898:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 899:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Set ADC error code to none */
 900:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   ADC_CLEAR_ERRORCODE(hadc);
 901:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 902:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Reset injected channel configuration parameters */
 903:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   hadc->InjectionConfig.ContextQueue = 0;
 904:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   hadc->InjectionConfig.ChannelCount = 0;
 905:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 906:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Set ADC state */
 907:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   hadc->State = HAL_ADC_STATE_RESET;
 908:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 909:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Process unlocked */
 910:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   __HAL_UNLOCK(hadc);
 911:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 912:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Return function status */
 913:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   return tmp_hal_status;
 914:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** }
 915:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 916:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** /**
 917:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @brief  Initialize the ADC MSP.
 918:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @param hadc ADC handle
 919:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @retval None
 920:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   */
 921:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** __weak void HAL_ADC_MspInit(ADC_HandleTypeDef *hadc)
 922:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** {
  30              		.loc 1 922 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
 923:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
 924:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   UNUSED(hadc);
  35              		.loc 1 924 3 view .LVU1
 925:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 926:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* NOTE : This function should not be modified. When the callback is needed,
 927:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             function HAL_ADC_MspInit must be implemented in the user file.
 928:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****    */
 929:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** }
  36              		.loc 1 929 1 is_stmt 0 view .LVU2
  37 0000 7047     		bx	lr
  38              		.cfi_endproc
  39              	.LFE331:
  41              		.section	.text.HAL_ADC_Init,"ax",%progbits
  42              		.align	1
ARM GAS  /tmp/ccEuGJBQ.s 			page 18


  43              		.global	HAL_ADC_Init
  44              		.syntax unified
  45              		.thumb
  46              		.thumb_func
  48              	HAL_ADC_Init:
  49              	.LVL1:
  50              	.LFB329:
 404:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
  51              		.loc 1 404 1 is_stmt 1 view -0
  52              		.cfi_startproc
  53              		@ args = 0, pretend = 0, frame = 8
  54              		@ frame_needed = 0, uses_anonymous_args = 0
 404:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
  55              		.loc 1 404 1 is_stmt 0 view .LVU4
  56 0000 30B5     		push	{r4, r5, lr}
  57              	.LCFI0:
  58              		.cfi_def_cfa_offset 12
  59              		.cfi_offset 4, -12
  60              		.cfi_offset 5, -8
  61              		.cfi_offset 14, -4
  62 0002 83B0     		sub	sp, sp, #12
  63              	.LCFI1:
  64              		.cfi_def_cfa_offset 24
 405:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t tmpCFGR;
  65              		.loc 1 405 3 is_stmt 1 view .LVU5
  66              	.LVL2:
 406:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t tmp_adc_reg_is_conversion_on_going;
  67              		.loc 1 406 3 view .LVU6
 407:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   __IO uint32_t wait_loop_index = 0UL;
  68              		.loc 1 407 3 view .LVU7
 408:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t tmp_adc_is_conversion_on_going_regular;
  69              		.loc 1 408 3 view .LVU8
 408:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t tmp_adc_is_conversion_on_going_regular;
  70              		.loc 1 408 17 is_stmt 0 view .LVU9
  71 0004 0023     		movs	r3, #0
  72 0006 0193     		str	r3, [sp, #4]
 409:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t tmp_adc_is_conversion_on_going_injected;
  73              		.loc 1 409 3 is_stmt 1 view .LVU10
 410:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
  74              		.loc 1 410 3 view .LVU11
 413:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
  75              		.loc 1 413 3 view .LVU12
 413:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
  76              		.loc 1 413 6 is_stmt 0 view .LVU13
  77 0008 0028     		cmp	r0, #0
  78 000a 00F00D81 		beq	.L25
  79 000e 0446     		mov	r4, r0
 419:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   assert_param(IS_ADC_CLOCKPRESCALER(hadc->Init.ClockPrescaler));
  80              		.loc 1 419 3 is_stmt 1 view .LVU14
 420:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   assert_param(IS_ADC_RESOLUTION(hadc->Init.Resolution));
  81              		.loc 1 420 3 view .LVU15
 421:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   assert_param(IS_ADC_DATA_ALIGN(hadc->Init.DataAlign));
  82              		.loc 1 421 3 view .LVU16
 422:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   assert_param(IS_ADC_GAIN_COMPENSATION(hadc->Init.GainCompensation));
  83              		.loc 1 422 3 view .LVU17
 423:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   assert_param(IS_ADC_SCAN_MODE(hadc->Init.ScanConvMode));
  84              		.loc 1 423 3 view .LVU18
ARM GAS  /tmp/ccEuGJBQ.s 			page 19


 424:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.ContinuousConvMode));
  85              		.loc 1 424 3 view .LVU19
 425:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   assert_param(IS_ADC_EXTTRIG_EDGE(hadc->Init.ExternalTrigConvEdge));
  86              		.loc 1 425 3 view .LVU20
 426:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   assert_param(IS_ADC_EXTTRIG(hadc, hadc->Init.ExternalTrigConv));
  87              		.loc 1 426 3 view .LVU21
 427:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   assert_param(IS_ADC_SAMPLINGMODE(hadc->Init.SamplingMode));
  88              		.loc 1 427 3 view .LVU22
 428:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.DMAContinuousRequests));
  89              		.loc 1 428 3 view .LVU23
 429:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   assert_param(IS_ADC_EOC_SELECTION(hadc->Init.EOCSelection));
  90              		.loc 1 429 3 view .LVU24
 430:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   assert_param(IS_ADC_OVERRUN(hadc->Init.Overrun));
  91              		.loc 1 430 3 view .LVU25
 431:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.LowPowerAutoWait));
  92              		.loc 1 431 3 view .LVU26
 432:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.OversamplingMode));
  93              		.loc 1 432 3 view .LVU27
 433:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
  94              		.loc 1 433 3 view .LVU28
 435:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
  95              		.loc 1 435 3 view .LVU29
 442:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
  96              		.loc 1 442 7 view .LVU30
 447:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
  97              		.loc 1 447 3 view .LVU31
 451:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
  98              		.loc 1 451 3 view .LVU32
 451:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
  99              		.loc 1 451 11 is_stmt 0 view .LVU33
 100 0010 C36D     		ldr	r3, [r0, #92]
 451:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
 101              		.loc 1 451 6 view .LVU34
 102 0012 13B3     		cbz	r3, .L28
 103              	.LVL3:
 104              	.L4:
 485:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
 105              		.loc 1 485 3 is_stmt 1 view .LVU35
 485:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
 106              		.loc 1 485 7 is_stmt 0 view .LVU36
 107 0014 2368     		ldr	r3, [r4]
 108              	.LVL4:
 109              	.LBB334:
 110              	.LBI334:
 111              		.file 2 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h"
   1:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
   2:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   ******************************************************************************
   3:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @file    stm32g4xx_ll_adc.h
   4:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @author  MCD Application Team
   5:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief   Header file of ADC LL module.
   6:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   ******************************************************************************
   7:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @attention
   8:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *
   9:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * <h2><center>&copy; Copyright (c) 2019 STMicroelectronics.
  10:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * All rights reserved.</center></h2>
  11:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *
  12:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * This software component is licensed by ST under BSD 3-Clause license,
ARM GAS  /tmp/ccEuGJBQ.s 			page 20


  13:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * the "License"; You may not use this file except in compliance with the
  14:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * License. You may obtain a copy of the License at:
  15:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *
  17:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   ******************************************************************************
  18:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
  19:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
  20:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Define to prevent recursive inclusion -------------------------------------*/
  21:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #ifndef STM32G4xx_LL_ADC_H
  22:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define STM32G4xx_LL_ADC_H
  23:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
  24:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #ifdef __cplusplus
  25:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** extern "C" {
  26:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #endif
  27:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
  28:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Includes ------------------------------------------------------------------*/
  29:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #include "stm32g4xx.h"
  30:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
  31:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @addtogroup STM32G4xx_LL_Driver
  32:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
  33:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
  34:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
  35:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #if defined (ADC1) || defined (ADC2) || defined (ADC3) || defined (ADC4) || defined (ADC5)
  36:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
  37:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL ADC
  38:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
  39:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
  40:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
  41:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Private types -------------------------------------------------------------*/
  42:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Private variables ---------------------------------------------------------*/
  43:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
  44:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Private constants ---------------------------------------------------------*/
  45:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_Private_Constants ADC Private Constants
  46:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
  47:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
  48:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
  49:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Internal mask for ADC group regular sequencer:                             */
  50:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* To select into literal LL_ADC_REG_RANK_x the relevant bits for:            */
  51:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* - sequencer register offset                                                */
  52:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* - sequencer rank bits position into the selected register                  */
  53:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
  54:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Internal register offset for ADC group regular sequencer configuration */
  55:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* (offset placed into a spare area of literal definition) */
  56:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_SQR1_REGOFFSET                 (0x00000000UL)
  57:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_SQR2_REGOFFSET                 (0x00000100UL)
  58:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_SQR3_REGOFFSET                 (0x00000200UL)
  59:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_SQR4_REGOFFSET                 (0x00000300UL)
  60:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
  61:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_REG_SQRX_REGOFFSET_MASK        (ADC_SQR1_REGOFFSET | ADC_SQR2_REGOFFSET \
  62:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                             | ADC_SQR3_REGOFFSET | ADC_SQR4_REGOFFSET)
  63:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_SQRX_REGOFFSET_POS             (8UL) /* Position of bits ADC_SQRx_REGOFFSET in ADC_REG_
  64:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_REG_RANK_ID_SQRX_MASK          (ADC_CHANNEL_ID_NUMBER_MASK_POSBIT0)
  65:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
  66:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Definition of ADC group regular sequencer bits information to be inserted  */
  67:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* into ADC group regular sequencer ranks literals definition.                */
  68:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_REG_RANK_1_SQRX_BITOFFSET_POS  (ADC_SQR1_SQ1_Pos)
  69:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_REG_RANK_2_SQRX_BITOFFSET_POS  (ADC_SQR1_SQ2_Pos)
ARM GAS  /tmp/ccEuGJBQ.s 			page 21


  70:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_REG_RANK_3_SQRX_BITOFFSET_POS  (ADC_SQR1_SQ3_Pos)
  71:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_REG_RANK_4_SQRX_BITOFFSET_POS  (ADC_SQR1_SQ4_Pos)
  72:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_REG_RANK_5_SQRX_BITOFFSET_POS  (ADC_SQR2_SQ5_Pos)
  73:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_REG_RANK_6_SQRX_BITOFFSET_POS  (ADC_SQR2_SQ6_Pos)
  74:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_REG_RANK_7_SQRX_BITOFFSET_POS  (ADC_SQR2_SQ7_Pos)
  75:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_REG_RANK_8_SQRX_BITOFFSET_POS  (ADC_SQR2_SQ8_Pos)
  76:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_REG_RANK_9_SQRX_BITOFFSET_POS  (ADC_SQR2_SQ9_Pos)
  77:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_REG_RANK_10_SQRX_BITOFFSET_POS (ADC_SQR3_SQ10_Pos)
  78:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_REG_RANK_11_SQRX_BITOFFSET_POS (ADC_SQR3_SQ11_Pos)
  79:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_REG_RANK_12_SQRX_BITOFFSET_POS (ADC_SQR3_SQ12_Pos)
  80:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_REG_RANK_13_SQRX_BITOFFSET_POS (ADC_SQR3_SQ13_Pos)
  81:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_REG_RANK_14_SQRX_BITOFFSET_POS (ADC_SQR3_SQ14_Pos)
  82:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_REG_RANK_15_SQRX_BITOFFSET_POS (ADC_SQR4_SQ15_Pos)
  83:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_REG_RANK_16_SQRX_BITOFFSET_POS (ADC_SQR4_SQ16_Pos)
  84:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
  85:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
  86:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
  87:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Internal mask for ADC group injected sequencer:                            */
  88:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* To select into literal LL_ADC_INJ_RANK_x the relevant bits for:            */
  89:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* - data register offset                                                     */
  90:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* - sequencer rank bits position into the selected register                  */
  91:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
  92:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Internal register offset for ADC group injected data register */
  93:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* (offset placed into a spare area of literal definition) */
  94:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_JDR1_REGOFFSET                 (0x00000000UL)
  95:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_JDR2_REGOFFSET                 (0x00000100UL)
  96:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_JDR3_REGOFFSET                 (0x00000200UL)
  97:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_JDR4_REGOFFSET                 (0x00000300UL)
  98:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
  99:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_INJ_JDRX_REGOFFSET_MASK        (ADC_JDR1_REGOFFSET | ADC_JDR2_REGOFFSET \
 100:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                             | ADC_JDR3_REGOFFSET | ADC_JDR4_REGOFFSET)
 101:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_INJ_RANK_ID_JSQR_MASK          (ADC_CHANNEL_ID_NUMBER_MASK_POSBIT0)
 102:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_JDRX_REGOFFSET_POS             (8UL) /* Position of bits ADC_JDRx_REGOFFSET in ADC_INJ_
 103:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 104:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Definition of ADC group injected sequencer bits information to be inserted */
 105:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* into ADC group injected sequencer ranks literals definition.               */
 106:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_INJ_RANK_1_JSQR_BITOFFSET_POS  (ADC_JSQR_JSQ1_Pos)
 107:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_INJ_RANK_2_JSQR_BITOFFSET_POS  (ADC_JSQR_JSQ2_Pos)
 108:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_INJ_RANK_3_JSQR_BITOFFSET_POS  (ADC_JSQR_JSQ3_Pos)
 109:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_INJ_RANK_4_JSQR_BITOFFSET_POS  (ADC_JSQR_JSQ4_Pos)
 110:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 111:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 112:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 113:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Internal mask for ADC group regular trigger:                               */
 114:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* To select into literal LL_ADC_REG_TRIG_x the relevant bits for:            */
 115:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* - regular trigger source                                                   */
 116:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* - regular trigger edge                                                     */
 117:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_REG_TRIG_EXT_EDGE_DEFAULT       (ADC_CFGR_EXTEN_0) /* Trigger edge set to rising edge (
 118:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 119:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Mask containing trigger source masks for each of possible                  */
 120:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* trigger edge selection duplicated with shifts [0; 4; 8; 12]                */
 121:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* corresponding to {SW start; ext trigger; ext trigger; ext trigger}.        */
 122:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_REG_TRIG_SOURCE_MASK            (((LL_ADC_REG_TRIG_SOFTWARE & ADC_CFGR_EXTSEL) << (4U *
 123:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              ((ADC_CFGR_EXTSEL)                            << (4U *
 124:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              ((ADC_CFGR_EXTSEL)                            << (4U *
 125:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              ((ADC_CFGR_EXTSEL)                            << (4U *
 126:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
ARM GAS  /tmp/ccEuGJBQ.s 			page 22


 127:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Mask containing trigger edge masks for each of possible                    */
 128:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* trigger edge selection duplicated with shifts [0; 4; 8; 12]                */
 129:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* corresponding to {SW start; ext trigger; ext trigger; ext trigger}.        */
 130:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_REG_TRIG_EDGE_MASK              (((LL_ADC_REG_TRIG_SOFTWARE & ADC_CFGR_EXTEN) << (4U * 
 131:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              ((ADC_REG_TRIG_EXT_EDGE_DEFAULT)             << (4U * 
 132:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              ((ADC_REG_TRIG_EXT_EDGE_DEFAULT)             << (4U * 
 133:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              ((ADC_REG_TRIG_EXT_EDGE_DEFAULT)             << (4U * 
 134:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 135:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Definition of ADC group regular trigger bits information.                  */
 136:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_REG_TRIG_EXTSEL_BITOFFSET_POS  (ADC_CFGR_EXTSEL_Pos)
 137:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_REG_TRIG_EXTEN_BITOFFSET_POS   (ADC_CFGR_EXTEN_Pos)
 138:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 139:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 140:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 141:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Internal mask for ADC group injected trigger:                              */
 142:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* To select into literal LL_ADC_INJ_TRIG_x the relevant bits for:            */
 143:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* - injected trigger source                                                  */
 144:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* - injected trigger edge                                                    */
 145:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_INJ_TRIG_EXT_EDGE_DEFAULT      (ADC_JSQR_JEXTEN_0) /* Trigger edge set to rising edge (
 146:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 147:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Mask containing trigger source masks for each of possible                  */
 148:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* trigger edge selection duplicated with shifts [0; 4; 8; 12]                */
 149:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* corresponding to {SW start; ext trigger; ext trigger; ext trigger}.        */
 150:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_INJ_TRIG_SOURCE_MASK            (((LL_ADC_INJ_TRIG_SOFTWARE & ADC_JSQR_JEXTSEL)  << (4U
 151:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              ((ADC_JSQR_JEXTSEL)                             << (4U
 152:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              ((ADC_JSQR_JEXTSEL)                             << (4U
 153:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              ((ADC_JSQR_JEXTSEL)                             << (4U
 154:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 155:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Mask containing trigger edge masks for each of possible                    */
 156:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* trigger edge selection duplicated with shifts [0; 4; 8; 12]                */
 157:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* corresponding to {SW start; ext trigger; ext trigger; ext trigger}.        */
 158:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_INJ_TRIG_EDGE_MASK              (((LL_ADC_INJ_TRIG_SOFTWARE & ADC_JSQR_JEXTEN) << (4U *
 159:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              ((ADC_INJ_TRIG_EXT_EDGE_DEFAULT)              << (4U *
 160:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              ((ADC_INJ_TRIG_EXT_EDGE_DEFAULT)              << (4U *
 161:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              ((ADC_INJ_TRIG_EXT_EDGE_DEFAULT)              << (4U *
 162:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 163:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Definition of ADC group injected trigger bits information.                 */
 164:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_INJ_TRIG_EXTSEL_BITOFFSET_POS  (ADC_JSQR_JEXTSEL_Pos)
 165:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_INJ_TRIG_EXTEN_BITOFFSET_POS   (ADC_JSQR_JEXTEN_Pos)
 166:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 167:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 168:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 169:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 170:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 171:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 172:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Internal mask for ADC channel:                                             */
 173:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* To select into literal LL_ADC_CHANNEL_x the relevant bits for:             */
 174:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* - channel identifier defined by number                                     */
 175:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* - channel identifier defined by bitfield                                   */
 176:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* - channel differentiation between external channels (connected to          */
 177:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /*   GPIO pins) and internal channels (connected to internal paths)           */
 178:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* - channel sampling time defined by SMPRx register offset                   */
 179:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /*   and SMPx bits positions into SMPRx register                              */
 180:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_ID_NUMBER_MASK         (ADC_CFGR_AWD1CH)
 181:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_ID_BITFIELD_MASK       (ADC_AWD2CR_AWD2CH)
 182:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS (ADC_CFGR_AWD1CH_Pos)
 183:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_ID_MASK                (ADC_CHANNEL_ID_NUMBER_MASK | ADC_CHANNEL_ID_BITFIELD_MA
ARM GAS  /tmp/ccEuGJBQ.s 			page 23


 184:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                             | ADC_CHANNEL_ID_INTERNAL_CH_MASK)
 185:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Equivalent mask of ADC_CHANNEL_NUMBER_MASK aligned on register LSB (bit 0) */
 186:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_ID_NUMBER_MASK_POSBIT0 (ADC_SQR2_SQ5) /* Equivalent to shift: (ADC_CHANNEL_NUMB
 187:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 188:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Channel differentiation between external and internal channels */
 189:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_ID_INTERNAL_CH         (0x80000000UL) /* Marker of internal channel */
 190:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_ID_INTERNAL_CH_2       (0x00080000UL) /* Marker of internal channel for other A
 191:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_ID_INTERNAL_CH_MASK    (ADC_CHANNEL_ID_INTERNAL_CH | ADC_CHANNEL_ID_INTERNAL_CH
 192:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 193:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Internal register offset for ADC channel sampling time configuration */
 194:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* (offset placed into a spare area of literal definition) */
 195:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_SMPR1_REGOFFSET                (0x00000000UL)
 196:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_SMPR2_REGOFFSET                (0x02000000UL)
 197:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_SMPRX_REGOFFSET_MASK   (ADC_SMPR1_REGOFFSET | ADC_SMPR2_REGOFFSET)
 198:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_SMPRX_REGOFFSET_POS            (25UL) /* Position of bits ADC_SMPRx_REGOFFSET in ADC_CH
 199:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 200:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_SMPx_BITOFFSET_MASK    (0x01F00000UL)
 201:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_SMPx_BITOFFSET_POS     (20UL)           /* Value equivalent to bitfield "ADC_CH
 202:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 203:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Definition of channels ID number information to be inserted into           */
 204:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* channels literals definition.                                              */
 205:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_0_NUMBER               (0x00000000UL)
 206:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_1_NUMBER               (ADC_CFGR_AWD1CH_0)
 207:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_2_NUMBER               (ADC_CFGR_AWD1CH_1)
 208:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_3_NUMBER               (ADC_CFGR_AWD1CH_1 | ADC_CFGR_AWD1CH_0)
 209:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_4_NUMBER               (ADC_CFGR_AWD1CH_2)
 210:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_5_NUMBER               (ADC_CFGR_AWD1CH_2 | ADC_CFGR_AWD1CH_0)
 211:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_6_NUMBER               (ADC_CFGR_AWD1CH_2 | ADC_CFGR_AWD1CH_1)
 212:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_7_NUMBER               (ADC_CFGR_AWD1CH_2 | ADC_CFGR_AWD1CH_1 | ADC_CFGR_AWD1CH
 213:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_8_NUMBER               (ADC_CFGR_AWD1CH_3)
 214:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_9_NUMBER               (ADC_CFGR_AWD1CH_3 | ADC_CFGR_AWD1CH_0)
 215:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_10_NUMBER              (ADC_CFGR_AWD1CH_3 | ADC_CFGR_AWD1CH_1)
 216:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_11_NUMBER              (ADC_CFGR_AWD1CH_3 | ADC_CFGR_AWD1CH_1 | ADC_CFGR_AWD1CH
 217:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_12_NUMBER              (ADC_CFGR_AWD1CH_3 | ADC_CFGR_AWD1CH_2)
 218:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_13_NUMBER              (ADC_CFGR_AWD1CH_3 | ADC_CFGR_AWD1CH_2 | ADC_CFGR_AWD1CH
 219:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_14_NUMBER              (ADC_CFGR_AWD1CH_3 | ADC_CFGR_AWD1CH_2 | ADC_CFGR_AWD1CH
 220:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_15_NUMBER              (ADC_CFGR_AWD1CH_3 | ADC_CFGR_AWD1CH_2 | \
 221:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                             ADC_CFGR_AWD1CH_1 | ADC_CFGR_AWD1CH_0)
 222:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_16_NUMBER              (ADC_CFGR_AWD1CH_4)
 223:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_17_NUMBER              (ADC_CFGR_AWD1CH_4 | ADC_CFGR_AWD1CH_0)
 224:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_18_NUMBER              (ADC_CFGR_AWD1CH_4 | ADC_CFGR_AWD1CH_1)
 225:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 226:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Definition of channels ID bitfield information to be inserted into         */
 227:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* channels literals definition.                                              */
 228:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_0_BITFIELD             (ADC_AWD2CR_AWD2CH_0)
 229:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_1_BITFIELD             (ADC_AWD2CR_AWD2CH_1)
 230:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_2_BITFIELD             (ADC_AWD2CR_AWD2CH_2)
 231:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_3_BITFIELD             (ADC_AWD2CR_AWD2CH_3)
 232:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_4_BITFIELD             (ADC_AWD2CR_AWD2CH_4)
 233:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_5_BITFIELD             (ADC_AWD2CR_AWD2CH_5)
 234:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_6_BITFIELD             (ADC_AWD2CR_AWD2CH_6)
 235:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_7_BITFIELD             (ADC_AWD2CR_AWD2CH_7)
 236:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_8_BITFIELD             (ADC_AWD2CR_AWD2CH_8)
 237:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_9_BITFIELD             (ADC_AWD2CR_AWD2CH_9)
 238:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_10_BITFIELD            (ADC_AWD2CR_AWD2CH_10)
 239:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_11_BITFIELD            (ADC_AWD2CR_AWD2CH_11)
 240:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_12_BITFIELD            (ADC_AWD2CR_AWD2CH_12)
ARM GAS  /tmp/ccEuGJBQ.s 			page 24


 241:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_13_BITFIELD            (ADC_AWD2CR_AWD2CH_13)
 242:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_14_BITFIELD            (ADC_AWD2CR_AWD2CH_14)
 243:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_15_BITFIELD            (ADC_AWD2CR_AWD2CH_15)
 244:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_16_BITFIELD            (ADC_AWD2CR_AWD2CH_16)
 245:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_17_BITFIELD            (ADC_AWD2CR_AWD2CH_17)
 246:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_18_BITFIELD            (ADC_AWD2CR_AWD2CH_18)
 247:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 248:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Definition of channels sampling time information to be inserted into       */
 249:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* channels literals definition.                                              */
 250:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_0_SMP                  (ADC_SMPR1_REGOFFSET | (( 0UL) << ADC_CHANNEL_SMPx_BITOF
 251:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_1_SMP                  (ADC_SMPR1_REGOFFSET | (( 3UL) << ADC_CHANNEL_SMPx_BITOF
 252:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_2_SMP                  (ADC_SMPR1_REGOFFSET | (( 6UL) << ADC_CHANNEL_SMPx_BITOF
 253:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_3_SMP                  (ADC_SMPR1_REGOFFSET | (( 9UL) << ADC_CHANNEL_SMPx_BITOF
 254:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_4_SMP                  (ADC_SMPR1_REGOFFSET | ((12UL) << ADC_CHANNEL_SMPx_BITOF
 255:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_5_SMP                  (ADC_SMPR1_REGOFFSET | ((15UL) << ADC_CHANNEL_SMPx_BITOF
 256:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_6_SMP                  (ADC_SMPR1_REGOFFSET | ((18UL) << ADC_CHANNEL_SMPx_BITOF
 257:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_7_SMP                  (ADC_SMPR1_REGOFFSET | ((21UL) << ADC_CHANNEL_SMPx_BITOF
 258:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_8_SMP                  (ADC_SMPR1_REGOFFSET | ((24UL) << ADC_CHANNEL_SMPx_BITOF
 259:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_9_SMP                  (ADC_SMPR1_REGOFFSET | ((27UL) << ADC_CHANNEL_SMPx_BITOF
 260:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_10_SMP                 (ADC_SMPR2_REGOFFSET | (( 0UL) << ADC_CHANNEL_SMPx_BITOF
 261:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_11_SMP                 (ADC_SMPR2_REGOFFSET | (( 3UL) << ADC_CHANNEL_SMPx_BITOF
 262:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_12_SMP                 (ADC_SMPR2_REGOFFSET | (( 6UL) << ADC_CHANNEL_SMPx_BITOF
 263:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_13_SMP                 (ADC_SMPR2_REGOFFSET | (( 9UL) << ADC_CHANNEL_SMPx_BITOF
 264:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_14_SMP                 (ADC_SMPR2_REGOFFSET | ((12UL) << ADC_CHANNEL_SMPx_BITOF
 265:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_15_SMP                 (ADC_SMPR2_REGOFFSET | ((15UL) << ADC_CHANNEL_SMPx_BITOF
 266:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_16_SMP                 (ADC_SMPR2_REGOFFSET | ((18UL) << ADC_CHANNEL_SMPx_BITOF
 267:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_17_SMP                 (ADC_SMPR2_REGOFFSET | ((21UL) << ADC_CHANNEL_SMPx_BITOF
 268:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_18_SMP                 (ADC_SMPR2_REGOFFSET | ((24UL) << ADC_CHANNEL_SMPx_BITOF
 269:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 270:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 271:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Internal mask for ADC mode single or differential ended:                   */
 272:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* To select into literals LL_ADC_SINGLE_ENDED or LL_ADC_SINGLE_DIFFERENTIAL  */
 273:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* the relevant bits for:                                                     */
 274:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* (concatenation of multiple bits used in different registers)               */
 275:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* - ADC calibration: calibration start, calibration factor get or set        */
 276:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* - ADC channels: set each ADC channel ending mode                           */
 277:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_SINGLEDIFF_CALIB_START_MASK    (ADC_CR_ADCALDIF)
 278:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_SINGLEDIFF_CALIB_FACTOR_MASK   (ADC_CALFACT_CALFACT_D | ADC_CALFACT_CALFACT_S)
 279:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_SINGLEDIFF_CHANNEL_MASK        (ADC_CHANNEL_ID_BITFIELD_MASK) /* Equivalent to ADC_DIFS
 280:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_SINGLEDIFF_CHANNEL_SHIFT_MASK  (ADC_CALFACT_CALFACT_S_4 | ADC_CALFACT_CALFACT_S_3) /* B
 281:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_SINGLEDIFF_CALIB_F_BIT_D_MASK   (0x00010000UL)                           /* Selection o
 282:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_SINGLEDIFF_CALIB_F_BIT_D_POS    (16UL)                                   /* Selection o
 283:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_SINGLEDIFF_CALIB_F_BIT_D_SHIFT4 (ADC_SINGLEDIFF_CALIB_F_BIT_D_POS - 4UL) /* Shift of bi
 284:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 285:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Internal mask for ADC analog watchdog:                                     */
 286:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* To select into literals LL_ADC_AWD_CHANNELx_xxx the relevant bits for:     */
 287:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* (concatenation of multiple bits used in different analog watchdogs,        */
 288:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* (feature of several watchdogs not available on all STM32 families)).       */
 289:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* - analog watchdog 1: monitored channel defined by number,                  */
 290:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /*   selection of ADC group (ADC groups regular and-or injected).             */
 291:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* - analog watchdog 2 and 3: monitored channel defined by bitfield, no       */
 292:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /*   selection on groups.                                                     */
 293:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 294:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Internal register offset for ADC analog watchdog channel configuration */
 295:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_AWD_CR1_REGOFFSET              (0x00000000UL)
 296:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_AWD_CR2_REGOFFSET              (0x00100000UL)
 297:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_AWD_CR3_REGOFFSET              (0x00200000UL)
ARM GAS  /tmp/ccEuGJBQ.s 			page 25


 298:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 299:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Register offset gap between AWD1 and AWD2-AWD3 configuration registers */
 300:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* (Set separately as ADC_AWD_CRX_REGOFFSET to spare 32 bits space */
 301:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_AWD_CR12_REGOFFSETGAP_MASK     (ADC_AWD2CR_AWD2CH_0)
 302:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_AWD_CR12_REGOFFSETGAP_VAL      (0x00000024UL)
 303:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 304:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_AWD_CRX_REGOFFSET_MASK         (ADC_AWD_CR1_REGOFFSET | ADC_AWD_CR2_REGOFFSET | ADC_AWD
 305:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 306:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_AWD_CR1_CHANNEL_MASK           (ADC_CFGR_AWD1CH | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN | 
 307:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_AWD_CR23_CHANNEL_MASK          (ADC_AWD2CR_AWD2CH)
 308:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_AWD_CR_ALL_CHANNEL_MASK        (ADC_AWD_CR1_CHANNEL_MASK | ADC_AWD_CR23_CHANNEL_MASK)
 309:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 310:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_AWD_CRX_REGOFFSET_POS          (20UL) /* Position of bits ADC_AWD_CRx_REGOFFSET in ADC_
 311:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 312:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Internal register offset for ADC analog watchdog threshold configuration */
 313:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_AWD_TR1_REGOFFSET              (ADC_AWD_CR1_REGOFFSET)
 314:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_AWD_TR2_REGOFFSET              (ADC_AWD_CR2_REGOFFSET)
 315:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_AWD_TR3_REGOFFSET              (ADC_AWD_CR3_REGOFFSET)
 316:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_AWD_TRX_REGOFFSET_MASK         (ADC_AWD_TR1_REGOFFSET | ADC_AWD_TR2_REGOFFSET | ADC_AWD
 317:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_AWD_TRX_REGOFFSET_POS          (ADC_AWD_CRX_REGOFFSET_POS)     /* Position of bits ADC_
 318:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_AWD_TRX_BIT_HIGH_MASK          (0x00010000UL)                   /* Selection of 1 bit t
 319:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_AWD_TRX_BIT_HIGH_POS           (16UL)                           /* Selection of 1 bit t
 320:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_AWD_TRX_BIT_HIGH_SHIFT4        (ADC_AWD_TRX_BIT_HIGH_POS - 4UL) /* Shift of bit ADC_AWD
 321:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 322:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Internal mask for ADC offset:                                              */
 323:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Internal register offset for ADC offset number configuration */
 324:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_OFR1_REGOFFSET                 (0x00000000UL)
 325:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_OFR2_REGOFFSET                 (0x00000001UL)
 326:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_OFR3_REGOFFSET                 (0x00000002UL)
 327:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_OFR4_REGOFFSET                 (0x00000003UL)
 328:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_OFRx_REGOFFSET_MASK            (ADC_OFR1_REGOFFSET | ADC_OFR2_REGOFFSET \
 329:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                             | ADC_OFR3_REGOFFSET | ADC_OFR4_REGOFFSET)
 330:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 331:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 332:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* ADC registers bits positions */
 333:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CFGR_RES_BITOFFSET_POS         (ADC_CFGR_RES_Pos)
 334:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CFGR_AWD1SGL_BITOFFSET_POS     (ADC_CFGR_AWD1SGL_Pos)
 335:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CFGR_AWD1EN_BITOFFSET_POS      (ADC_CFGR_AWD1EN_Pos)
 336:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CFGR_JAWD1EN_BITOFFSET_POS     (ADC_CFGR_JAWD1EN_Pos)
 337:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_TR1_HT1_BITOFFSET_POS          (ADC_TR1_HT1_Pos)
 338:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 339:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 340:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* ADC registers bits groups */
 341:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CR_BITS_PROPERTY_RS            (ADC_CR_ADCAL | ADC_CR_JADSTP | ADC_CR_ADSTP | ADC_CR_JA
 342:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 343:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 344:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* ADC internal channels related definitions */
 345:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Internal voltage reference VrefInt */
 346:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define VREFINT_CAL_ADDR                   ((uint16_t*) (0x1FFF75AAUL)) /* Internal voltage referen
 347:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define VREFINT_CAL_VREF                   (3000UL)                     /* Analog voltage reference
 348:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Temperature sensor */
 349:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define TEMPSENSOR_CAL1_ADDR               ((uint16_t*) (0x1FFF75A8UL)) /* Internal temperature sen
 350:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define TEMPSENSOR_CAL2_ADDR               ((uint16_t*) (0x1FFF75CAUL)) /* Internal temperature sen
 351:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define TEMPSENSOR_CAL1_TEMP               (30L)                        /* Internal temperature sen
 352:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define TEMPSENSOR_CAL2_TEMP               (110L)                       /* Internal temperature sen
 353:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define TEMPSENSOR_CAL_VREFANALOG          (3000UL)                     /* Analog voltage reference
 354:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
ARM GAS  /tmp/ccEuGJBQ.s 			page 26


 355:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
 356:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
 357:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 358:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 359:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 360:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Private macros ------------------------------------------------------------*/
 361:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_Private_Macros ADC Private Macros
 362:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
 363:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 364:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 365:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
 366:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Driver macro reserved for internal use: set a pointer to
 367:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         a register from a register basis from which an offset
 368:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         is applied.
 369:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __REG__ Register basis from which the offset is applied.
 370:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __REG_OFFFSET__ Offset to be applied (unit: number of registers).
 371:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Pointer to register address
 372:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 373:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define __ADC_PTR_REG_OFFSET(__REG__, __REG_OFFFSET__)                         \
 374:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   ((__IO uint32_t *)((uint32_t) ((uint32_t)(&(__REG__)) + ((__REG_OFFFSET__) << 2UL))))
 375:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 376:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
 377:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
 378:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 379:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 380:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 381:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Exported types ------------------------------------------------------------*/
 382:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #if defined(USE_FULL_LL_DRIVER)
 383:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_ES_INIT ADC Exported Init structure
 384:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
 385:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 386:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 387:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
 388:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Structure definition of some features of ADC common parameters
 389:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         and multimode
 390:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (all ADC instances belonging to the same ADC common instance).
 391:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   The setting of these parameters by function @ref LL_ADC_CommonInit()
 392:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         is conditioned to ADC instances state (all ADC instances
 393:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         sharing the same ADC common instance):
 394:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         All ADC instances sharing the same ADC common instance must be
 395:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         disabled.
 396:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 397:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** typedef struct
 398:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 399:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   uint32_t CommonClock;                 /*!< Set parameter common to several ADC: Clock source and 
 400:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_COMMON
 401:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              @note On this STM32 series, if ADC group injected is u
 402:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                                    clock ratio constraints between ADC clock and AH
 403:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                                    must be respected. Refer to reference manual.
 404:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 405:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 406:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 407:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #if defined(ADC_MULTIMODE_SUPPORT)
 408:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   uint32_t Multimode;                   /*!< Set ADC multimode configuration to operate in independ
 409:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_MULTI_
 410:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 411:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
ARM GAS  /tmp/ccEuGJBQ.s 			page 27


 412:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 413:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   uint32_t MultiDMATransfer;            /*!< Set ADC multimode conversion data transfer: no transfe
 414:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_MULTI_
 415:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 416:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 417:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 418:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   uint32_t MultiTwoSamplingDelay;       /*!< Set ADC multimode delay between 2 sampling phases.
 419:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_MULTI_
 420:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 421:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 422:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #endif /* ADC_MULTIMODE_SUPPORT */
 423:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 424:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** } LL_ADC_CommonInitTypeDef;
 425:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 426:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
 427:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Structure definition of some features of ADC instance.
 428:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   These parameters have an impact on ADC scope: ADC instance.
 429:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Affects both group regular and group injected (availability
 430:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         of ADC group injected depends on STM32 families).
 431:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Refer to corresponding unitary functions into
 432:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @ref ADC_LL_EF_Configuration_ADC_Instance .
 433:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   The setting of these parameters by function @ref LL_ADC_Init()
 434:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         is conditioned to ADC state:
 435:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC instance must be disabled.
 436:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         This condition is applied to all ADC features, for efficiency
 437:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         and compatibility over all STM32 families. However, the different
 438:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         features can be set under different ADC state conditions
 439:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (setting possible with ADC enabled without conversion on going,
 440:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC enabled with conversion on going, ...)
 441:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Each feature can be updated afterwards with a unitary function
 442:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         and potentially with ADC in a different state than disabled,
 443:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         refer to description of each function for setting
 444:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         conditioned to ADC state.
 445:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 446:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** typedef struct
 447:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 448:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   uint32_t Resolution;                  /*!< Set ADC resolution.
 449:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_RESOLU
 450:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 451:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 452:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 453:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   uint32_t DataAlignment;               /*!< Set ADC conversion data alignment.
 454:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_DATA_A
 455:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 456:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 457:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 458:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   uint32_t LowPowerMode;                /*!< Set ADC low power mode.
 459:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_LP_MOD
 460:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 461:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 462:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 463:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** } LL_ADC_InitTypeDef;
 464:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 465:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
 466:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Structure definition of some features of ADC group regular.
 467:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   These parameters have an impact on ADC scope: ADC group regular.
 468:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Refer to corresponding unitary functions into
ARM GAS  /tmp/ccEuGJBQ.s 			page 28


 469:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @ref ADC_LL_EF_Configuration_ADC_Group_Regular
 470:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (functions with prefix "REG").
 471:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   The setting of these parameters by function @ref LL_ADC_REG_Init()
 472:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         is conditioned to ADC state:
 473:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC instance must be disabled.
 474:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         This condition is applied to all ADC features, for efficiency
 475:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         and compatibility over all STM32 families. However, the different
 476:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         features can be set under different ADC state conditions
 477:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (setting possible with ADC enabled without conversion on going,
 478:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC enabled with conversion on going, ...)
 479:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Each feature can be updated afterwards with a unitary function
 480:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         and potentially with ADC in a different state than disabled,
 481:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         refer to description of each function for setting
 482:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         conditioned to ADC state.
 483:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 484:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** typedef struct
 485:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 486:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   uint32_t TriggerSource;               /*!< Set ADC group regular conversion trigger source: inter
 487:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_TR
 488:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              @note On this STM32 series, setting trigger source to 
 489:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                                    (default setting for compatibility with some ADC
 490:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                                    In case of need to modify trigger edge, use func
 491:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 492:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 493:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 494:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   uint32_t SequencerLength;             /*!< Set ADC group regular sequencer length.
 495:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_SE
 496:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 497:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 498:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 499:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   uint32_t SequencerDiscont;            /*!< Set ADC group regular sequencer discontinuous mode: se
 500:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_SE
 501:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              @note This parameter has an effect only if group regul
 502:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                                    (scan length of 2 ranks or more).
 503:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 504:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 505:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 506:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   uint32_t ContinuousMode;              /*!< Set ADC continuous conversion mode on ADC group regula
 507:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_CO
 508:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              Note: It is not possible to enable both ADC group regu
 509:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 510:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 511:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 512:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   uint32_t DMATransfer;                 /*!< Set ADC group regular conversion data transfer: no tra
 513:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_DM
 514:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 515:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 516:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 517:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   uint32_t Overrun;                     /*!< Set ADC group regular behavior in case of overrun:
 518:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              data preserved or overwritten.
 519:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_OV
 520:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 521:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 522:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 523:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** } LL_ADC_REG_InitTypeDef;
 524:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 525:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
ARM GAS  /tmp/ccEuGJBQ.s 			page 29


 526:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Structure definition of some features of ADC group injected.
 527:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   These parameters have an impact on ADC scope: ADC group injected.
 528:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Refer to corresponding unitary functions into
 529:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @ref ADC_LL_EF_Configuration_ADC_Group_Regular
 530:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (functions with prefix "INJ").
 531:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   The setting of these parameters by function @ref LL_ADC_INJ_Init()
 532:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         is conditioned to ADC state:
 533:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC instance must be disabled.
 534:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         This condition is applied to all ADC features, for efficiency
 535:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         and compatibility over all STM32 families. However, the different
 536:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         features can be set under different ADC state conditions
 537:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (setting possible with ADC enabled without conversion on going,
 538:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC enabled with conversion on going, ...)
 539:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Each feature can be updated afterwards with a unitary function
 540:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         and potentially with ADC in a different state than disabled,
 541:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         refer to description of each function for setting
 542:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         conditioned to ADC state.
 543:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 544:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** typedef struct
 545:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 546:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   uint32_t TriggerSource;               /*!< Set ADC group injected conversion trigger source: inte
 547:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_INJ_TR
 548:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              @note On this STM32 series, setting trigger source to 
 549:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                                    (default setting for compatibility with some ADC
 550:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                                    In case of need to modify trigger edge, use func
 551:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 552:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 553:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 554:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   uint32_t SequencerLength;             /*!< Set ADC group injected sequencer length.
 555:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_INJ_SE
 556:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 557:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 558:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 559:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   uint32_t SequencerDiscont;            /*!< Set ADC group injected sequencer discontinuous mode: s
 560:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_INJ_SE
 561:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              @note This parameter has an effect only if group injec
 562:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                                    (scan length of 2 ranks or more).
 563:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 564:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 565:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 566:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   uint32_t TrigAuto;                    /*!< Set ADC group injected conversion trigger: independent
 567:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_INJ_TR
 568:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              Note: This parameter must be set to set to independent
 569:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 570:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 571:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 572:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** } LL_ADC_INJ_InitTypeDef;
 573:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 574:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
 575:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
 576:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 577:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #endif /* USE_FULL_LL_DRIVER */
 578:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 579:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Exported constants --------------------------------------------------------*/
 580:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_Exported_Constants ADC Exported Constants
 581:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
 582:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
ARM GAS  /tmp/ccEuGJBQ.s 			page 30


 583:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 584:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_FLAG ADC flags
 585:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief    Flags defines which can be used with LL_ADC_ReadReg function
 586:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
 587:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 588:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_FLAG_ADRDY                  ADC_ISR_ADRDY      /*!< ADC flag ADC instance ready */
 589:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_FLAG_EOC                    ADC_ISR_EOC        /*!< ADC flag ADC group regular end o
 590:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_FLAG_EOS                    ADC_ISR_EOS        /*!< ADC flag ADC group regular end o
 591:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_FLAG_OVR                    ADC_ISR_OVR        /*!< ADC flag ADC group regular overr
 592:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_FLAG_EOSMP                  ADC_ISR_EOSMP      /*!< ADC flag ADC group regular end o
 593:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_FLAG_JEOC                   ADC_ISR_JEOC       /*!< ADC flag ADC group injected end 
 594:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_FLAG_JEOS                   ADC_ISR_JEOS       /*!< ADC flag ADC group injected end 
 595:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_FLAG_JQOVF                  ADC_ISR_JQOVF      /*!< ADC flag ADC group injected cont
 596:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_FLAG_AWD1                   ADC_ISR_AWD1       /*!< ADC flag ADC analog watchdog 1 *
 597:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_FLAG_AWD2                   ADC_ISR_AWD2       /*!< ADC flag ADC analog watchdog 2 *
 598:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_FLAG_AWD3                   ADC_ISR_AWD3       /*!< ADC flag ADC analog watchdog 3 *
 599:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #if defined(ADC_MULTIMODE_SUPPORT)
 600:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_FLAG_ADRDY_MST              ADC_CSR_ADRDY_MST  /*!< ADC flag ADC multimode master in
 601:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_FLAG_ADRDY_SLV              ADC_CSR_ADRDY_SLV  /*!< ADC flag ADC multimode slave ins
 602:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_FLAG_EOC_MST                ADC_CSR_EOC_MST    /*!< ADC flag ADC multimode master gr
 603:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_FLAG_EOC_SLV                ADC_CSR_EOC_SLV    /*!< ADC flag ADC multimode slave gro
 604:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_FLAG_EOS_MST                ADC_CSR_EOS_MST    /*!< ADC flag ADC multimode master gr
 605:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_FLAG_EOS_SLV                ADC_CSR_EOS_SLV    /*!< ADC flag ADC multimode slave gro
 606:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_FLAG_OVR_MST                ADC_CSR_OVR_MST    /*!< ADC flag ADC multimode master gr
 607:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_FLAG_OVR_SLV                ADC_CSR_OVR_SLV    /*!< ADC flag ADC multimode slave gro
 608:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_FLAG_EOSMP_MST              ADC_CSR_EOSMP_MST  /*!< ADC flag ADC multimode master gr
 609:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_FLAG_EOSMP_SLV              ADC_CSR_EOSMP_SLV  /*!< ADC flag ADC multimode slave gro
 610:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_FLAG_JEOC_MST               ADC_CSR_JEOC_MST   /*!< ADC flag ADC multimode master gr
 611:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_FLAG_JEOC_SLV               ADC_CSR_JEOC_SLV   /*!< ADC flag ADC multimode slave gro
 612:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_FLAG_JEOS_MST               ADC_CSR_JEOS_MST   /*!< ADC flag ADC multimode master gr
 613:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_FLAG_JEOS_SLV               ADC_CSR_JEOS_SLV   /*!< ADC flag ADC multimode slave gro
 614:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_FLAG_JQOVF_MST              ADC_CSR_JQOVF_MST  /*!< ADC flag ADC multimode master gr
 615:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_FLAG_JQOVF_SLV              ADC_CSR_JQOVF_SLV  /*!< ADC flag ADC multimode slave gro
 616:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_FLAG_AWD1_MST               ADC_CSR_AWD1_MST   /*!< ADC flag ADC multimode master an
 617:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_FLAG_AWD1_SLV               ADC_CSR_AWD1_SLV   /*!< ADC flag ADC multimode slave ana
 618:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_FLAG_AWD2_MST               ADC_CSR_AWD2_MST   /*!< ADC flag ADC multimode master an
 619:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_FLAG_AWD2_SLV               ADC_CSR_AWD2_SLV   /*!< ADC flag ADC multimode slave ana
 620:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_FLAG_AWD3_MST               ADC_CSR_AWD3_MST   /*!< ADC flag ADC multimode master an
 621:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_FLAG_AWD3_SLV               ADC_CSR_AWD3_SLV   /*!< ADC flag ADC multimode slave ana
 622:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #endif /* ADC_MULTIMODE_SUPPORT */
 623:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
 624:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
 625:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 626:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 627:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_IT ADC interruptions for configuration (interruption enable or disable)
 628:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief    IT defines which can be used with LL_ADC_ReadReg and  LL_ADC_WriteReg functions
 629:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
 630:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 631:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_IT_ADRDY                    ADC_IER_ADRDYIE    /*!< ADC interruption ADC instance re
 632:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_IT_EOC                      ADC_IER_EOCIE      /*!< ADC interruption ADC group regul
 633:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_IT_EOS                      ADC_IER_EOSIE      /*!< ADC interruption ADC group regul
 634:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_IT_OVR                      ADC_IER_OVRIE      /*!< ADC interruption ADC group regul
 635:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_IT_EOSMP                    ADC_IER_EOSMPIE    /*!< ADC interruption ADC group regul
 636:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_IT_JEOC                     ADC_IER_JEOCIE     /*!< ADC interruption ADC group injec
 637:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_IT_JEOS                     ADC_IER_JEOSIE     /*!< ADC interruption ADC group injec
 638:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_IT_JQOVF                    ADC_IER_JQOVFIE    /*!< ADC interruption ADC group injec
 639:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_IT_AWD1                     ADC_IER_AWD1IE     /*!< ADC interruption ADC analog watc
ARM GAS  /tmp/ccEuGJBQ.s 			page 31


 640:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_IT_AWD2                     ADC_IER_AWD2IE     /*!< ADC interruption ADC analog watc
 641:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_IT_AWD3                     ADC_IER_AWD3IE     /*!< ADC interruption ADC analog watc
 642:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
 643:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
 644:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 645:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 646:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REGISTERS  ADC registers compliant with specific purpose
 647:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
 648:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 649:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* List of ADC registers intended to be used (most commonly) with             */
 650:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* DMA transfer.                                                              */
 651:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Refer to function @ref LL_ADC_DMA_GetRegAddr().                            */
 652:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_DMA_REG_REGULAR_DATA          (0x00000000UL) /* ADC group regular conversion data re
 653:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #if defined(ADC_MULTIMODE_SUPPORT)
 654:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_DMA_REG_REGULAR_DATA_MULTI    (0x00000001UL) /* ADC group regular conversion data re
 655:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #endif /* ADC_MULTIMODE_SUPPORT */
 656:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
 657:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
 658:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 659:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 660:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_COMMON_CLOCK_SOURCE  ADC common - Clock source
 661:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
 662:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 663:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CLOCK_SYNC_PCLK_DIV1        (ADC_CCR_CKMODE_0)                                    /*
 664:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CLOCK_SYNC_PCLK_DIV2        (ADC_CCR_CKMODE_1                   )                 /*
 665:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CLOCK_SYNC_PCLK_DIV4        (ADC_CCR_CKMODE_1 | ADC_CCR_CKMODE_0)                 /*
 666:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV1            (0x00000000UL)                                        /*
 667:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV2            (ADC_CCR_PRESC_0)                                     /*
 668:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV4            (ADC_CCR_PRESC_1                  )                   /*
 669:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV6            (ADC_CCR_PRESC_1 | ADC_CCR_PRESC_0)                   /*
 670:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV8            (ADC_CCR_PRESC_2                                    ) /*
 671:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV10           (ADC_CCR_PRESC_2                   | ADC_CCR_PRESC_0) /*
 672:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV12           (ADC_CCR_PRESC_2 | ADC_CCR_PRESC_1                  ) /*
 673:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV16           (ADC_CCR_PRESC_2 | ADC_CCR_PRESC_1 | ADC_CCR_PRESC_0) /*
 674:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV32           (ADC_CCR_PRESC_3)                                     /*
 675:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV64           (ADC_CCR_PRESC_3 | ADC_CCR_PRESC_0)                   /*
 676:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV128          (ADC_CCR_PRESC_3 | ADC_CCR_PRESC_1)                   /*
 677:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV256          (ADC_CCR_PRESC_3 | ADC_CCR_PRESC_1 | ADC_CCR_PRESC_0) /*
 678:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
 679:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
 680:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 681:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 682:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_COMMON_PATH_INTERNAL  ADC common - Measurement path to internal channels
 683:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
 684:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 685:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Note: Other measurement paths to internal channels may be available        */
 686:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /*       (connections to other peripherals).                                  */
 687:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /*       If they are not listed below, they do not require any specific       */
 688:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /*       path enable. In this case, Access to measurement path is done        */
 689:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /*       only by selecting the corresponding ADC internal channel.            */
 690:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_PATH_INTERNAL_NONE          (0x00000000UL)         /*!< ADC measurement paths all di
 691:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_PATH_INTERNAL_VREFINT       (ADC_CCR_VREFEN)       /*!< ADC measurement path to inte
 692:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_PATH_INTERNAL_TEMPSENSOR    (ADC_CCR_VSENSESEL)    /*!< ADC measurement path to inte
 693:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_PATH_INTERNAL_VBAT          (ADC_CCR_VBATSEL)      /*!< ADC measurement path to inte
 694:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
 695:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
 696:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
ARM GAS  /tmp/ccEuGJBQ.s 			page 32


 697:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 698:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_RESOLUTION  ADC instance - Resolution
 699:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
 700:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 701:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_RESOLUTION_12B              (0x00000000UL)                      /*!< ADC resolution 
 702:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_RESOLUTION_10B              (                 ADC_CFGR_RES_0)   /*!< ADC resolution 
 703:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_RESOLUTION_8B               (ADC_CFGR_RES_1                 )   /*!< ADC resolution 
 704:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_RESOLUTION_6B               (ADC_CFGR_RES_1 | ADC_CFGR_RES_0)   /*!< ADC resolution 
 705:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
 706:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
 707:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 708:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 709:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_DATA_ALIGN  ADC instance - Data alignment
 710:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
 711:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 712:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_DATA_ALIGN_RIGHT            (0x00000000UL)         /*!< ADC conversion data alignmen
 713:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_DATA_ALIGN_LEFT             (ADC_CFGR_ALIGN)       /*!< ADC conversion data alignmen
 714:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
 715:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
 716:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 717:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 718:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_LP_MODE  ADC instance - Low power mode
 719:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
 720:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 721:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_LP_MODE_NONE                (0x00000000UL)                      /*!< No ADC low powe
 722:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_LP_AUTOWAIT                 (ADC_CFGR_AUTDLY)                   /*!< ADC low power m
 723:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
 724:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
 725:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 726:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 727:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_OFFSET_NB  ADC instance - Offset number
 728:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
 729:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 730:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_OFFSET_1                    ADC_OFR1_REGOFFSET /*!< ADC offset number 1: ADC channel
 731:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_OFFSET_2                    ADC_OFR2_REGOFFSET /*!< ADC offset number 2: ADC channel
 732:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_OFFSET_3                    ADC_OFR3_REGOFFSET /*!< ADC offset number 3: ADC channel
 733:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_OFFSET_4                    ADC_OFR4_REGOFFSET /*!< ADC offset number 4: ADC channel
 734:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
 735:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
 736:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 737:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 738:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_OFFSET_STATE ADC instance - Offset state
 739:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
 740:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 741:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_OFFSET_DISABLE              (0x00000000UL)         /*!< ADC offset disabled (among A
 742:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_OFFSET_ENABLE               (ADC_OFR1_OFFSET1_EN)  /*!< ADC offset enabled (among AD
 743:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
 744:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
 745:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 746:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 747:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_OFFSET_SIGN ADC instance - Offset sign
 748:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
 749:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 750:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_OFFSET_SIGN_NEGATIVE        (0x00000000UL)       /*!< ADC offset is negative (among 
 751:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_OFFSET_SIGN_POSITIVE        (ADC_OFR1_OFFSETPOS) /*!< ADC offset is positive (among 
 752:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
 753:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
ARM GAS  /tmp/ccEuGJBQ.s 			page 33


 754:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 755:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 756:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_OFFSET_SATURATION ADC instance - Offset saturation mode
 757:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
 758:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 759:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_OFFSET_SATURATION_DISABLE   (0x00000000UL)          /*!< ADC offset saturation is di
 760:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_OFFSET_SATURATION_ENABLE    (ADC_OFR1_SATEN)        /*!< ADC offset saturation is en
 761:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
 762:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
 763:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 764:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_GROUPS  ADC instance - Groups
 765:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
 766:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 767:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_GROUP_REGULAR               (0x00000001UL) /*!< ADC group regular (available on all 
 768:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_GROUP_INJECTED              (0x00000002UL) /*!< ADC group injected (not available on
 769:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_GROUP_REGULAR_INJECTED      (0x00000003UL) /*!< ADC both groups regular and injected
 770:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
 771:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
 772:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 773:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 774:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_CHANNEL  ADC instance - Channel number
 775:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
 776:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 777:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CHANNEL_0                   (ADC_CHANNEL_0_NUMBER  | ADC_CHANNEL_0_SMP  | ADC_CHANNE
 778:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CHANNEL_1                   (ADC_CHANNEL_1_NUMBER  | ADC_CHANNEL_1_SMP  | ADC_CHANNE
 779:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CHANNEL_2                   (ADC_CHANNEL_2_NUMBER  | ADC_CHANNEL_2_SMP  | ADC_CHANNE
 780:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CHANNEL_3                   (ADC_CHANNEL_3_NUMBER  | ADC_CHANNEL_3_SMP  | ADC_CHANNE
 781:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CHANNEL_4                   (ADC_CHANNEL_4_NUMBER  | ADC_CHANNEL_4_SMP  | ADC_CHANNE
 782:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CHANNEL_5                   (ADC_CHANNEL_5_NUMBER  | ADC_CHANNEL_5_SMP  | ADC_CHANNE
 783:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CHANNEL_6                   (ADC_CHANNEL_6_NUMBER  | ADC_CHANNEL_6_SMP  | ADC_CHANNE
 784:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CHANNEL_7                   (ADC_CHANNEL_7_NUMBER  | ADC_CHANNEL_7_SMP  | ADC_CHANNE
 785:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CHANNEL_8                   (ADC_CHANNEL_8_NUMBER  | ADC_CHANNEL_8_SMP  | ADC_CHANNE
 786:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CHANNEL_9                   (ADC_CHANNEL_9_NUMBER  | ADC_CHANNEL_9_SMP  | ADC_CHANNE
 787:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CHANNEL_10                  (ADC_CHANNEL_10_NUMBER | ADC_CHANNEL_10_SMP | ADC_CHANNE
 788:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CHANNEL_11                  (ADC_CHANNEL_11_NUMBER | ADC_CHANNEL_11_SMP | ADC_CHANNE
 789:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CHANNEL_12                  (ADC_CHANNEL_12_NUMBER | ADC_CHANNEL_12_SMP | ADC_CHANNE
 790:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CHANNEL_13                  (ADC_CHANNEL_13_NUMBER | ADC_CHANNEL_13_SMP | ADC_CHANNE
 791:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CHANNEL_14                  (ADC_CHANNEL_14_NUMBER | ADC_CHANNEL_14_SMP | ADC_CHANNE
 792:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CHANNEL_15                  (ADC_CHANNEL_15_NUMBER | ADC_CHANNEL_15_SMP | ADC_CHANNE
 793:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CHANNEL_16                  (ADC_CHANNEL_16_NUMBER | ADC_CHANNEL_16_SMP | ADC_CHANNE
 794:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CHANNEL_17                  (ADC_CHANNEL_17_NUMBER | ADC_CHANNEL_17_SMP | ADC_CHANNE
 795:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CHANNEL_18                  (ADC_CHANNEL_18_NUMBER | ADC_CHANNEL_18_SMP | ADC_CHANNE
 796:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CHANNEL_VREFINT             (LL_ADC_CHANNEL_18 | ADC_CHANNEL_ID_INTERNAL_CH) /*!< AD
 797:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CHANNEL_TEMPSENSOR_ADC1     (LL_ADC_CHANNEL_16 | ADC_CHANNEL_ID_INTERNAL_CH) /*!< AD
 798:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CHANNEL_TEMPSENSOR_ADC5     (LL_ADC_CHANNEL_4  | ADC_CHANNEL_ID_INTERNAL_CH) /*!< AD
 799:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CHANNEL_VBAT                (LL_ADC_CHANNEL_17 | ADC_CHANNEL_ID_INTERNAL_CH) /*!< AD
 800:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CHANNEL_VOPAMP1             (LL_ADC_CHANNEL_13 | ADC_CHANNEL_ID_INTERNAL_CH) /*!< AD
 801:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CHANNEL_VOPAMP2             (LL_ADC_CHANNEL_16 | ADC_CHANNEL_ID_INTERNAL_CH | ADC_CH
 802:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CHANNEL_VOPAMP3_ADC2        (LL_ADC_CHANNEL_18 | ADC_CHANNEL_ID_INTERNAL_CH | ADC_CH
 803:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CHANNEL_VOPAMP3_ADC3        (LL_ADC_CHANNEL_13 | ADC_CHANNEL_ID_INTERNAL_CH | ADC_CH
 804:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CHANNEL_VOPAMP4             (LL_ADC_CHANNEL_5  | ADC_CHANNEL_ID_INTERNAL_CH) /*!< AD
 805:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CHANNEL_VOPAMP5             (LL_ADC_CHANNEL_3  | ADC_CHANNEL_ID_INTERNAL_CH) /*!< AD
 806:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CHANNEL_VOPAMP6             (LL_ADC_CHANNEL_17 | ADC_CHANNEL_ID_INTERNAL_CH | ADC_CH
 807:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
 808:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
 809:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 810:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
ARM GAS  /tmp/ccEuGJBQ.s 			page 34


 811:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_TRIGGER_SOURCE  ADC group regular - Trigger source
 812:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
 813:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 814:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_SOFTWARE           (0x00000000UL)                                          
 815:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group regular conversion trigger internal: SW start.
 816:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM1_TRGO      (ADC_CFGR_EXTSEL_3 | ADC_CFGR_EXTSEL_0 | ADC_REG_TRIG_EX
 817:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group regular conversion trigger from external perip
 818:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM1_TRGO2     (ADC_CFGR_EXTSEL_3 | ADC_CFGR_EXTSEL_1 | ADC_REG_TRIG_EX
 819:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group regular conversion trigger from external perip
 820:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM1_CH1       (ADC_REG_TRIG_EXT_EDGE_DEFAULT)                         
 821:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group regular conversion trigger from external perip
 822:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 series, this trigger is available on
 823:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM1_CH2       (ADC_CFGR_EXTSEL_0 | ADC_REG_TRIG_EXT_EDGE_DEFAULT)     
 824:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group regular conversion trigger from external perip
 825:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 series, this trigger is available on
 826:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM1_CH3       (ADC_CFGR_EXTSEL_1 | ADC_REG_TRIG_EXT_EDGE_DEFAULT)     
 827:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group regular conversion trigger from external perip
 828:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM2_TRGO      (ADC_CFGR_EXTSEL_3 | ADC_CFGR_EXTSEL_1 | ADC_CFGR_EXTSEL
 829:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group regular conversion trigger from external perip
 830:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM2_CH1       (ADC_CFGR_EXTSEL_3 | ADC_CFGR_EXTSEL_2 | ADC_CFGR_EXTSEL
 831:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group regular conversion trigger from external perip
 832:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 series, this trigger is available on
 833:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM2_CH2       (ADC_CFGR_EXTSEL_1 | ADC_CFGR_EXTSEL_0 | ADC_REG_TRIG_EX
 834:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group regular conversion trigger from external perip
 835:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 series, this trigger is available on
 836:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM2_CH3       (ADC_CFGR_EXTSEL_0 | ADC_REG_TRIG_EXT_EDGE_DEFAULT)     
 837:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group regular conversion trigger from external perip
 838:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 series, this trigger is available on
 839:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM3_TRGO      (ADC_CFGR_EXTSEL_2 | ADC_REG_TRIG_EXT_EDGE_DEFAULT)     
 840:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group regular conversion trigger from external perip
 841:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM3_CH1       (ADC_REG_TRIG_EXT_EDGE_DEFAULT)                         
 842:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group regular conversion trigger from external perip
 843:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 series, this trigger is available on
 844:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM3_CH4       (ADC_CFGR_EXTSEL_3 | ADC_CFGR_EXTSEL_2 | ADC_CFGR_EXTSEL
 845:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group regular conversion trigger from external perip
 846:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 series, this trigger is available on
 847:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM4_TRGO      (ADC_CFGR_EXTSEL_3 | ADC_CFGR_EXTSEL_2 | ADC_REG_TRIG_EX
 848:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group regular conversion trigger from external perip
 849:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM4_CH1       (ADC_CFGR_EXTSEL_2 | ADC_CFGR_EXTSEL_1 | ADC_REG_TRIG_EX
 850:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group regular conversion trigger from external perip
 851:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 series, this trigger is available on
 852:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM4_CH4       (ADC_CFGR_EXTSEL_2 | ADC_CFGR_EXTSEL_0 | ADC_REG_TRIG_EX
 853:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group regular conversion trigger from external perip
 854:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 series, this trigger is available on
 855:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM6_TRGO      (ADC_CFGR_EXTSEL_3 | ADC_CFGR_EXTSEL_2 | ADC_CFGR_EXTSEL
 856:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group regular conversion trigger from external perip
 857:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM7_TRGO      (ADC_CFGR_EXTSEL_4 | ADC_CFGR_EXTSEL_3 | ADC_CFGR_EXTSEL
 858:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group regular conversion trigger from external perip
 859:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM8_TRGO      (ADC_CFGR_EXTSEL_2 | ADC_CFGR_EXTSEL_1 | ADC_CFGR_EXTSEL
 860:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group regular conversion trigger from external perip
 861:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM8_TRGO2     (ADC_CFGR_EXTSEL_3 | ADC_REG_TRIG_EXT_EDGE_DEFAULT)     
 862:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group regular conversion trigger from external perip
 863:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM8_CH1       (ADC_CFGR_EXTSEL_1 | ADC_CFGR_EXTSEL_0 | ADC_REG_TRIG_EX
 864:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group regular conversion trigger from external perip
 865:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 series, this trigger is available on
 866:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM15_TRGO     (ADC_CFGR_EXTSEL_3 | ADC_CFGR_EXTSEL_2 | ADC_CFGR_EXTSEL
 867:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group regular conversion trigger from external perip
ARM GAS  /tmp/ccEuGJBQ.s 			page 35


 868:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM20_TRGO     (ADC_CFGR_EXTSEL_4 | ADC_REG_TRIG_EXT_EDGE_DEFAULT)     
 869:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group regular conversion trigger from external perip
 870:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 series, TIM20 is not available on al
 871:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM20_TRGO2    (ADC_CFGR_EXTSEL_4 | ADC_CFGR_EXTSEL_0 | ADC_REG_TRIG_EX
 872:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group regular conversion trigger from external perip
 873:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 series, TIM20 is not available on al
 874:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM20_CH1      (ADC_CFGR_EXTSEL_4 | ADC_CFGR_EXTSEL_1 | ADC_REG_TRIG_EX
 875:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group regular conversion trigger from external perip
 876:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 series, TIM20 is not available on al
 877:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM20_CH2      (ADC_CFGR_EXTSEL_4 | ADC_CFGR_EXTSEL_1 | ADC_CFGR_EXTSEL
 878:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group regular conversion trigger from external perip
 879:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 series, this trigger is available on
 880:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM20_CH3      (ADC_CFGR_EXTSEL_4 | ADC_CFGR_EXTSEL_2 | ADC_REG_TRIG_EX
 881:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group regular conversion trigger from external perip
 882:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 series, this trigger is available on
 883:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_HRTIM_TRG1     (ADC_CFGR_EXTSEL_4 | ADC_CFGR_EXTSEL_2 | ADC_CFGR_EXTSEL
 884:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group regular conversion trigger from external perip
 885:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 series, HRTIM is not available on al
 886:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_HRTIM_TRG2     (ADC_CFGR_EXTSEL_4 | ADC_CFGR_EXTSEL_1 | ADC_CFGR_EXTSEL
 887:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group regular conversion trigger from external perip
 888:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 series, this trigger is available on
 889:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_HRTIM_TRG3     (ADC_CFGR_EXTSEL_4 | ADC_CFGR_EXTSEL_2 | ADC_CFGR_EXTSEL
 890:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group regular conversion trigger from external perip
 891:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 series, HRTIM is not available on al
 892:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_HRTIM_TRG4     (ADC_CFGR_EXTSEL_4 | ADC_CFGR_EXTSEL_2 | ADC_REG_TRIG_EX
 893:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group regular conversion trigger from external perip
 894:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 series, this trigger is available on
 895:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_HRTIM_TRG5     (ADC_CFGR_EXTSEL_4 | ADC_CFGR_EXTSEL_2 | ADC_CFGR_EXTSEL
 896:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group regular conversion trigger from external perip
 897:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 series, HRTIM is not available on al
 898:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_HRTIM_TRG6     (ADC_CFGR_EXTSEL_4 | ADC_CFGR_EXTSEL_3 | ADC_REG_TRIG_EX
 899:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group regular conversion trigger from external perip
 900:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 series, HRTIM is not available on al
 901:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_HRTIM_TRG7     (ADC_CFGR_EXTSEL_4 | ADC_CFGR_EXTSEL_3 | ADC_CFGR_EXTSEL
 902:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group regular conversion trigger from external perip
 903:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 series, HRTIM is not available on al
 904:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_HRTIM_TRG8     (ADC_CFGR_EXTSEL_4 | ADC_CFGR_EXTSEL_3 | ADC_CFGR_EXTSEL
 905:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group regular conversion trigger from external perip
 906:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 series, HRTIM is not available on al
 907:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_HRTIM_TRG9     (ADC_CFGR_EXTSEL_4 | ADC_CFGR_EXTSEL_3 | ADC_CFGR_EXTSEL
 908:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group regular conversion trigger from external perip
 909:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 series, HRTIM is not available on al
 910:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_HRTIM_TRG10    (ADC_CFGR_EXTSEL_4 | ADC_CFGR_EXTSEL_3 | ADC_CFGR_EXTSEL
 911:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group regular conversion trigger from external perip
 912:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 series, HRTIM is not available on al
 913:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_EXTI_LINE11    (ADC_CFGR_EXTSEL_2 | ADC_CFGR_EXTSEL_1 | ADC_REG_TRIG_EX
 914:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group regular conversion trigger from external perip
 915:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 series, this trigger is available on
 916:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_EXTI_LINE2     (ADC_CFGR_EXTSEL_2 | ADC_CFGR_EXTSEL_0 | ADC_REG_TRIG_EX
 917:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group regular conversion trigger from external perip
 918:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 series, this trigger is available on
 919:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_LPTIM_OUT      (ADC_CFGR_EXTSEL_4 | ADC_CFGR_EXTSEL_3 | ADC_CFGR_EXTSEL
 920:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group regular conversion trigger from external perip
 921:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
 922:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
 923:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 924:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
ARM GAS  /tmp/ccEuGJBQ.s 			page 36


 925:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_TRIGGER_EDGE  ADC group regular - Trigger edge
 926:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
 927:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 928:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_RISING         (                   ADC_CFGR_EXTEN_0)   /*!< ADC group r
 929:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_FALLING        (ADC_CFGR_EXTEN_1                   )   /*!< ADC group r
 930:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_RISINGFALLING  (ADC_CFGR_EXTEN_1 | ADC_CFGR_EXTEN_0)   /*!< ADC group r
 931:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
 932:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
 933:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 934:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 935:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_SAMPLING_MODE  ADC group regular - Sampling mode
 936:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
 937:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 938:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_SAMPLING_MODE_NORMAL               (0x00000000UL)       /*!< ADC conversions sam
 939:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_SAMPLING_MODE_BULB                 (ADC_CFGR2_BULB)     /*!< ADC conversions sam
 940:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                                                                 Note: First convers
 941:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_SAMPLING_MODE_TRIGGER_CONTROLED    (ADC_CFGR2_SMPTRIG)  /*!< ADC conversions sam
 942:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                                                                  Trigger rising edg
 943:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                                                                  Trigger falling ed
 944:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
 945:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
 946:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 947:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 948:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_CONTINUOUS_MODE  ADC group regular - Continuous mode
 949:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
 950:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 951:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_CONV_SINGLE             (0x00000000UL)          /*!< ADC conversions are perform
 952:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_CONV_CONTINUOUS         (ADC_CFGR_CONT)         /*!< ADC conversions are perform
 953:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
 954:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
 955:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 956:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 957:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_DMA_TRANSFER  ADC group regular - DMA transfer of ADC conversion data
 958:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
 959:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 960:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_DMA_TRANSFER_NONE       (0x00000000UL)                        /*!< ADC conversio
 961:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_DMA_TRANSFER_LIMITED    (                  ADC_CFGR_DMAEN)    /*!< ADC conversio
 962:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_DMA_TRANSFER_UNLIMITED  (ADC_CFGR_DMACFG | ADC_CFGR_DMAEN)    /*!< ADC conversio
 963:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
 964:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
 965:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 966:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 967:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #if defined(ADC_SMPR1_SMPPLUS)
 968:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_SAMPLINGTIME_COMMON_CONFIG ADC instance - ADC sampling time common configur
 969:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
 970:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 971:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_COMMON_DEFAULT      (0x00000000UL)      /*!< ADC sampling time let to d
 972:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_COMMON_3C5_REPL_2C5 (ADC_SMPR1_SMPPLUS) /*!< ADC additional sampling ti
 973:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
 974:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
 975:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 976:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #endif
 977:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 978:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_OVR_DATA_BEHAVIOR  ADC group regular - Overrun behavior on conversion d
 979:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
 980:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 981:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_OVR_DATA_PRESERVED      (0x00000000UL)         /*!< ADC group regular behavior i
ARM GAS  /tmp/ccEuGJBQ.s 			page 37


 982:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_OVR_DATA_OVERWRITTEN    (ADC_CFGR_OVRMOD)      /*!< ADC group regular behavior i
 983:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
 984:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
 985:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 986:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 987:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_SEQ_SCAN_LENGTH  ADC group regular - Sequencer scan length
 988:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
 989:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 990:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_DISABLE        (0x00000000UL)                                          
 991:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_2RANKS  (                                             ADC_SQR1_L
 992:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_3RANKS  (                              ADC_SQR1_L_1             
 993:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_4RANKS  (                              ADC_SQR1_L_1 | ADC_SQR1_L
 994:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_5RANKS  (               ADC_SQR1_L_2                            
 995:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_6RANKS  (               ADC_SQR1_L_2                | ADC_SQR1_L
 996:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_7RANKS  (               ADC_SQR1_L_2 | ADC_SQR1_L_1             
 997:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_8RANKS  (               ADC_SQR1_L_2 | ADC_SQR1_L_1 | ADC_SQR1_L
 998:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_9RANKS  (ADC_SQR1_L_3                                           
 999:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_10RANKS (ADC_SQR1_L_3                               | ADC_SQR1_L
1000:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_11RANKS (ADC_SQR1_L_3                | ADC_SQR1_L_1             
1001:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_12RANKS (ADC_SQR1_L_3                | ADC_SQR1_L_1 | ADC_SQR1_L
1002:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_13RANKS (ADC_SQR1_L_3 | ADC_SQR1_L_2                            
1003:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_14RANKS (ADC_SQR1_L_3 | ADC_SQR1_L_2                | ADC_SQR1_L
1004:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_15RANKS (ADC_SQR1_L_3 | ADC_SQR1_L_2 | ADC_SQR1_L_1             
1005:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_16RANKS (ADC_SQR1_L_3 | ADC_SQR1_L_2 | ADC_SQR1_L_1 | ADC_SQR1_L
1006:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
1007:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
1008:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1009:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
1010:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_SEQ_DISCONT_MODE  ADC group regular - Sequencer discontinuous mode
1011:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
1012:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1013:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_DISABLE     (0x00000000UL)                                          
1014:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_1RANK       (                                                       
1015:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_2RANKS      (                                          ADC_CFGR_DISC
1016:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_3RANKS      (                     ADC_CFGR_DISCNUM_1                
1017:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_4RANKS      (                     ADC_CFGR_DISCNUM_1 | ADC_CFGR_DISC
1018:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_5RANKS      (ADC_CFGR_DISCNUM_2                                     
1019:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_6RANKS      (ADC_CFGR_DISCNUM_2                      | ADC_CFGR_DISC
1020:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_7RANKS      (ADC_CFGR_DISCNUM_2 | ADC_CFGR_DISCNUM_1                
1021:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_8RANKS      (ADC_CFGR_DISCNUM_2 | ADC_CFGR_DISCNUM_1 | ADC_CFGR_DISC
1022:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
1023:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
1024:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1025:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
1026:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_SEQ_RANKS  ADC group regular - Sequencer ranks
1027:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
1028:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1029:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_RANK_1                  (ADC_SQR1_REGOFFSET | ADC_REG_RANK_1_SQRX_BITOFFSET_POS)
1030:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_RANK_2                  (ADC_SQR1_REGOFFSET | ADC_REG_RANK_2_SQRX_BITOFFSET_POS)
1031:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_RANK_3                  (ADC_SQR1_REGOFFSET | ADC_REG_RANK_3_SQRX_BITOFFSET_POS)
1032:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_RANK_4                  (ADC_SQR1_REGOFFSET | ADC_REG_RANK_4_SQRX_BITOFFSET_POS)
1033:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_RANK_5                  (ADC_SQR2_REGOFFSET | ADC_REG_RANK_5_SQRX_BITOFFSET_POS)
1034:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_RANK_6                  (ADC_SQR2_REGOFFSET | ADC_REG_RANK_6_SQRX_BITOFFSET_POS)
1035:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_RANK_7                  (ADC_SQR2_REGOFFSET | ADC_REG_RANK_7_SQRX_BITOFFSET_POS)
1036:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_RANK_8                  (ADC_SQR2_REGOFFSET | ADC_REG_RANK_8_SQRX_BITOFFSET_POS)
1037:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_RANK_9                  (ADC_SQR2_REGOFFSET | ADC_REG_RANK_9_SQRX_BITOFFSET_POS)
1038:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_RANK_10                 (ADC_SQR3_REGOFFSET | ADC_REG_RANK_10_SQRX_BITOFFSET_POS
ARM GAS  /tmp/ccEuGJBQ.s 			page 38


1039:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_RANK_11                 (ADC_SQR3_REGOFFSET | ADC_REG_RANK_11_SQRX_BITOFFSET_POS
1040:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_RANK_12                 (ADC_SQR3_REGOFFSET | ADC_REG_RANK_12_SQRX_BITOFFSET_POS
1041:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_RANK_13                 (ADC_SQR3_REGOFFSET | ADC_REG_RANK_13_SQRX_BITOFFSET_POS
1042:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_RANK_14                 (ADC_SQR3_REGOFFSET | ADC_REG_RANK_14_SQRX_BITOFFSET_POS
1043:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_RANK_15                 (ADC_SQR4_REGOFFSET | ADC_REG_RANK_15_SQRX_BITOFFSET_POS
1044:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_RANK_16                 (ADC_SQR4_REGOFFSET | ADC_REG_RANK_16_SQRX_BITOFFSET_POS
1045:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
1046:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
1047:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1048:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
1049:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_INJ_TRIGGER_SOURCE  ADC group injected - Trigger source
1050:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
1051:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1052:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_SOFTWARE           (0x00000000UL)                                          
1053:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group injected conversion trigger internal: SW start
1054:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM1_TRGO      (ADC_INJ_TRIG_EXT_EDGE_DEFAULT)                         
1055:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group injected conversion trigger from external peri
1056:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM1_TRGO2     (ADC_JSQR_JEXTSEL_3 | ADC_INJ_TRIG_EXT_EDGE_DEFAULT)    
1057:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group injected conversion trigger from external peri
1058:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM1_CH3       (ADC_JSQR_JEXTSEL_3 | ADC_JSQR_JEXTSEL_1 | ADC_JSQR_JEXT
1059:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group injected conversion trigger from external peri
1060:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 series, this trigger is available on
1061:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM1_CH4       (ADC_JSQR_JEXTSEL_0 | ADC_INJ_TRIG_EXT_EDGE_DEFAULT)    
1062:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group injected conversion trigger from external peri
1063:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM2_TRGO      (ADC_JSQR_JEXTSEL_1 | ADC_INJ_TRIG_EXT_EDGE_DEFAULT)    
1064:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group injected conversion trigger from external peri
1065:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM2_CH1       (ADC_JSQR_JEXTSEL_1 | ADC_JSQR_JEXTSEL_0 | ADC_INJ_TRIG_
1066:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group injected conversion trigger from external peri
1067:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 series, this trigger is available on
1068:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM3_TRGO      (ADC_JSQR_JEXTSEL_3 | ADC_JSQR_JEXTSEL_2 | ADC_INJ_TRIG_
1069:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group injected conversion trigger from external peri
1070:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM3_CH1       (ADC_JSQR_JEXTSEL_3 | ADC_JSQR_JEXTSEL_2 | ADC_JSQR_JEXT
1071:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group injected conversion trigger from external peri
1072:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 series, this trigger is available on
1073:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM3_CH3       (ADC_JSQR_JEXTSEL_3 | ADC_JSQR_JEXTSEL_1 | ADC_JSQR_JEXT
1074:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group injected conversion trigger from external peri
1075:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 series, this trigger is available on
1076:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM3_CH4       (ADC_JSQR_JEXTSEL_2 | ADC_INJ_TRIG_EXT_EDGE_DEFAULT)    
1077:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group injected conversion trigger from external peri
1078:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 series, this trigger is available on
1079:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM4_TRGO      (ADC_JSQR_JEXTSEL_2 | ADC_JSQR_JEXTSEL_0 | ADC_INJ_TRIG_
1080:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group injected conversion trigger from external peri
1081:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM4_CH3       (ADC_JSQR_JEXTSEL_2 | ADC_INJ_TRIG_EXT_EDGE_DEFAULT)    
1082:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group injected conversion trigger from external peri
1083:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 series, this trigger is available on
1084:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM4_CH4       (ADC_JSQR_JEXTSEL_2 | ADC_JSQR_JEXTSEL_1 | ADC_INJ_TRIG_
1085:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group injected conversion trigger from external peri
1086:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 series, this trigger is available on
1087:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM6_TRGO      (ADC_JSQR_JEXTSEL_3 | ADC_JSQR_JEXTSEL_2 | ADC_JSQR_JEXT
1088:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group injected conversion trigger from external peri
1089:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM7_TRGO      (ADC_JSQR_JEXTSEL_4 | ADC_JSQR_JEXTSEL_3 | ADC_JSQR_JEXT
1090:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group injected conversion trigger from external peri
1091:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM8_TRGO      (ADC_JSQR_JEXTSEL_3 | ADC_JSQR_JEXTSEL_0 | ADC_INJ_TRIG_
1092:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group injected conversion trigger from external peri
1093:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM8_TRGO2     (ADC_JSQR_JEXTSEL_3 | ADC_JSQR_JEXTSEL_1 | ADC_INJ_TRIG_
1094:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group injected conversion trigger from external peri
1095:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM8_CH2       (ADC_JSQR_JEXTSEL_1 | ADC_JSQR_JEXTSEL_0 | ADC_INJ_TRIG_
ARM GAS  /tmp/ccEuGJBQ.s 			page 39


1096:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group injected conversion trigger from external peri
1097:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 series, this trigger is available on
1098:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM8_CH4       (ADC_JSQR_JEXTSEL_2 | ADC_JSQR_JEXTSEL_1 | ADC_JSQR_JEXT
1099:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group injected conversion trigger from external peri
1100:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM15_TRGO     (ADC_JSQR_JEXTSEL_3 | ADC_JSQR_JEXTSEL_2 | ADC_JSQR_JEXT
1101:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group injected conversion trigger from external peri
1102:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM16_CH1      (ADC_JSQR_JEXTSEL_4 | ADC_JSQR_JEXTSEL_3 | ADC_JSQR_JEXT
1103:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group injected conversion trigger from external peri
1104:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 series, this trigger is available on
1105:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM20_TRGO     (ADC_JSQR_JEXTSEL_4 | ADC_INJ_TRIG_EXT_EDGE_DEFAULT)    
1106:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group injected conversion trigger from external peri
1107:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 series, TIM20 is not available on al
1108:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM20_TRGO2    (ADC_JSQR_JEXTSEL_4 | ADC_JSQR_JEXTSEL_0 | ADC_INJ_TRIG_
1109:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group injected conversion trigger from external peri
1110:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 series, TIM20 is not available on al
1111:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM20_CH2      (ADC_JSQR_JEXTSEL_4 | ADC_JSQR_JEXTSEL_1 | ADC_INJ_TRIG_
1112:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group injected conversion trigger from external peri
1113:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Trigger available only on ADC3/4/5 instances. On this ST
1114:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM20_CH4      (ADC_JSQR_JEXTSEL_4 | ADC_JSQR_JEXTSEL_1 | ADC_INJ_TRIG_
1115:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group injected conversion trigger from external peri
1116:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Trigger available only on ADC1/2 instances. On this STM3
1117:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_HRTIM_TRG1     (ADC_JSQR_JEXTSEL_4 | ADC_JSQR_JEXTSEL_3 | ADC_JSQR_JEXT
1118:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group injected conversion trigger from external peri
1119:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 series, this trigger is available on
1120:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_HRTIM_TRG2     (ADC_JSQR_JEXTSEL_4 | ADC_JSQR_JEXTSEL_1 | ADC_JSQR_JEXT
1121:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group injected conversion trigger from external peri
1122:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 series, HRTIM is not available on al
1123:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_HRTIM_TRG3     (ADC_JSQR_JEXTSEL_4 | ADC_JSQR_JEXTSEL_3 | ADC_JSQR_JEXT
1124:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group injected conversion trigger from external peri
1125:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 series, this trigger is available on
1126:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_HRTIM_TRG4     (ADC_JSQR_JEXTSEL_4 | ADC_JSQR_JEXTSEL_2 | ADC_INJ_TRIG_
1127:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group injected conversion trigger from external peri
1128:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 series, HRTIM is not available on al
1129:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_HRTIM_TRG5     (ADC_JSQR_JEXTSEL_4 | ADC_JSQR_JEXTSEL_2 | ADC_JSQR_JEXT
1130:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group injected conversion trigger from external peri
1131:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 series, HRTIM is not available on al
1132:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_HRTIM_TRG6     (ADC_JSQR_JEXTSEL_4 | ADC_JSQR_JEXTSEL_2 | ADC_JSQR_JEXT
1133:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group injected conversion trigger from external peri
1134:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 series, HRTIM is not available on al
1135:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_HRTIM_TRG7     (ADC_JSQR_JEXTSEL_4 | ADC_JSQR_JEXTSEL_2 | ADC_JSQR_JEXT
1136:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group injected conversion trigger from external peri
1137:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 series, HRTIM is not available on al
1138:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_HRTIM_TRG8     (ADC_JSQR_JEXTSEL_4 | ADC_JSQR_JEXTSEL_3 | ADC_INJ_TRIG_
1139:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group injected conversion trigger from external peri
1140:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 series, HRTIM is not available on al
1141:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_HRTIM_TRG9     (ADC_JSQR_JEXTSEL_4 | ADC_JSQR_JEXTSEL_3 | ADC_JSQR_JEXT
1142:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group injected conversion trigger from external peri
1143:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 series, HRTIM is not available on al
1144:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_HRTIM_TRG10    (ADC_JSQR_JEXTSEL_4 | ADC_JSQR_JEXTSEL_3 | ADC_JSQR_JEXT
1145:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group injected conversion trigger from external peri
1146:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 series, HRTIM is not available on al
1147:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_EXTI_LINE3     (ADC_JSQR_JEXTSEL_3 | ADC_JSQR_JEXTSEL_2 | ADC_JSQR_JEXT
1148:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group injected conversion trigger from external peri
1149:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 series, this trigger is available on
1150:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_EXTI_LINE15    (ADC_JSQR_JEXTSEL_2 | ADC_JSQR_JEXTSEL_1 | ADC_INJ_TRIG_
1151:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group injected conversion trigger from external peri
1152:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 series, this trigger is available on
ARM GAS  /tmp/ccEuGJBQ.s 			page 40


1153:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_LPTIM_OUT      (ADC_JSQR_JEXTSEL_4 | ADC_JSQR_JEXTSEL_3 | ADC_JSQR_JEXT
1154:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group injected conversion trigger from external peri
1155:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
1156:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
1157:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1158:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
1159:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_INJ_TRIGGER_EDGE  ADC group injected - Trigger edge
1160:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
1161:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1162:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_RISING         (                    ADC_JSQR_JEXTEN_0) /*!< ADC group i
1163:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_FALLING        (ADC_JSQR_JEXTEN_1                    ) /*!< ADC group i
1164:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_RISINGFALLING  (ADC_JSQR_JEXTEN_1 | ADC_JSQR_JEXTEN_0) /*!< ADC group i
1165:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
1166:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
1167:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1168:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
1169:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_INJ_TRIG_AUTO  ADC group injected - Automatic trigger mode
1170:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
1171:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1172:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_INDEPENDENT        (0x00000000UL)         /*!< ADC group injected conversio
1173:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_FROM_GRP_REGULAR   (ADC_CFGR_JAUTO)       /*!< ADC group injected conversio
1174:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
1175:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
1176:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1177:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
1178:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_INJ_CONTEXT_QUEUE  ADC group injected - Context queue mode
1179:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
1180:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1181:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_QUEUE_2CONTEXTS_LAST_ACTIVE (0x00000000UL)         /* Group injected sequence co
1182:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_QUEUE_2CONTEXTS_END_EMPTY   (ADC_CFGR_JQM)         /* Group injected sequence co
1183:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_QUEUE_DISABLE               (ADC_CFGR_JQDIS)       /* Group injected sequence co
1184:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
1185:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
1186:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1187:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
1188:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_INJ_SEQ_SCAN_LENGTH  ADC group injected - Sequencer scan length
1189:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
1190:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1191:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_SEQ_SCAN_DISABLE        (0x00000000UL)                  /*!< ADC group injected 
1192:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_SEQ_SCAN_ENABLE_2RANKS  (                ADC_JSQR_JL_0) /*!< ADC group injected 
1193:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_SEQ_SCAN_ENABLE_3RANKS  (ADC_JSQR_JL_1                ) /*!< ADC group injected 
1194:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_SEQ_SCAN_ENABLE_4RANKS  (ADC_JSQR_JL_1 | ADC_JSQR_JL_0) /*!< ADC group injected 
1195:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
1196:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
1197:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1198:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
1199:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_INJ_SEQ_DISCONT_MODE  ADC group injected - Sequencer discontinuous mode
1200:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
1201:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1202:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_SEQ_DISCONT_DISABLE     (0x00000000UL)         /*!< ADC group injected sequencer
1203:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_SEQ_DISCONT_1RANK       (ADC_CFGR_JDISCEN)     /*!< ADC group injected sequencer
1204:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
1205:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
1206:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1207:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
1208:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_INJ_SEQ_RANKS  ADC group injected - Sequencer ranks
1209:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
ARM GAS  /tmp/ccEuGJBQ.s 			page 41


1210:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1211:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_RANK_1                  (ADC_JDR1_REGOFFSET | ADC_INJ_RANK_1_JSQR_BITOFFSET_POS)
1212:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_RANK_2                  (ADC_JDR2_REGOFFSET | ADC_INJ_RANK_2_JSQR_BITOFFSET_POS)
1213:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_RANK_3                  (ADC_JDR3_REGOFFSET | ADC_INJ_RANK_3_JSQR_BITOFFSET_POS)
1214:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_RANK_4                  (ADC_JDR4_REGOFFSET | ADC_INJ_RANK_4_JSQR_BITOFFSET_POS)
1215:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
1216:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
1217:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1218:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
1219:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_CHANNEL_SAMPLINGTIME  Channel - Sampling time
1220:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
1221:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1222:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_2CYCLES_5      (0x00000000UL)                                          
1223:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_6CYCLES_5      (                                        ADC_SMPR2_SMP10
1224:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_12CYCLES_5     (                    ADC_SMPR2_SMP10_1                  
1225:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_24CYCLES_5     (                    ADC_SMPR2_SMP10_1 | ADC_SMPR2_SMP10
1226:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_47CYCLES_5     (ADC_SMPR2_SMP10_2                                      
1227:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_92CYCLES_5     (ADC_SMPR2_SMP10_2                     | ADC_SMPR2_SMP10
1228:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_247CYCLES_5    (ADC_SMPR2_SMP10_2 | ADC_SMPR2_SMP10_1                  
1229:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_640CYCLES_5    (ADC_SMPR2_SMP10_2 | ADC_SMPR2_SMP10_1 | ADC_SMPR2_SMP10
1230:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
1231:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
1232:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1233:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
1234:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_CHANNEL_SINGLE_DIFF_ENDING  Channel - Single or differential ending
1235:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
1236:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1237:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_SINGLE_ENDED                (                  ADC_CALFACT_CALFACT_S)         /*!< A
1238:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_DIFFERENTIAL_ENDED          (ADC_CR_ADCALDIF | ADC_CALFACT_CALFACT_D)         /*!< A
1239:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_BOTH_SINGLE_DIFF_ENDED      (LL_ADC_SINGLE_ENDED | LL_ADC_DIFFERENTIAL_ENDED) /*!< A
1240:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
1241:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
1242:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1243:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
1244:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_AWD_NUMBER Analog watchdog - Analog watchdog number
1245:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
1246:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1247:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD1                        (ADC_AWD_CR1_CHANNEL_MASK  | ADC_AWD_CR1_REGOFFSET) /*!<
1248:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD2                        (ADC_AWD_CR23_CHANNEL_MASK | ADC_AWD_CR2_REGOFFSET) /*!<
1249:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD3                        (ADC_AWD_CR23_CHANNEL_MASK | ADC_AWD_CR3_REGOFFSET) /*!<
1250:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
1251:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
1252:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1253:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
1254:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_AWD_CHANNELS  Analog watchdog - Monitored channels
1255:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
1256:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1257:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_DISABLE                 (0x00000000UL)                                          
1258:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_ALL_CHANNELS_REG        (ADC_AWD_CR23_CHANNEL_MASK                              
1259:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_ALL_CHANNELS_INJ        (ADC_AWD_CR23_CHANNEL_MASK                 | ADC_CFGR_JA
1260:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_ALL_CHANNELS_REG_INJ    (ADC_AWD_CR23_CHANNEL_MASK                 | ADC_CFGR_JA
1261:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_0_REG           ((LL_ADC_CHANNEL_0  & ADC_CHANNEL_ID_MASK)              
1262:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_0_INJ           ((LL_ADC_CHANNEL_0  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1263:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_0_REG_INJ       ((LL_ADC_CHANNEL_0  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1264:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_1_REG           ((LL_ADC_CHANNEL_1  & ADC_CHANNEL_ID_MASK)              
1265:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_1_INJ           ((LL_ADC_CHANNEL_1  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1266:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_1_REG_INJ       ((LL_ADC_CHANNEL_1  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
ARM GAS  /tmp/ccEuGJBQ.s 			page 42


1267:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_2_REG           ((LL_ADC_CHANNEL_2  & ADC_CHANNEL_ID_MASK)              
1268:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_2_INJ           ((LL_ADC_CHANNEL_2  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1269:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_2_REG_INJ       ((LL_ADC_CHANNEL_2  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1270:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_3_REG           ((LL_ADC_CHANNEL_3  & ADC_CHANNEL_ID_MASK)              
1271:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_3_INJ           ((LL_ADC_CHANNEL_3  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1272:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_3_REG_INJ       ((LL_ADC_CHANNEL_3  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1273:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_4_REG           ((LL_ADC_CHANNEL_4  & ADC_CHANNEL_ID_MASK)              
1274:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_4_INJ           ((LL_ADC_CHANNEL_4  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1275:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_4_REG_INJ       ((LL_ADC_CHANNEL_4  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1276:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_5_REG           ((LL_ADC_CHANNEL_5  & ADC_CHANNEL_ID_MASK)              
1277:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_5_INJ           ((LL_ADC_CHANNEL_5  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1278:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_5_REG_INJ       ((LL_ADC_CHANNEL_5  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1279:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_6_REG           ((LL_ADC_CHANNEL_6  & ADC_CHANNEL_ID_MASK)              
1280:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_6_INJ           ((LL_ADC_CHANNEL_6  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1281:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_6_REG_INJ       ((LL_ADC_CHANNEL_6  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1282:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_7_REG           ((LL_ADC_CHANNEL_7  & ADC_CHANNEL_ID_MASK)              
1283:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_7_INJ           ((LL_ADC_CHANNEL_7  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1284:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_7_REG_INJ       ((LL_ADC_CHANNEL_7  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1285:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_8_REG           ((LL_ADC_CHANNEL_8  & ADC_CHANNEL_ID_MASK)              
1286:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_8_INJ           ((LL_ADC_CHANNEL_8  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1287:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_8_REG_INJ       ((LL_ADC_CHANNEL_8  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1288:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_9_REG           ((LL_ADC_CHANNEL_9  & ADC_CHANNEL_ID_MASK)              
1289:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_9_INJ           ((LL_ADC_CHANNEL_9  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1290:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_9_REG_INJ       ((LL_ADC_CHANNEL_9  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1291:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_10_REG          ((LL_ADC_CHANNEL_10 & ADC_CHANNEL_ID_MASK)              
1292:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_10_INJ          ((LL_ADC_CHANNEL_10 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1293:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_10_REG_INJ      ((LL_ADC_CHANNEL_10 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1294:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_11_REG          ((LL_ADC_CHANNEL_11 & ADC_CHANNEL_ID_MASK)              
1295:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_11_INJ          ((LL_ADC_CHANNEL_11 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1296:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_11_REG_INJ      ((LL_ADC_CHANNEL_11 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1297:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_12_REG          ((LL_ADC_CHANNEL_12 & ADC_CHANNEL_ID_MASK)              
1298:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_12_INJ          ((LL_ADC_CHANNEL_12 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1299:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_12_REG_INJ      ((LL_ADC_CHANNEL_12 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1300:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_13_REG          ((LL_ADC_CHANNEL_13 & ADC_CHANNEL_ID_MASK)              
1301:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_13_INJ          ((LL_ADC_CHANNEL_13 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1302:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_13_REG_INJ      ((LL_ADC_CHANNEL_13 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1303:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_14_REG          ((LL_ADC_CHANNEL_14 & ADC_CHANNEL_ID_MASK)              
1304:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_14_INJ          ((LL_ADC_CHANNEL_14 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1305:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_14_REG_INJ      ((LL_ADC_CHANNEL_14 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1306:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_15_REG          ((LL_ADC_CHANNEL_15 & ADC_CHANNEL_ID_MASK)              
1307:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_15_INJ          ((LL_ADC_CHANNEL_15 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1308:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_15_REG_INJ      ((LL_ADC_CHANNEL_15 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1309:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_16_REG          ((LL_ADC_CHANNEL_16 & ADC_CHANNEL_ID_MASK)              
1310:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_16_INJ          ((LL_ADC_CHANNEL_16 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1311:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_16_REG_INJ      ((LL_ADC_CHANNEL_16 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1312:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_17_REG          ((LL_ADC_CHANNEL_17 & ADC_CHANNEL_ID_MASK)              
1313:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_17_INJ          ((LL_ADC_CHANNEL_17 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1314:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_17_REG_INJ      ((LL_ADC_CHANNEL_17 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1315:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_18_REG          ((LL_ADC_CHANNEL_18 & ADC_CHANNEL_ID_MASK)              
1316:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_18_INJ          ((LL_ADC_CHANNEL_18 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1317:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_18_REG_INJ      ((LL_ADC_CHANNEL_18 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1318:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CH_VREFINT_REG          ((LL_ADC_CHANNEL_VREFINT       & ADC_CHANNEL_ID_MASK)   
1319:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CH_VREFINT_INJ          ((LL_ADC_CHANNEL_VREFINT       & ADC_CHANNEL_ID_MASK) | 
1320:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CH_VREFINT_REG_INJ      ((LL_ADC_CHANNEL_VREFINT       & ADC_CHANNEL_ID_MASK) | 
1321:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CH_TEMPSENSOR_ADC1_REG       ((LL_ADC_CHANNEL_TEMPSENSOR_ADC1 & ADC_CHANNEL_ID_M
1322:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CH_TEMPSENSOR_ADC1_INJ       ((LL_ADC_CHANNEL_TEMPSENSOR_ADC1 & ADC_CHANNEL_ID_M
1323:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CH_TEMPSENSOR_ADC1_REG_INJ   ((LL_ADC_CHANNEL_TEMPSENSOR_ADC1 & ADC_CHANNEL_ID_M
ARM GAS  /tmp/ccEuGJBQ.s 			page 43


1324:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CH_TEMPSENSOR_ADC5_REG       ((LL_ADC_CHANNEL_TEMPSENSOR_ADC5 & ADC_CHANNEL_ID_M
1325:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CH_TEMPSENSOR_ADC5_INJ       ((LL_ADC_CHANNEL_TEMPSENSOR_ADC5 & ADC_CHANNEL_ID_M
1326:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CH_TEMPSENSOR_ADC5_REG_INJ   ((LL_ADC_CHANNEL_TEMPSENSOR_ADC5 & ADC_CHANNEL_ID_M
1327:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CH_VBAT_REG             ((LL_ADC_CHANNEL_VBAT          & ADC_CHANNEL_ID_MASK)   
1328:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CH_VBAT_INJ             ((LL_ADC_CHANNEL_VBAT          & ADC_CHANNEL_ID_MASK) | 
1329:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CH_VBAT_REG_INJ         ((LL_ADC_CHANNEL_VBAT          & ADC_CHANNEL_ID_MASK) | 
1330:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CH_VOPAMP1_REG          ((LL_ADC_CHANNEL_VOPAMP1       & ADC_CHANNEL_ID_MASK)   
1331:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CH_VOPAMP1_INJ          ((LL_ADC_CHANNEL_VOPAMP1       & ADC_CHANNEL_ID_MASK) | 
1332:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CH_VOPAMP1_REG_INJ      ((LL_ADC_CHANNEL_VOPAMP1       & ADC_CHANNEL_ID_MASK) | 
1333:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CH_VOPAMP2_REG          ((LL_ADC_CHANNEL_VOPAMP2       & ADC_CHANNEL_ID_MASK)   
1334:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CH_VOPAMP2_INJ          ((LL_ADC_CHANNEL_VOPAMP2       & ADC_CHANNEL_ID_MASK) | 
1335:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CH_VOPAMP2_REG_INJ      ((LL_ADC_CHANNEL_VOPAMP2       & ADC_CHANNEL_ID_MASK) | 
1336:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CH_VOPAMP3_ADC2_REG     ((LL_ADC_CHANNEL_VOPAMP3_ADC2  & ADC_CHANNEL_ID_MASK)   
1337:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CH_VOPAMP3_ADC2_INJ     ((LL_ADC_CHANNEL_VOPAMP3_ADC2  & ADC_CHANNEL_ID_MASK) | 
1338:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CH_VOPAMP3_ADC2_REG_INJ ((LL_ADC_CHANNEL_VOPAMP3_ADC2  & ADC_CHANNEL_ID_MASK) | 
1339:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CH_VOPAMP3_ADC3_REG     ((LL_ADC_CHANNEL_VOPAMP3_ADC3  & ADC_CHANNEL_ID_MASK)   
1340:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CH_VOPAMP3_ADC3_INJ     ((LL_ADC_CHANNEL_VOPAMP3_ADC3  & ADC_CHANNEL_ID_MASK) | 
1341:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CH_VOPAMP3_ADC3_REG_INJ ((LL_ADC_CHANNEL_VOPAMP3_ADC3  & ADC_CHANNEL_ID_MASK) | 
1342:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CH_VOPAMP4_REG          ((LL_ADC_CHANNEL_VOPAMP4       & ADC_CHANNEL_ID_MASK)   
1343:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CH_VOPAMP4_INJ          ((LL_ADC_CHANNEL_VOPAMP4       & ADC_CHANNEL_ID_MASK) | 
1344:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CH_VOPAMP4_REG_INJ      ((LL_ADC_CHANNEL_VOPAMP4       & ADC_CHANNEL_ID_MASK) | 
1345:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CH_VOPAMP5_REG          ((LL_ADC_CHANNEL_VOPAMP5       & ADC_CHANNEL_ID_MASK)   
1346:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CH_VOPAMP5_INJ          ((LL_ADC_CHANNEL_VOPAMP5       & ADC_CHANNEL_ID_MASK) | 
1347:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CH_VOPAMP5_REG_INJ      ((LL_ADC_CHANNEL_VOPAMP5       & ADC_CHANNEL_ID_MASK) | 
1348:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CH_VOPAMP6_REG          ((LL_ADC_CHANNEL_VOPAMP6       & ADC_CHANNEL_ID_MASK)   
1349:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CH_VOPAMP6_INJ          ((LL_ADC_CHANNEL_VOPAMP6       & ADC_CHANNEL_ID_MASK) | 
1350:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CH_VOPAMP6_REG_INJ      ((LL_ADC_CHANNEL_VOPAMP6       & ADC_CHANNEL_ID_MASK) | 
1351:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
1352:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
1353:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1354:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
1355:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_AWD_THRESHOLDS  Analog watchdog - Thresholds
1356:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
1357:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1358:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_THRESHOLD_HIGH          (ADC_TR1_HT1              ) /*!< ADC analog watchdog thr
1359:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_THRESHOLD_LOW           (              ADC_TR1_LT1) /*!< ADC analog watchdog thr
1360:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_THRESHOLDS_HIGH_LOW     (ADC_TR1_HT1 | ADC_TR1_LT1) /*!< ADC analog watchdog bot
1361:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
1362:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
1363:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1364:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
1365:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_AWD_FILTERING_CONFIG  Analog watchdog - filtering config
1366:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
1367:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1368:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_FILTERING_NONE          (0x00000000UL)                                          
1369:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_FILTERING_2SAMPLES      (                                        ADC_TR1_AWDFILT
1370:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_FILTERING_3SAMPLES      (                    ADC_TR1_AWDFILT_1                  
1371:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_FILTERING_4SAMPLES      (                    ADC_TR1_AWDFILT_1 | ADC_TR1_AWDFILT
1372:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_FILTERING_5SAMPLES      (ADC_TR1_AWDFILT_2                                      
1373:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_FILTERING_6SAMPLES      (ADC_TR1_AWDFILT_2 |                     ADC_TR1_AWDFILT
1374:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_FILTERING_7SAMPLES      (ADC_TR1_AWDFILT_2 | ADC_TR1_AWDFILT_1                  
1375:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_FILTERING_8SAMPLES      (ADC_TR1_AWDFILT_2 | ADC_TR1_AWDFILT_1 | ADC_TR1_AWDFILT
1376:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
1377:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
1378:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1379:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
1380:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_OVS_SCOPE  Oversampling - Oversampling scope
ARM GAS  /tmp/ccEuGJBQ.s 			page 44


1381:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
1382:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1383:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_OVS_DISABLE                 (0x00000000UL)                                        /*
1384:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_OVS_GRP_REGULAR_CONTINUED   (                                    ADC_CFGR2_ROVSE) /*
1385:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_OVS_GRP_REGULAR_RESUMED     (ADC_CFGR2_ROVSM |                   ADC_CFGR2_ROVSE) /*
1386:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_OVS_GRP_INJECTED            (                  ADC_CFGR2_JOVSE                  ) /*
1387:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_OVS_GRP_INJ_REG_RESUMED     (                  ADC_CFGR2_JOVSE | ADC_CFGR2_ROVSE) /*
1388:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
1389:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
1390:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1391:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
1392:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_OVS_DISCONT_MODE  Oversampling - Discontinuous mode
1393:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
1394:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1395:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_OVS_REG_CONT                (0x00000000UL)         /*!< ADC oversampling discontinuo
1396:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_OVS_REG_DISCONT             (ADC_CFGR2_TROVS)      /*!< ADC oversampling discontinuo
1397:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
1398:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
1399:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1400:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
1401:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_OVS_RATIO  Oversampling - Ratio
1402:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
1403:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1404:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_2                 (0x00000000UL)                                          
1405:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_4                 (                                      ADC_CFGR2_OVSR_0)
1406:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_8                 (                   ADC_CFGR2_OVSR_1                   )
1407:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_16                (                   ADC_CFGR2_OVSR_1 | ADC_CFGR2_OVSR_0)
1408:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_32                (ADC_CFGR2_OVSR_2                                      )
1409:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_64                (ADC_CFGR2_OVSR_2                    | ADC_CFGR2_OVSR_0)
1410:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_128               (ADC_CFGR2_OVSR_2 | ADC_CFGR2_OVSR_1                   )
1411:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_256               (ADC_CFGR2_OVSR_2 | ADC_CFGR2_OVSR_1 | ADC_CFGR2_OVSR_0)
1412:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
1413:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
1414:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1415:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
1416:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_OVS_SHIFT  Oversampling - Data shift
1417:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
1418:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1419:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_NONE              (0x00000000UL)                                          
1420:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_1           (                                                       
1421:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_2           (                                      ADC_CFGR2_OVSS_1 
1422:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_3           (                                      ADC_CFGR2_OVSS_1 
1423:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_4           (                   ADC_CFGR2_OVSS_2                    
1424:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_5           (                   ADC_CFGR2_OVSS_2                    
1425:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_6           (                   ADC_CFGR2_OVSS_2 | ADC_CFGR2_OVSS_1 
1426:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_7           (                   ADC_CFGR2_OVSS_2 | ADC_CFGR2_OVSS_1 
1427:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_8           (ADC_CFGR2_OVSS_3                                       
1428:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
1429:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
1430:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1431:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
1432:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #if defined(ADC_MULTIMODE_SUPPORT)
1433:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_MULTI_MODE  Multimode - Mode
1434:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
1435:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1436:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_MULTI_INDEPENDENT           (0x00000000UL)                                          
1437:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_MULTI_DUAL_REG_SIMULT       (                 ADC_CCR_DUAL_2 | ADC_CCR_DUAL_1       
ARM GAS  /tmp/ccEuGJBQ.s 			page 45


1438:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_MULTI_DUAL_REG_INTERL       (                 ADC_CCR_DUAL_2 | ADC_CCR_DUAL_1 | ADC_
1439:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_MULTI_DUAL_INJ_SIMULT       (                 ADC_CCR_DUAL_2                  | ADC_
1440:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_MULTI_DUAL_INJ_ALTERN       (ADC_CCR_DUAL_3                                   | ADC_
1441:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_MULTI_DUAL_REG_SIM_INJ_SIM  (                                                   ADC_
1442:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_MULTI_DUAL_REG_SIM_INJ_ALT  (                                  ADC_CCR_DUAL_1       
1443:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_MULTI_DUAL_REG_INT_INJ_SIM  (                                  ADC_CCR_DUAL_1 | ADC_
1444:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
1445:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
1446:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1447:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
1448:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_MULTI_DMA_TRANSFER  Multimode - DMA transfer
1449:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
1450:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1451:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_MULTI_REG_DMA_EACH_ADC        (0x00000000UL)                                     /*!
1452:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_MULTI_REG_DMA_LIMIT_RES12_10B (                 ADC_CCR_MDMA_1                 ) /*!
1453:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_MULTI_REG_DMA_LIMIT_RES8_6B   (                 ADC_CCR_MDMA_1 | ADC_CCR_MDMA_0) /*!
1454:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_MULTI_REG_DMA_UNLMT_RES12_10B (ADC_CCR_DMACFG | ADC_CCR_MDMA_1                 ) /*!
1455:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_MULTI_REG_DMA_UNLMT_RES8_6B   (ADC_CCR_DMACFG | ADC_CCR_MDMA_1 | ADC_CCR_MDMA_0) /*!
1456:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
1457:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
1458:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1459:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
1460:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_MULTI_TWOSMP_DELAY  Multimode - Delay between two sampling phases
1461:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
1462:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1463:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_1CYCLE   (0x00000000UL)                                          
1464:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_2CYCLES  (                                                      A
1465:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_3CYCLES  (                                    ADC_CCR_DELAY_1    
1466:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_4CYCLES  (                                    ADC_CCR_DELAY_1 | A
1467:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_5CYCLES  (                  ADC_CCR_DELAY_2                      
1468:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_6CYCLES  (                  ADC_CCR_DELAY_2                   | A
1469:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_7CYCLES  (                  ADC_CCR_DELAY_2 | ADC_CCR_DELAY_1    
1470:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_8CYCLES  (                  ADC_CCR_DELAY_2 | ADC_CCR_DELAY_1 | A
1471:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_9CYCLES  (ADC_CCR_DELAY_3                                        
1472:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_10CYCLES (ADC_CCR_DELAY_3                                     | A
1473:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_11CYCLES (ADC_CCR_DELAY_3                   | ADC_CCR_DELAY_1    
1474:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_12CYCLES (ADC_CCR_DELAY_3                   | ADC_CCR_DELAY_1 | A
1475:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
1476:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
1477:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1478:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
1479:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_MULTI_MASTER_SLAVE  Multimode - ADC master or slave
1480:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
1481:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1482:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_MULTI_MASTER                (                    ADC_CDR_RDATA_MST) /*!< In multimod
1483:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_MULTI_SLAVE                 (ADC_CDR_RDATA_SLV                    ) /*!< In multimod
1484:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_MULTI_MASTER_SLAVE          (ADC_CDR_RDATA_SLV | ADC_CDR_RDATA_MST) /*!< In multimod
1485:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
1486:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
1487:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1488:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
1489:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #endif /* ADC_MULTIMODE_SUPPORT */
1490:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
1491:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
1492:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_HW_DELAYS  Definitions of ADC hardware constraints delays
1493:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Only ADC peripheral HW delays are defined in ADC LL driver driver,
1494:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         not timeout values.
ARM GAS  /tmp/ccEuGJBQ.s 			page 46


1495:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         For details on delays values, refer to descriptions in source code
1496:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         above each literal definition.
1497:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
1498:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1499:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
1500:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Note: Only ADC peripheral HW delays are defined in ADC LL driver driver,   */
1501:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /*       not timeout values.                                                  */
1502:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /*       Timeout values for ADC operations are dependent to device clock      */
1503:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /*       configuration (system clock versus ADC clock),                       */
1504:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /*       and therefore must be defined in user application.                   */
1505:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /*       Indications for estimation of ADC timeout delays, for this           */
1506:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /*       STM32 series:                                                        */
1507:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /*       - ADC calibration time: maximum delay is 112/fADC.                   */
1508:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /*         (refer to device datasheet, parameter "tCAL")                      */
1509:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /*       - ADC enable time: maximum delay is 1 conversion cycle.              */
1510:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /*         (refer to device datasheet, parameter "tSTAB")                     */
1511:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /*       - ADC disable time: maximum delay should be a few ADC clock cycles   */
1512:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /*       - ADC stop conversion time: maximum delay should be a few ADC clock  */
1513:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /*         cycles                                                             */
1514:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /*       - ADC conversion time: duration depending on ADC clock and ADC       */
1515:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /*         configuration.                                                     */
1516:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /*         (refer to device reference manual, section "Timing")               */
1517:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
1518:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Delay for ADC stabilization time (ADC voltage regulator start-up time)     */
1519:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Delay set to maximum value (refer to device datasheet,                     */
1520:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* parameter "tADCVREG_STUP").                                                */
1521:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Unit: us                                                                   */
1522:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_DELAY_INTERNAL_REGUL_STAB_US ( 20UL)  /*!< Delay for ADC stabilization time (ADC vol
1523:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
1524:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Delay for internal voltage reference stabilization time.                   */
1525:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Delay set to maximum value (refer to device datasheet,                     */
1526:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* parameter "tstart_vrefint").                                               */
1527:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Unit: us                                                                   */
1528:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_DELAY_VREFINT_STAB_US           ( 12UL)  /*!< Delay for internal voltage reference s
1529:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
1530:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Delay for temperature sensor stabilization time.                           */
1531:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Literal set to maximum value (refer to device datasheet,                   */
1532:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* parameter "tSTART").                                                       */
1533:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Unit: us                                                                   */
1534:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_DELAY_TEMPSENSOR_STAB_US        (120UL)  /*!< Delay for temperature sensor stabiliza
1535:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
1536:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Delay required between ADC end of calibration and ADC enable.              */
1537:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Note: On this STM32 series, a minimum number of ADC clock cycles           */
1538:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /*       are required between ADC end of calibration and ADC enable.          */
1539:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /*       Wait time can be computed in user application by waiting for the     */
1540:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /*       equivalent number of CPU cycles, by taking into account              */
1541:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /*       ratio of CPU clock versus ADC clock prescalers.                      */
1542:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Unit: ADC clock cycles.                                                    */
1543:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_DELAY_CALIB_ENABLE_ADC_CYCLES   (  4UL)  /*!< Delay required between ADC end of cali
1544:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
1545:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
1546:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
1547:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1548:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
1549:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
1550:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
1551:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
ARM GAS  /tmp/ccEuGJBQ.s 			page 47


1552:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
1553:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
1554:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Exported macro ------------------------------------------------------------*/
1555:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_Exported_Macros ADC Exported Macros
1556:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
1557:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1558:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
1559:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EM_WRITE_READ Common write and read registers Macros
1560:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
1561:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1562:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
1563:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
1564:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Write a value in ADC register
1565:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __INSTANCE__ ADC Instance
1566:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __REG__ Register to be written
1567:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __VALUE__ Value to be written in the register
1568:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
1569:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1570:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_WriteReg(__INSTANCE__, __REG__, __VALUE__) WRITE_REG(__INSTANCE__->__REG__, (__VALUE
1571:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
1572:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
1573:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Read a value in ADC register
1574:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __INSTANCE__ ADC Instance
1575:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __REG__ Register to be read
1576:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Register value
1577:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1578:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_ReadReg(__INSTANCE__, __REG__) READ_REG(__INSTANCE__->__REG__)
1579:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
1580:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
1581:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1582:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
1583:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EM_HELPER_MACRO ADC helper macro
1584:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
1585:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1586:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
1587:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
1588:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Helper macro to get ADC channel number in decimal format
1589:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         from literals LL_ADC_CHANNEL_x.
1590:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Example:
1591:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           __LL_ADC_CHANNEL_TO_DECIMAL_NB(LL_ADC_CHANNEL_4)
1592:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           will return decimal number "4".
1593:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   The input can be a value from functions where a channel
1594:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         number is returned, either defined with number
1595:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         or with bitfield (only one bit must be set).
1596:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
1597:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
1598:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1                 (8)
1599:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2                 (8)
1600:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3                 (8)
1601:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4                 (8)
1602:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5                 (8)
1603:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
1604:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
1605:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
1606:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
1607:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
1608:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
ARM GAS  /tmp/ccEuGJBQ.s 			page 48


1609:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
1610:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
1611:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
1612:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
1613:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
1614:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
1615:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
1616:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT           (7)
1617:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR_ADC1   (1)
1618:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR_ADC5   (5)
1619:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT              (6)
1620:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP1           (1)
1621:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP2           (2)
1622:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP3_ADC2      (2)
1623:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP3_ADC3      (3)
1624:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP4           (5)
1625:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP5           (5)
1626:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP6           (4)
1627:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *
1628:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (1) On STM32G4, parameter available only on ADC instance: ADC1.\n
1629:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (2) On STM32G4, parameter available only on ADC instance: ADC2.\n
1630:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (3) On STM32G4, parameter available only on ADC instance: ADC3.\n
1631:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (4) On STM32G4, parameter available only on ADC instance: ADC4.\n
1632:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (5) On STM32G4, parameter available only on ADC instance: ADC5.\n
1633:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (6) On STM32G4, parameter available only on ADC instances: ADC1, ADC3, ADC5.\n
1634:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (7) On STM32G4, parameter available only on ADC instances: ADC1, ADC3, ADC4, ADC5.\n
1635:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *          -  On this STM32 series, all ADCx are not available on all devices. Refer to device da
1636:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (8) On STM32G4, fast channel allows: 2.5 (sampling) + 12.5 (conversion) = 15 ADC clock 
1637:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             Other channels are slow channels  allows: 6.5 (sampling) + 12.5 (conversion) = 19 A
1638:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Value between Min_Data=0 and Max_Data=18
1639:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1640:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define __LL_ADC_CHANNEL_TO_DECIMAL_NB(__CHANNEL__)                                        \
1641:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   ((((__CHANNEL__) & ADC_CHANNEL_ID_BITFIELD_MASK) == 0UL) ?                               \
1642:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    (                                                                                       \
1643:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        ((__CHANNEL__) & ADC_CHANNEL_ID_NUMBER_MASK) >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS \
1644:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    )                                                                                       \
1645:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    :                                                                                       \
1646:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    (                                                                                       \
1647:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        (uint32_t)POSITION_VAL((__CHANNEL__))                                               \
1648:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    )                                                                                       \
1649:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   )
1650:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
1651:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
1652:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Helper macro to get ADC channel in literal format LL_ADC_CHANNEL_x
1653:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         from number in decimal format.
1654:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Example:
1655:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           __LL_ADC_DECIMAL_NB_TO_CHANNEL(4)
1656:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           will return a data equivalent to "LL_ADC_CHANNEL_4".
1657:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __DECIMAL_NB__ Value between Min_Data=0 and Max_Data=18
1658:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
1659:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
1660:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1                 (8)
1661:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2                 (8)
1662:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3                 (8)
1663:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4                 (8)
1664:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5                 (8)
1665:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
ARM GAS  /tmp/ccEuGJBQ.s 			page 49


1666:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
1667:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
1668:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
1669:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
1670:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
1671:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
1672:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
1673:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
1674:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
1675:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
1676:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
1677:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
1678:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT           (7)
1679:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR_ADC1   (1)
1680:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR_ADC5   (5)
1681:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT              (6)
1682:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP1           (1)
1683:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP2           (2)
1684:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP3_ADC2      (2)
1685:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP3_ADC3      (3)
1686:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP4           (5)
1687:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP5           (5)
1688:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP6           (4)
1689:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *
1690:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (1) On STM32G4, parameter available only on ADC instance: ADC1.\n
1691:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (2) On STM32G4, parameter available only on ADC instance: ADC2.\n
1692:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (3) On STM32G4, parameter available only on ADC instance: ADC3.\n
1693:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (4) On STM32G4, parameter available only on ADC instance: ADC4.\n
1694:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (5) On STM32G4, parameter available only on ADC instance: ADC5.\n
1695:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (6) On STM32G4, parameter available only on ADC instances: ADC1, ADC3, ADC5.\n
1696:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (7) On STM32G4, parameter available only on ADC instances: ADC1, ADC3, ADC4, ADC5.\n
1697:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *          -  On this STM32 series, all ADCx are not available on all devices. Refer to device da
1698:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (8) On STM32G4, fast channel allows: 2.5 (sampling) + 12.5 (conversion) = 15 ADC clock 
1699:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             Other channels are slow channels  allows: 6.5 (sampling) + 12.5 (conversion) = 19 A
1700:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (1, 2, 3, 4, 5, 7) For ADC channel read back from ADC register,
1701:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                      comparison with internal channel parameter to be done
1702:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                      using helper macro @ref __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL().
1703:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1704:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define __LL_ADC_DECIMAL_NB_TO_CHANNEL(__DECIMAL_NB__)                                             
1705:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   (((__DECIMAL_NB__) <= 9UL) ?                                                                     
1706:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    (                                                                                               
1707:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        ((__DECIMAL_NB__) << ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS)                             |     
1708:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        (ADC_AWD2CR_AWD2CH_0 << (__DECIMAL_NB__))                                             |     
1709:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        (ADC_SMPR1_REGOFFSET | (((3UL * (__DECIMAL_NB__))) << ADC_CHANNEL_SMPx_BITOFFSET_POS))      
1710:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    )                                                                                               
1711:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    :                                                                                               
1712:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    (                                                                                               
1713:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        ((__DECIMAL_NB__) << ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS)                                   
1714:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        (ADC_AWD2CR_AWD2CH_0 << (__DECIMAL_NB__))                                                   
1715:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        (ADC_SMPR2_REGOFFSET | (((3UL * ((__DECIMAL_NB__) - 10UL))) << ADC_CHANNEL_SMPx_BITOFFSET_PO
1716:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    )                                                                                               
1717:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   )
1718:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
1719:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
1720:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Helper macro to determine whether the selected channel
1721:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         corresponds to literal definitions of driver.
1722:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   The different literal definitions of ADC channels are:
ARM GAS  /tmp/ccEuGJBQ.s 			page 50


1723:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - ADC internal channel:
1724:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           LL_ADC_CHANNEL_VREFINT, LL_ADC_CHANNEL_TEMPSENSOR, ...
1725:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - ADC external channel (channel connected to a GPIO pin):
1726:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           LL_ADC_CHANNEL_1, LL_ADC_CHANNEL_2, ...
1727:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   The channel parameter must be a value defined from literal
1728:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         definition of a ADC internal channel (LL_ADC_CHANNEL_VREFINT,
1729:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         LL_ADC_CHANNEL_TEMPSENSOR, ...),
1730:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC external channel (LL_ADC_CHANNEL_1, LL_ADC_CHANNEL_2, ...),
1731:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         must not be a value from functions where a channel number is
1732:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         returned from ADC registers,
1733:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         because internal and external channels share the same channel
1734:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         number in ADC registers. The differentiation is made only with
1735:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         parameters definitions of driver.
1736:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
1737:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
1738:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1                 (8)
1739:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2                 (8)
1740:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3                 (8)
1741:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4                 (8)
1742:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5                 (8)
1743:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
1744:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
1745:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
1746:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
1747:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
1748:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
1749:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
1750:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
1751:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
1752:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
1753:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
1754:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
1755:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
1756:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT           (7)
1757:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR_ADC1   (1)
1758:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR_ADC5   (5)
1759:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT              (6)
1760:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP1           (1)
1761:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP2           (2)
1762:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP3_ADC2      (2)
1763:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP3_ADC3      (3)
1764:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP4           (5)
1765:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP5           (5)
1766:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP6           (4)
1767:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *
1768:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (1) On STM32G4, parameter available only on ADC instance: ADC1.\n
1769:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (2) On STM32G4, parameter available only on ADC instance: ADC2.\n
1770:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (3) On STM32G4, parameter available only on ADC instance: ADC3.\n
1771:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (4) On STM32G4, parameter available only on ADC instance: ADC4.\n
1772:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (5) On STM32G4, parameter available only on ADC instance: ADC5.\n
1773:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (6) On STM32G4, parameter available only on ADC instances: ADC1, ADC3, ADC5.\n
1774:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (7) On STM32G4, parameter available only on ADC instances: ADC1, ADC3, ADC4, ADC5.\n
1775:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *          -  On this STM32 series, all ADCx are not available on all devices. Refer to device da
1776:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (8) On STM32G4, fast channel allows: 2.5 (sampling) + 12.5 (conversion) = 15 ADC clock 
1777:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             Other channels are slow channels  allows: 6.5 (sampling) + 12.5 (conversion) = 19 A
1778:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Value "0" if the channel corresponds to a parameter definition of a ADC external channe
1779:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Value "1" if the channel corresponds to a parameter definition of a ADC internal channe
ARM GAS  /tmp/ccEuGJBQ.s 			page 51


1780:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1781:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define __LL_ADC_IS_CHANNEL_INTERNAL(__CHANNEL__)                              \
1782:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   (((__CHANNEL__) & ADC_CHANNEL_ID_INTERNAL_CH_MASK) != 0UL)
1783:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
1784:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
1785:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Helper macro to convert a channel defined from parameter
1786:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         definition of a ADC internal channel (LL_ADC_CHANNEL_VREFINT,
1787:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         LL_ADC_CHANNEL_TEMPSENSOR, ...),
1788:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         to its equivalent parameter definition of a ADC external channel
1789:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (LL_ADC_CHANNEL_1, LL_ADC_CHANNEL_2, ...).
1790:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   The channel parameter can be, additionally to a value
1791:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         defined from parameter definition of a ADC internal channel
1792:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (LL_ADC_CHANNEL_VREFINT, LL_ADC_CHANNEL_TEMPSENSOR, ...),
1793:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         a value defined from parameter definition of
1794:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC external channel (LL_ADC_CHANNEL_1, LL_ADC_CHANNEL_2, ...)
1795:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         or a value from functions where a channel number is returned
1796:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         from ADC registers.
1797:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
1798:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
1799:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1                 (8)
1800:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2                 (8)
1801:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3                 (8)
1802:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4                 (8)
1803:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5                 (8)
1804:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
1805:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
1806:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
1807:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
1808:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
1809:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
1810:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
1811:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
1812:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
1813:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
1814:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
1815:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
1816:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
1817:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT           (7)
1818:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR_ADC1   (1)
1819:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR_ADC5   (5)
1820:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT              (6)
1821:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP1           (1)
1822:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP2           (2)
1823:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP3_ADC2      (2)
1824:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP3_ADC3      (3)
1825:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP4           (5)
1826:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP5           (5)
1827:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP6           (4)
1828:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *
1829:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (1) On STM32G4, parameter available only on ADC instance: ADC1.\n
1830:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (2) On STM32G4, parameter available only on ADC instance: ADC2.\n
1831:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (3) On STM32G4, parameter available only on ADC instance: ADC3.\n
1832:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (4) On STM32G4, parameter available only on ADC instance: ADC4.\n
1833:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (5) On STM32G4, parameter available only on ADC instance: ADC5.\n
1834:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (6) On STM32G4, parameter available only on ADC instances: ADC1, ADC3, ADC5.\n
1835:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (7) On STM32G4, parameter available only on ADC instances: ADC1, ADC3, ADC4, ADC5.\n
1836:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *          -  On this STM32 series, all ADCx are not available on all devices. Refer to device da
ARM GAS  /tmp/ccEuGJBQ.s 			page 52


1837:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (8) On STM32G4, fast channel allows: 2.5 (sampling) + 12.5 (conversion) = 15 ADC clock 
1838:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             Other channels are slow channels  allows: 6.5 (sampling) + 12.5 (conversion) = 19 A
1839:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
1840:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
1841:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
1842:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
1843:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
1844:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
1845:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
1846:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
1847:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
1848:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
1849:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
1850:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
1851:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
1852:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
1853:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
1854:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
1855:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
1856:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
1857:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
1858:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
1859:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1860:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL(__CHANNEL__)                     \
1861:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   ((__CHANNEL__) & ~ADC_CHANNEL_ID_INTERNAL_CH_MASK)
1862:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
1863:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
1864:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Helper macro to determine whether the internal channel
1865:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         selected is available on the ADC instance selected.
1866:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   The channel parameter must be a value defined from parameter
1867:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         definition of a ADC internal channel (LL_ADC_CHANNEL_VREFINT,
1868:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         LL_ADC_CHANNEL_TEMPSENSOR, ...),
1869:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         must not be a value defined from parameter definition of
1870:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC external channel (LL_ADC_CHANNEL_1, LL_ADC_CHANNEL_2, ...)
1871:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         or a value from functions where a channel number is
1872:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         returned from ADC registers,
1873:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         because internal and external channels share the same channel
1874:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         number in ADC registers. The differentiation is made only with
1875:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         parameters definitions of driver.
1876:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __ADC_INSTANCE__ ADC instance
1877:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
1878:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT           (7)
1879:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR_ADC1   (1)
1880:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR_ADC5   (5)
1881:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT              (6)
1882:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP1           (1)
1883:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP2           (2)
1884:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP3_ADC2      (2)
1885:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP3_ADC3      (3)
1886:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP4           (5)
1887:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP5           (5)
1888:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP6           (4)
1889:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *
1890:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (1) On STM32G4, parameter available only on ADC instance: ADC1.\n
1891:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (2) On STM32G4, parameter available only on ADC instance: ADC2.\n
1892:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (3) On STM32G4, parameter available only on ADC instance: ADC3.\n
1893:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (4) On STM32G4, parameter available only on ADC instance: ADC4.\n
ARM GAS  /tmp/ccEuGJBQ.s 			page 53


1894:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (5) On STM32G4, parameter available only on ADC instance: ADC5.\n
1895:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (6) On STM32G4, parameter available only on ADC instances: ADC1, ADC3, ADC5.\n
1896:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (7) On STM32G4, parameter available only on ADC instances: ADC1, ADC3, ADC4, ADC5.\n
1897:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *          -  On this STM32 series, all ADCx are not available on all devices. Refer to device da
1898:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Value "0" if the internal channel selected is not available on the ADC instance selecte
1899:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Value "1" if the internal channel selected is available on the ADC instance selected.
1900:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1901:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #if defined(STM32G474xx) || defined(STM32G484xx) || defined(STM32G473xx) || defined(STM32G483xx)
1902:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define __LL_ADC_IS_CHANNEL_INTERNAL_AVAILABLE(__ADC_INSTANCE__, __CHANNEL__)  \
1903:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   ((((__ADC_INSTANCE__) == ADC1)                                               \
1904:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****     &&(                                                                        \
1905:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_VOPAMP1)         ||                    \
1906:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_TEMPSENSOR_ADC1) ||                    \
1907:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_VBAT)            ||                    \
1908:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_VREFINT)                               \
1909:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****       )                                                                        \
1910:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    )                                                                           \
1911:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    ||                                                                          \
1912:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    (((__ADC_INSTANCE__) == ADC2)                                               \
1913:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****     &&(                                                                        \
1914:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_VOPAMP2)         ||                    \
1915:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_VOPAMP3_ADC2)                          \
1916:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****       )                                                                        \
1917:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    )                                                                           \
1918:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    ||                                                                          \
1919:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    (((__ADC_INSTANCE__) == ADC3)                                               \
1920:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****     &&(                                                                        \
1921:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_VOPAMP3_ADC3)    ||                    \
1922:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_VBAT)            ||                    \
1923:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_VREFINT)                               \
1924:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****       )                                                                        \
1925:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    )                                                                           \
1926:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    ||                                                                          \
1927:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    (((__ADC_INSTANCE__) == ADC4)                                               \
1928:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****     &&(                                                                        \
1929:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_VOPAMP6)         ||                    \
1930:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_VREFINT)                               \
1931:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****       )                                                                        \
1932:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    )                                                                           \
1933:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    ||                                                                          \
1934:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    (((__ADC_INSTANCE__) == ADC5)                                               \
1935:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****     &&(                                                                        \
1936:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_VOPAMP5)         ||                    \
1937:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_TEMPSENSOR_ADC5) ||                    \
1938:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_VOPAMP4)         ||                    \
1939:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_VBAT)            ||                    \
1940:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_VREFINT)                               \
1941:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****       )                                                                        \
1942:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    )                                                                           \
1943:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   )
1944:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #elif defined(STM32G471xx)
1945:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define __LL_ADC_IS_CHANNEL_INTERNAL_AVAILABLE(__ADC_INSTANCE__, __CHANNEL__)  \
1946:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   ((((__ADC_INSTANCE__) == ADC1)                                               \
1947:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****     &&(                                                                        \
1948:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_VOPAMP1)         ||                    \
1949:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_TEMPSENSOR_ADC1) ||                    \
1950:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_VBAT)            ||                    \
ARM GAS  /tmp/ccEuGJBQ.s 			page 54


1951:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_VREFINT)                               \
1952:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****       )                                                                        \
1953:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    )                                                                           \
1954:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    ||                                                                          \
1955:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    (((__ADC_INSTANCE__) == ADC2)                                               \
1956:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****     &&(                                                                        \
1957:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_VOPAMP2)         ||                    \
1958:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_VOPAMP3_ADC2)                          \
1959:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****       )                                                                        \
1960:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    )                                                                           \
1961:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    ||                                                                          \
1962:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    (((__ADC_INSTANCE__) == ADC3)                                               \
1963:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****     &&(                                                                        \
1964:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_VOPAMP3_ADC3)    ||                    \
1965:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_VBAT)            ||                    \
1966:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_VREFINT)                               \
1967:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****       )                                                                        \
1968:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    )                                                                           \
1969:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   )
1970:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #elif defined(STM32GBK1CB) || defined(STM32G431xx) || defined(STM32G441xx)
1971:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define __LL_ADC_IS_CHANNEL_INTERNAL_AVAILABLE(__ADC_INSTANCE__, __CHANNEL__)  \
1972:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   ((((__ADC_INSTANCE__) == ADC1)                                               \
1973:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****     &&(                                                                        \
1974:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_VOPAMP1)         ||                    \
1975:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_TEMPSENSOR_ADC1) ||                    \
1976:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_VBAT)            ||                    \
1977:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_VREFINT)                               \
1978:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****       )                                                                        \
1979:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    )                                                                           \
1980:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    ||                                                                          \
1981:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    (((__ADC_INSTANCE__) == ADC2)                                               \
1982:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****     &&(                                                                        \
1983:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_VOPAMP2)         ||                    \
1984:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_VOPAMP3_ADC2)                          \
1985:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****       )                                                                        \
1986:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    )                                                                           \
1987:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   )
1988:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #elif defined(STM32G491xx) || defined(STM32G4A1xx)
1989:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define __LL_ADC_IS_CHANNEL_INTERNAL_AVAILABLE(__ADC_INSTANCE__, __CHANNEL__)  \
1990:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   ((((__ADC_INSTANCE__) == ADC1)                                               \
1991:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****     &&(                                                                        \
1992:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_VOPAMP1)         ||                    \
1993:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_TEMPSENSOR_ADC1) ||                    \
1994:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_VBAT)            ||                    \
1995:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_VREFINT)                               \
1996:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****       )                                                                        \
1997:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    )                                                                           \
1998:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    ||                                                                          \
1999:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    (((__ADC_INSTANCE__) == ADC2)                                               \
2000:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****     &&(                                                                        \
2001:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_VOPAMP2)         ||                    \
2002:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_VOPAMP3_ADC2)                          \
2003:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****       )                                                                        \
2004:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    )                                                                           \
2005:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    ||                                                                          \
2006:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    (((__ADC_INSTANCE__) == ADC3)                                               \
2007:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****     &&(                                                                        \
ARM GAS  /tmp/ccEuGJBQ.s 			page 55


2008:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_VOPAMP3_ADC3)    ||                    \
2009:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_VOPAMP6)         ||                    \
2010:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_VREFINT)                               \
2011:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****       )                                                                        \
2012:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    )                                                                           \
2013:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   )
2014:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #endif
2015:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
2016:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
2017:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Helper macro to define ADC analog watchdog parameter:
2018:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         define a single channel to monitor with analog watchdog
2019:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         from sequencer channel and groups definition.
2020:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   To be used with function @ref LL_ADC_SetAnalogWDMonitChannels().
2021:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Example:
2022:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           LL_ADC_SetAnalogWDMonitChannels(
2023:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             ADC1, LL_ADC_AWD1,
2024:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             __LL_ADC_ANALOGWD_CHANNEL_GROUP(LL_ADC_CHANNEL4, LL_ADC_GROUP_REGULAR))
2025:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
2026:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
2027:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1                 (8)
2028:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2                 (8)
2029:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3                 (8)
2030:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4                 (8)
2031:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5                 (8)
2032:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
2033:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
2034:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
2035:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
2036:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
2037:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
2038:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
2039:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
2040:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
2041:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
2042:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
2043:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
2044:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
2045:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT           (7)
2046:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR_ADC1   (1)
2047:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR_ADC5   (5)
2048:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT              (6)
2049:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP1           (1)
2050:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP2           (2)
2051:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP3_ADC2      (2)
2052:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP3_ADC3      (3)
2053:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP4           (5)
2054:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP5           (5)
2055:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP6           (4)
2056:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *
2057:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (1) On STM32G4, parameter available only on ADC instance: ADC1.\n
2058:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (2) On STM32G4, parameter available only on ADC instance: ADC2.\n
2059:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (3) On STM32G4, parameter available only on ADC instance: ADC3.\n
2060:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (4) On STM32G4, parameter available only on ADC instance: ADC4.\n
2061:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (5) On STM32G4, parameter available only on ADC instance: ADC5.\n
2062:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (6) On STM32G4, parameter available only on ADC instances: ADC1, ADC3, ADC5.\n
2063:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (7) On STM32G4, parameter available only on ADC instances: ADC1, ADC3, ADC4, ADC5.\n
2064:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *          -  On this STM32 series, all ADCx are not available on all devices. Refer to device da
ARM GAS  /tmp/ccEuGJBQ.s 			page 56


2065:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (8) On STM32G4, fast channel allows: 2.5 (sampling) + 12.5 (conversion) = 15 ADC clock 
2066:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             Other channels are slow channels  allows: 6.5 (sampling) + 12.5 (conversion) = 19 A
2067:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (1, 2, 3, 4, 5, 7) For ADC channel read back from ADC register,
2068:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                      comparison with internal channel parameter to be done
2069:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                      using helper macro @ref __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL().
2070:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __GROUP__ This parameter can be one of the following values:
2071:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_GROUP_REGULAR
2072:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_GROUP_INJECTED
2073:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_GROUP_REGULAR_INJECTED
2074:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2075:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_DISABLE
2076:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_REG        (0)
2077:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_INJ        (0)
2078:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_REG_INJ
2079:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_REG           (0)
2080:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_INJ           (0)
2081:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_REG_INJ
2082:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_REG           (0)
2083:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_INJ           (0)
2084:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_REG_INJ
2085:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_REG           (0)
2086:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_INJ           (0)
2087:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_REG_INJ
2088:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_REG           (0)
2089:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_INJ           (0)
2090:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_REG_INJ
2091:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_REG           (0)
2092:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_INJ           (0)
2093:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_REG_INJ
2094:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_REG           (0)
2095:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_INJ           (0)
2096:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_REG_INJ
2097:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_REG           (0)
2098:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_INJ           (0)
2099:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_REG_INJ
2100:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_REG           (0)
2101:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_INJ           (0)
2102:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_REG_INJ
2103:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_REG           (0)
2104:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_INJ           (0)
2105:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_REG_INJ
2106:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_REG           (0)
2107:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_INJ           (0)
2108:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_REG_INJ
2109:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_REG          (0)
2110:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_INJ          (0)
2111:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_REG_INJ
2112:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_REG          (0)
2113:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_INJ          (0)
2114:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_REG_INJ
2115:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_REG          (0)
2116:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_INJ          (0)
2117:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_REG_INJ
2118:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_REG          (0)
2119:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_INJ          (0)
2120:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_REG_INJ
2121:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_REG          (0)
ARM GAS  /tmp/ccEuGJBQ.s 			page 57


2122:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_INJ          (0)
2123:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_REG_INJ
2124:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_REG          (0)
2125:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_INJ          (0)
2126:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_REG_INJ
2127:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_REG          (0)
2128:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_INJ          (0)
2129:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_REG_INJ
2130:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_REG          (0)
2131:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_INJ          (0)
2132:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_REG_INJ
2133:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_REG          (0)
2134:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_INJ          (0)
2135:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_REG_INJ
2136:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VREFINT_REG          (0)
2137:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VREFINT_INJ          (0)
2138:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VREFINT_REG_INJ
2139:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_TEMPSENSOR_ADC1_REG  (0)(1)
2140:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_TEMPSENSOR_ADC1_INJ  (0)(1)
2141:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_TEMPSENSOR_ADC1_REG_INJ (1)
2142:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_TEMPSENSOR_ADC5_REG  (0)(5)
2143:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_TEMPSENSOR_ADC5_INJ  (0)(5)
2144:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_TEMPSENSOR_ADC5_REG_INJ (5)
2145:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VBAT_REG             (0)(6)
2146:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VBAT_INJ             (0)(6)
2147:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VBAT_REG_INJ            (6)
2148:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VOPAMP1_REG          (0)(1)
2149:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VOPAMP1_INJ          (0)(1)
2150:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VOPAMP1_REG_INJ         (1)
2151:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VOPAMP2_REG          (0)(2)
2152:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VOPAMP2_INJ          (0)(2)
2153:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VOPAMP2_REG_INJ         (2)
2154:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VOPAMP3_ADC2_REG     (0)(2)
2155:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VOPAMP3_ADC2_INJ     (0)(2)
2156:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VOPAMP3_ADC2_REG_INJ    (2)
2157:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VOPAMP3_ADC3_REG     (0)(3)
2158:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VOPAMP3_ADC3_INJ     (0)(3)
2159:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VOPAMP3_ADC3_REG_INJ    (3)
2160:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VOPAMP4_REG          (0)(5)
2161:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VOPAMP4_INJ          (0)(5)
2162:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VOPAMP4_REG_INJ         (5)
2163:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VOPAMP5_REG          (0)(5)
2164:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VOPAMP5_INJ          (0)(5)
2165:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VOPAMP5_REG_INJ         (5)
2166:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VOPAMP6_REG          (0)(4)
2167:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VOPAMP6_INJ          (0)(4)
2168:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VOPAMP6_REG_INJ         (4)
2169:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *
2170:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (0) On STM32G4, parameter available only on analog watchdog number: AWD1.\n
2171:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (1) On STM32G4, parameter available only on ADC instance: ADC1.\n
2172:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (2) On STM32G4, parameter available only on ADC instance: ADC2.\n
2173:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (3) On STM32G4, parameter available only on ADC instance: ADC3.\n
2174:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (4) On STM32G4, parameter available only on ADC instance: ADC4.\n
2175:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (5) On STM32G4, parameter available only on ADC instance: ADC5.\n
2176:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (6) On STM32G4, parameter available only on ADC instances: ADC1, ADC3, ADC5.\n
2177:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (7) On STM32G4, parameter available only on ADC instances: ADC1, ADC3, ADC4, ADC5.\n
2178:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *          -  On this STM32 series, all ADCx are not available on all devices. Refer to device da
ARM GAS  /tmp/ccEuGJBQ.s 			page 58


2179:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
2180:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define __LL_ADC_ANALOGWD_CHANNEL_GROUP(__CHANNEL__, __GROUP__)                                    
2181:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   (((__GROUP__) == LL_ADC_GROUP_REGULAR)                                                           
2182:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    ? (((__CHANNEL__) & ADC_CHANNEL_ID_MASK) | ADC_CFGR_AWD1EN | ADC_CFGR_AWD1SGL)                  
2183:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    :                                                                                               
2184:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    ((__GROUP__) == LL_ADC_GROUP_INJECTED)                                                          
2185:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    ? (((__CHANNEL__) & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1SGL)                 
2186:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    :                                                                                               
2187:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    (((__CHANNEL__) & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN | ADC_CFGR_AWD1SGL) 
2188:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   )
2189:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
2190:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
2191:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Helper macro to set the value of ADC analog watchdog threshold high
2192:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         or low in function of ADC resolution, when ADC resolution is
2193:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         different of 12 bits.
2194:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   To be used with function @ref LL_ADC_ConfigAnalogWDThresholds()
2195:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         or @ref LL_ADC_SetAnalogWDThresholds().
2196:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Example, with a ADC resolution of 8 bits, to set the value of
2197:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         analog watchdog threshold high (on 8 bits):
2198:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           LL_ADC_SetAnalogWDThresholds
2199:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *            (< ADCx param >,
2200:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             __LL_ADC_ANALOGWD_SET_THRESHOLD_RESOLUTION(LL_ADC_RESOLUTION_8B, <threshold_value_8
2201:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *            );
2202:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__ This parameter can be one of the following values:
2203:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2204:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2205:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2206:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
2207:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __AWD_THRESHOLD__ Value between Min_Data=0x000 and Max_Data=0xFFF
2208:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
2209:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
2210:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define __LL_ADC_ANALOGWD_SET_THRESHOLD_RESOLUTION(__ADC_RESOLUTION__, __AWD_THRESHOLD__) \
2211:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   ((__AWD_THRESHOLD__) << ((__ADC_RESOLUTION__) >> (ADC_CFGR_RES_BITOFFSET_POS - 1U )))
2212:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
2213:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
2214:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Helper macro to get the value of ADC analog watchdog threshold high
2215:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         or low in function of ADC resolution, when ADC resolution is
2216:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         different of 12 bits.
2217:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   To be used with function @ref LL_ADC_GetAnalogWDThresholds().
2218:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Example, with a ADC resolution of 8 bits, to get the value of
2219:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         analog watchdog threshold high (on 8 bits):
2220:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           < threshold_value_6_bits > = __LL_ADC_ANALOGWD_GET_THRESHOLD_RESOLUTION
2221:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *            (LL_ADC_RESOLUTION_8B,
2222:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             LL_ADC_GetAnalogWDThresholds(<ADCx param>, LL_ADC_AWD_THRESHOLD_HIGH)
2223:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *            );
2224:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__ This parameter can be one of the following values:
2225:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2226:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2227:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2228:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
2229:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __AWD_THRESHOLD_12_BITS__ Value between Min_Data=0x000 and Max_Data=0xFFF
2230:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
2231:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
2232:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define __LL_ADC_ANALOGWD_GET_THRESHOLD_RESOLUTION(__ADC_RESOLUTION__, __AWD_THRESHOLD_12_BITS__) \
2233:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   ((__AWD_THRESHOLD_12_BITS__) >> ((__ADC_RESOLUTION__) >> (ADC_CFGR_RES_BITOFFSET_POS - 1U )))
2234:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
2235:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
ARM GAS  /tmp/ccEuGJBQ.s 			page 59


2236:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Helper macro to get the ADC analog watchdog threshold high
2237:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         or low from raw value containing both thresholds concatenated.
2238:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   To be used with function @ref LL_ADC_GetAnalogWDThresholds().
2239:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Example, to get analog watchdog threshold high from the register raw value:
2240:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           __LL_ADC_ANALOGWD_THRESHOLDS_HIGH_LOW(LL_ADC_AWD_THRESHOLD_HIGH, <raw_value_with_both
2241:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __AWD_THRESHOLD_TYPE__ This parameter can be one of the following values:
2242:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_HIGH
2243:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_LOW
2244:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __AWD_THRESHOLDS__ Value between Min_Data=0x00000000 and Max_Data=0xFFFFFFFF
2245:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
2246:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
2247:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define __LL_ADC_ANALOGWD_THRESHOLDS_HIGH_LOW(__AWD_THRESHOLD_TYPE__, __AWD_THRESHOLDS__)       \
2248:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   (((__AWD_THRESHOLDS__) >> (((__AWD_THRESHOLD_TYPE__) & ADC_AWD_TRX_BIT_HIGH_MASK) >> ADC_AWD_TRX_
2249:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
2250:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
2251:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Helper macro to set the ADC calibration value with both single ended
2252:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         and differential modes calibration factors concatenated.
2253:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   To be used with function @ref LL_ADC_SetCalibrationFactor().
2254:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Example, to set calibration factors single ended to 0x55
2255:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         and differential ended to 0x2A:
2256:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           LL_ADC_SetCalibrationFactor(
2257:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             ADC1,
2258:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             __LL_ADC_CALIB_FACTOR_SINGLE_DIFF(0x55, 0x2A))
2259:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __CALIB_FACTOR_SINGLE_ENDED__ Value between Min_Data=0x00 and Max_Data=0x7F
2260:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __CALIB_FACTOR_DIFFERENTIAL__ Value between Min_Data=0x00 and Max_Data=0x7F
2261:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Value between Min_Data=0x00000000 and Max_Data=0xFFFFFFFF
2262:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
2263:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define __LL_ADC_CALIB_FACTOR_SINGLE_DIFF(__CALIB_FACTOR_SINGLE_ENDED__, __CALIB_FACTOR_DIFFERENTIA
2264:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   (((__CALIB_FACTOR_DIFFERENTIAL__) << ADC_CALFACT_CALFACT_D_Pos) | (__CALIB_FACTOR_SINGLE_ENDED__)
2265:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
2266:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #if defined(ADC_MULTIMODE_SUPPORT)
2267:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
2268:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Helper macro to get the ADC multimode conversion data of ADC master
2269:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         or ADC slave from raw value with both ADC conversion data concatenated.
2270:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   This macro is intended to be used when multimode transfer by DMA
2271:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         is enabled: refer to function @ref LL_ADC_SetMultiDMATransfer().
2272:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         In this case the transferred data need to processed with this macro
2273:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         to separate the conversion data of ADC master and ADC slave.
2274:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __ADC_MULTI_MASTER_SLAVE__ This parameter can be one of the following values:
2275:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_MASTER
2276:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_SLAVE
2277:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __ADC_MULTI_CONV_DATA__ Value between Min_Data=0x000 and Max_Data=0xFFF
2278:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
2279:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
2280:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define __LL_ADC_MULTI_CONV_DATA_MASTER_SLAVE(__ADC_MULTI_MASTER_SLAVE__, __ADC_MULTI_CONV_DATA__) 
2281:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   (((__ADC_MULTI_CONV_DATA__) >> ((ADC_CDR_RDATA_SLV_Pos) & ~(__ADC_MULTI_MASTER_SLAVE__))) & ADC_C
2282:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #endif /* ADC_MULTIMODE_SUPPORT */
2283:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
2284:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #if defined(ADC_MULTIMODE_SUPPORT)
2285:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
2286:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Helper macro to select, from a ADC instance, to which ADC instance
2287:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         it has a dependence in multimode (ADC master of the corresponding
2288:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC common instance).
2289:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   In case of device with multimode available and a mix of
2290:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC instances compliant and not compliant with multimode feature,
2291:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC instances not compliant with multimode feature are
2292:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         considered as master instances (do not depend to
ARM GAS  /tmp/ccEuGJBQ.s 			page 60


2293:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         any other ADC instance).
2294:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __ADCx__ ADC instance
2295:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval __ADCx__ ADC instance master of the corresponding ADC common instance
2296:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
2297:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #if defined(ADC5)
2298:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define __LL_ADC_MULTI_INSTANCE_MASTER(__ADCx__) \
2299:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   ( ( ((__ADCx__) == ADC2)                                                     \
2300:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****     )?                                                                         \
2301:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****     (ADC1)                                                                     \
2302:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****     :                                                                          \
2303:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****     ( ( ((__ADCx__) == ADC4)                                                   \
2304:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****       )?                                                                       \
2305:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****       (ADC3)                                                                   \
2306:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****       :                                                                        \
2307:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****       (__ADCx__)                                                               \
2308:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****     )                                                                          \
2309:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   )
2310:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #else
2311:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define __LL_ADC_MULTI_INSTANCE_MASTER(__ADCx__) \
2312:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   ( ( ((__ADCx__) == ADC2)                                                     \
2313:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****     )?                                                                         \
2314:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****     (ADC1)                                                                     \
2315:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****     :                                                                          \
2316:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****     (__ADCx__)                                                                 \
2317:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   )
2318:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #endif /* ADC5 */
2319:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #endif /* ADC_MULTIMODE_SUPPORT */
2320:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
2321:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
2322:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Helper macro to select the ADC common instance
2323:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         to which is belonging the selected ADC instance.
2324:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   ADC common register instance can be used for:
2325:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - Set parameters common to several ADC instances
2326:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - Multimode (for devices with several ADC instances)
2327:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Refer to functions having argument "ADCxy_COMMON" as parameter.
2328:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __ADCx__ ADC instance
2329:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval ADC common register instance
2330:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
2331:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #if defined(ADC345_COMMON)
2332:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define __LL_ADC_COMMON_INSTANCE(__ADCx__)                                     \
2333:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   ((((__ADCx__) == ADC1) || ((__ADCx__) == ADC2))                              \
2334:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****     ? (                                                                        \
2335:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        (ADC12_COMMON)                                                          \
2336:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****       )                                                                        \
2337:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****       :                                                                        \
2338:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****       (                                                                        \
2339:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        (ADC345_COMMON)                                                         \
2340:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****       )                                                                        \
2341:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   )
2342:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #else
2343:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define __LL_ADC_COMMON_INSTANCE(__ADCx__)  (ADC12_COMMON)
2344:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #endif /* ADC345_COMMON */
2345:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
2346:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Helper macro to check if all ADC instances sharing the same
2347:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC common instance are disabled.
2348:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   This check is required by functions with setting conditioned to
2349:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
ARM GAS  /tmp/ccEuGJBQ.s 			page 61


2350:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         All ADC instances of the ADC common group must be disabled.
2351:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Refer to functions having argument "ADCxy_COMMON" as parameter.
2352:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On devices with only 1 ADC common instance, parameter of this macro
2353:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         is useless and can be ignored (parameter kept for compatibility
2354:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         with devices featuring several ADC common instances).
2355:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __ADCXY_COMMON__ ADC common instance
2356:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
2357:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Value "0" if all ADC instances sharing the same ADC common instance
2358:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         are disabled.
2359:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Value "1" if at least one ADC instance sharing the same ADC common instance
2360:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         is enabled.
2361:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
2362:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #if defined(ADC345_COMMON)
2363:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #if defined(ADC4) &&  defined(ADC5)
2364:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define __LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE(__ADCXY_COMMON__)              \
2365:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   (((__ADCXY_COMMON__) == ADC12_COMMON)                                        \
2366:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****     ? (                                                                        \
2367:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        (LL_ADC_IsEnabled(ADC1) |                                               \
2368:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****         LL_ADC_IsEnabled(ADC2)  )                                              \
2369:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****       )                                                                        \
2370:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****       :                                                                        \
2371:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****       (                                                                        \
2372:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        (LL_ADC_IsEnabled(ADC3) |                                               \
2373:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****         LL_ADC_IsEnabled(ADC4) |                                               \
2374:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****         LL_ADC_IsEnabled(ADC5)  )                                              \
2375:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****       )                                                                        \
2376:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   )
2377:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #else
2378:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define __LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE(__ADCXY_COMMON__)              \
2379:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   (((__ADCXY_COMMON__) == ADC12_COMMON)                                        \
2380:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****     ? (                                                                        \
2381:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        (LL_ADC_IsEnabled(ADC1) |                                               \
2382:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****         LL_ADC_IsEnabled(ADC2)  )                                              \
2383:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****       )                                                                        \
2384:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****       :                                                                        \
2385:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****       (LL_ADC_IsEnabled(ADC3))                                                 \
2386:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   )
2387:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #endif /* ADC4 && ADC5 */
2388:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #else
2389:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define __LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE(__ADCXY_COMMON__)              \
2390:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   (LL_ADC_IsEnabled(ADC1) | LL_ADC_IsEnabled(ADC2))
2391:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #endif
2392:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
2393:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
2394:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Helper macro to define the ADC conversion data full-scale digital
2395:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         value corresponding to the selected ADC resolution.
2396:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   ADC conversion data full-scale corresponds to voltage range
2397:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         determined by analog voltage references Vref+ and Vref-
2398:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (refer to reference manual).
2399:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__ This parameter can be one of the following values:
2400:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2401:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2402:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2403:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
2404:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval ADC conversion data full-scale digital value (unit: digital value of ADC conversion dat
2405:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
2406:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define __LL_ADC_DIGITAL_SCALE(__ADC_RESOLUTION__)                             \
ARM GAS  /tmp/ccEuGJBQ.s 			page 62


2407:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   (0xFFFUL >> ((__ADC_RESOLUTION__) >> (ADC_CFGR_RES_BITOFFSET_POS - 1UL)))
2408:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
2409:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
2410:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Helper macro to convert the ADC conversion data from
2411:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         a resolution to another resolution.
2412:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __DATA__ ADC conversion data to be converted
2413:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __ADC_RESOLUTION_CURRENT__ Resolution of the data to be converted
2414:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         This parameter can be one of the following values:
2415:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2416:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2417:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2418:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
2419:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __ADC_RESOLUTION_TARGET__ Resolution of the data after conversion
2420:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         This parameter can be one of the following values:
2421:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2422:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2423:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2424:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
2425:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval ADC conversion data to the requested resolution
2426:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
2427:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define __LL_ADC_CONVERT_DATA_RESOLUTION(__DATA__,\
2428:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                          __ADC_RESOLUTION_CURRENT__,\
2429:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                          __ADC_RESOLUTION_TARGET__)          \
2430:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** (((__DATA__)                                                                 \
2431:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   << ((__ADC_RESOLUTION_CURRENT__) >> (ADC_CFGR_RES_BITOFFSET_POS - 1UL)))   \
2432:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****  >> ((__ADC_RESOLUTION_TARGET__) >> (ADC_CFGR_RES_BITOFFSET_POS - 1UL))      \
2433:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** )
2434:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
2435:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
2436:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Helper macro to calculate the voltage (unit: mVolt)
2437:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         corresponding to a ADC conversion data (unit: digital value).
2438:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Analog reference voltage (Vref+) must be either known from
2439:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         user board environment or can be calculated using ADC measurement
2440:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         and ADC helper macro @ref __LL_ADC_CALC_VREFANALOG_VOLTAGE().
2441:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __VREFANALOG_VOLTAGE__ Analog reference voltage (unit: mV)
2442:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __ADC_DATA__ ADC conversion data (resolution 12 bits)
2443:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                       (unit: digital value).
2444:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__ This parameter can be one of the following values:
2445:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2446:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2447:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2448:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
2449:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval ADC conversion data equivalent voltage value (unit: mVolt)
2450:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
2451:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define __LL_ADC_CALC_DATA_TO_VOLTAGE(__VREFANALOG_VOLTAGE__,\
2452:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                       __ADC_DATA__,\
2453:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                       __ADC_RESOLUTION__)                    \
2454:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** ((__ADC_DATA__) * (__VREFANALOG_VOLTAGE__)                                   \
2455:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****  / __LL_ADC_DIGITAL_SCALE(__ADC_RESOLUTION__)                                \
2456:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** )
2457:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
2458:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
2459:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Helper macro to calculate analog reference voltage (Vref+)
2460:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (unit: mVolt) from ADC conversion data of internal voltage
2461:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         reference VrefInt.
2462:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Computation is using VrefInt calibration value
2463:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         stored in system memory for each device during production.
ARM GAS  /tmp/ccEuGJBQ.s 			page 63


2464:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   This voltage depends on user board environment: voltage level
2465:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         connected to pin Vref+.
2466:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         On devices with small package, the pin Vref+ is not present
2467:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         and internally bonded to pin Vdda.
2468:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, calibration data of internal voltage reference
2469:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         VrefInt corresponds to a resolution of 12 bits,
2470:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         this is the recommended ADC resolution to convert voltage of
2471:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         internal voltage reference VrefInt.
2472:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Otherwise, this macro performs the processing to scale
2473:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC conversion data to 12 bits.
2474:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __VREFINT_ADC_DATA__ ADC conversion data (resolution 12 bits)
2475:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         of internal voltage reference VrefInt (unit: digital value).
2476:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__ This parameter can be one of the following values:
2477:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2478:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2479:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2480:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
2481:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Analog reference voltage (unit: mV)
2482:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
2483:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define __LL_ADC_CALC_VREFANALOG_VOLTAGE(__VREFINT_ADC_DATA__,\
2484:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                          __ADC_RESOLUTION__)                 \
2485:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** (((uint32_t)(*VREFINT_CAL_ADDR) * VREFINT_CAL_VREF)                          \
2486:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****  / __LL_ADC_CONVERT_DATA_RESOLUTION((__VREFINT_ADC_DATA__),                  \
2487:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                     (__ADC_RESOLUTION__),                    \
2488:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                     LL_ADC_RESOLUTION_12B)                   \
2489:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** )
2490:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
2491:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
2492:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Helper macro to calculate the temperature (unit: degree Celsius)
2493:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         from ADC conversion data of internal temperature sensor.
2494:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Computation is using temperature sensor calibration values
2495:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         stored in system memory for each device during production.
2496:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Calculation formula:
2497:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           Temperature = ((TS_ADC_DATA - TS_CAL1)
2498:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                           * (TS_CAL2_TEMP - TS_CAL1_TEMP))
2499:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                         / (TS_CAL2 - TS_CAL1) + TS_CAL1_TEMP
2500:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           with TS_ADC_DATA = temperature sensor raw data measured by ADC
2501:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                Avg_Slope = (TS_CAL2 - TS_CAL1)
2502:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                            / (TS_CAL2_TEMP - TS_CAL1_TEMP)
2503:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                TS_CAL1   = equivalent TS_ADC_DATA at temperature
2504:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                            TEMP_DEGC_CAL1 (calibrated in factory)
2505:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                TS_CAL2   = equivalent TS_ADC_DATA at temperature
2506:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                            TEMP_DEGC_CAL2 (calibrated in factory)
2507:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Caution: Calculation relevancy under reserve that calibration
2508:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                  parameters are correct (address and data).
2509:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                  To calculate temperature using temperature sensor
2510:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                  datasheet typical values (generic values less, therefore
2511:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                  less accurate than calibrated values),
2512:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                  use helper macro @ref __LL_ADC_CALC_TEMPERATURE_TYP_PARAMS().
2513:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   As calculation input, the analog reference voltage (Vref+) must be
2514:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         defined as it impacts the ADC LSB equivalent voltage.
2515:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Analog reference voltage (Vref+) must be either known from
2516:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         user board environment or can be calculated using ADC measurement
2517:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         and ADC helper macro @ref __LL_ADC_CALC_VREFANALOG_VOLTAGE().
2518:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, calibration data of temperature sensor
2519:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         corresponds to a resolution of 12 bits,
2520:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         this is the recommended ADC resolution to convert voltage of
ARM GAS  /tmp/ccEuGJBQ.s 			page 64


2521:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         temperature sensor.
2522:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Otherwise, this macro performs the processing to scale
2523:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC conversion data to 12 bits.
2524:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __VREFANALOG_VOLTAGE__  Analog reference voltage (unit: mV)
2525:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __TEMPSENSOR_ADC_DATA__ ADC conversion data of internal
2526:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                                 temperature sensor (unit: digital value).
2527:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__      ADC resolution at which internal temperature
2528:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                                 sensor voltage has been measured.
2529:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         This parameter can be one of the following values:
2530:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2531:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2532:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2533:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
2534:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Temperature (unit: degree Celsius)
2535:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
2536:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define __LL_ADC_CALC_TEMPERATURE(__VREFANALOG_VOLTAGE__,\
2537:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                   __TEMPSENSOR_ADC_DATA__,\
2538:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                   __ADC_RESOLUTION__)                            \
2539:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** (((( ((int32_t)((__LL_ADC_CONVERT_DATA_RESOLUTION((__TEMPSENSOR_ADC_DATA__),     \
2540:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                                   (__ADC_RESOLUTION__),          \
2541:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                                   LL_ADC_RESOLUTION_12B)         \
2542:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                  * (__VREFANALOG_VOLTAGE__))                                     \
2543:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                 / TEMPSENSOR_CAL_VREFANALOG)                                     \
2544:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****       - (int32_t) *TEMPSENSOR_CAL1_ADDR)                                         \
2545:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    ) * (int32_t)(TEMPSENSOR_CAL2_TEMP - TEMPSENSOR_CAL1_TEMP)                    \
2546:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   ) / (int32_t)((int32_t)*TEMPSENSOR_CAL2_ADDR - (int32_t)*TEMPSENSOR_CAL1_ADDR) \
2547:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****  ) + TEMPSENSOR_CAL1_TEMP                                                        \
2548:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** )
2549:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
2550:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
2551:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Helper macro to calculate the temperature (unit: degree Celsius)
2552:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         from ADC conversion data of internal temperature sensor.
2553:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Computation is using temperature sensor typical values
2554:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (refer to device datasheet).
2555:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Calculation formula:
2556:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           Temperature = (TS_TYP_CALx_VOLT(uV) - TS_ADC_DATA * Conversion_uV)
2557:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                         / Avg_Slope + CALx_TEMP
2558:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           with TS_ADC_DATA      = temperature sensor raw data measured by ADC
2559:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                                   (unit: digital value)
2560:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                Avg_Slope        = temperature sensor slope
2561:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                                   (unit: uV/Degree Celsius)
2562:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                TS_TYP_CALx_VOLT = temperature sensor digital value at
2563:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                                   temperature CALx_TEMP (unit: mV)
2564:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Caution: Calculation relevancy under reserve the temperature sensor
2565:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                  of the current device has characteristics in line with
2566:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                  datasheet typical values.
2567:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                  If temperature sensor calibration values are available on
2568:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                  on this device (presence of macro __LL_ADC_CALC_TEMPERATURE()),
2569:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                  temperature calculation will be more accurate using
2570:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                  helper macro @ref __LL_ADC_CALC_TEMPERATURE().
2571:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   As calculation input, the analog reference voltage (Vref+) must be
2572:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         defined as it impacts the ADC LSB equivalent voltage.
2573:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Analog reference voltage (Vref+) must be either known from
2574:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         user board environment or can be calculated using ADC measurement
2575:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         and ADC helper macro @ref __LL_ADC_CALC_VREFANALOG_VOLTAGE().
2576:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   ADC measurement data must correspond to a resolution of 12 bits
2577:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (full scale digital value 4095). If not the case, the data must be
ARM GAS  /tmp/ccEuGJBQ.s 			page 65


2578:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         preliminarily rescaled to an equivalent resolution of 12 bits.
2579:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __TEMPSENSOR_TYP_AVGSLOPE__   Device datasheet data: Temperature sensor slope typical v
2580:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                                       On STM32G4, refer to device datasheet parameter "Avg_Slop
2581:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __TEMPSENSOR_TYP_CALX_V__     Device datasheet data: Temperature sensor voltage typical
2582:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                                       On STM32G4, refer to device datasheet parameter "V30" (co
2583:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __TEMPSENSOR_CALX_TEMP__      Device datasheet data: Temperature at which temperature s
2584:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __VREFANALOG_VOLTAGE__        Analog voltage reference (Vref+) voltage (unit: mV)
2585:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __TEMPSENSOR_ADC_DATA__       ADC conversion data of internal temperature sensor (unit:
2586:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__            ADC resolution at which internal temperature sensor volta
2587:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         This parameter can be one of the following values:
2588:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2589:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2590:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2591:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
2592:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Temperature (unit: degree Celsius)
2593:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
2594:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define __LL_ADC_CALC_TEMPERATURE_TYP_PARAMS(__TEMPSENSOR_TYP_AVGSLOPE__,\
2595:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              __TEMPSENSOR_TYP_CALX_V__,\
2596:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              __TEMPSENSOR_CALX_TEMP__,\
2597:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              __VREFANALOG_VOLTAGE__,\
2598:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              __TEMPSENSOR_ADC_DATA__,\
2599:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              __ADC_RESOLUTION__)            \
2600:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** (((((int32_t)((((__TEMPSENSOR_ADC_DATA__) * (__VREFANALOG_VOLTAGE__))       \
2601:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                / __LL_ADC_DIGITAL_SCALE(__ADC_RESOLUTION__))                \
2602:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****               * 1000UL)                                                     \
2603:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****     -                                                                       \
2604:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****     (int32_t)(((__TEMPSENSOR_TYP_CALX_V__))                                 \
2605:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****               * 1000UL)                                                     \
2606:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    )                                                                        \
2607:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   ) / (int32_t)(__TEMPSENSOR_TYP_AVGSLOPE__)                                \
2608:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****  ) + (int32_t)(__TEMPSENSOR_CALX_TEMP__)                                    \
2609:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** )
2610:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
2611:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
2612:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
2613:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
2614:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
2615:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
2616:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
2617:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
2618:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
2619:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
2620:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Exported functions --------------------------------------------------------*/
2621:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_Exported_Functions ADC Exported Functions
2622:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
2623:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
2624:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
2625:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EF_DMA_Management ADC DMA management
2626:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
2627:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
2628:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Note: LL ADC functions to set DMA transfer are located into sections of    */
2629:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /*       configuration of ADC instance, groups and multimode (if available):  */
2630:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /*       @ref LL_ADC_REG_SetDMATransfer(), ...                                */
2631:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
2632:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
2633:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Function to help to configure DMA transfer from ADC: retrieve the
2634:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC register address from ADC instance and a list of ADC registers
ARM GAS  /tmp/ccEuGJBQ.s 			page 66


2635:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         intended to be used (most commonly) with DMA transfer.
2636:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   These ADC registers are data registers:
2637:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         when ADC conversion data is available in ADC data registers,
2638:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC generates a DMA transfer request.
2639:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   This macro is intended to be used with LL DMA driver, refer to
2640:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         function "LL_DMA_ConfigAddresses()".
2641:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Example:
2642:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           LL_DMA_ConfigAddresses(DMA1,
2643:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                                  LL_DMA_CHANNEL_1,
2644:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                                  LL_ADC_DMA_GetRegAddr(ADC1, LL_ADC_DMA_REG_REGULAR_DATA),
2645:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                                  (uint32_t)&< array or variable >,
2646:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                                  LL_DMA_DIRECTION_PERIPH_TO_MEMORY);
2647:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   For devices with several ADC: in multimode, some devices
2648:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         use a different data register outside of ADC instance scope
2649:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (common data register). This macro manages this register difference,
2650:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         only ADC instance has to be set as parameter.
2651:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll DR       RDATA          LL_ADC_DMA_GetRegAddr\n
2652:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         CDR      RDATA_MST      LL_ADC_DMA_GetRegAddr\n
2653:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         CDR      RDATA_SLV      LL_ADC_DMA_GetRegAddr
2654:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
2655:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  Register This parameter can be one of the following values:
2656:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_DMA_REG_REGULAR_DATA
2657:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_DMA_REG_REGULAR_DATA_MULTI (1)
2658:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *
2659:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (1) Available on devices with several ADC instances.
2660:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval ADC register address
2661:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
2662:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #if defined(ADC_MULTIMODE_SUPPORT)
2663:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_DMA_GetRegAddr(ADC_TypeDef *ADCx, uint32_t Register)
2664:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
2665:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   uint32_t data_reg_addr;
2666:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
2667:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   if (Register == LL_ADC_DMA_REG_REGULAR_DATA)
2668:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   {
2669:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****     /* Retrieve address of register DR */
2670:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****     data_reg_addr = (uint32_t) &(ADCx->DR);
2671:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   }
2672:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   else /* (Register == LL_ADC_DMA_REG_REGULAR_DATA_MULTI) */
2673:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   {
2674:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****     /* Retrieve address of register CDR */
2675:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****     data_reg_addr = (uint32_t) &((__LL_ADC_COMMON_INSTANCE(ADCx))->CDR);
2676:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   }
2677:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
2678:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return data_reg_addr;
2679:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
2680:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #else
2681:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_DMA_GetRegAddr(ADC_TypeDef *ADCx, uint32_t Register)
2682:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
2683:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* Prevent unused argument(s) compilation warning */
2684:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   (void)(Register);
2685:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
2686:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* Retrieve address of register DR */
2687:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint32_t) &(ADCx->DR);
2688:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
2689:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #endif /* ADC_MULTIMODE_SUPPORT */
2690:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
2691:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
ARM GAS  /tmp/ccEuGJBQ.s 			page 67


2692:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
2693:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
2694:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
2695:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_Common Configuration of ADC hierarchical scope: common to
2696:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
2697:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
2698:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
2699:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
2700:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Set parameter common to several ADC: Clock source and prescaler.
2701:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, if ADC group injected is used, some
2702:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         clock ratio constraints between ADC clock and AHB clock
2703:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         must be respected.
2704:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Refer to reference manual.
2705:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2706:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
2707:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         All ADC instances of the ADC common group must be disabled.
2708:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         This check can be done with function @ref LL_ADC_IsEnabled() for each
2709:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC instance or by using helper macro helper macro
2710:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @ref __LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE().
2711:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CCR      CKMODE         LL_ADC_SetCommonClock\n
2712:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         CCR      PRESC          LL_ADC_SetCommonClock
2713:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
2714:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
2715:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  CommonClock This parameter can be one of the following values:
2716:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV1
2717:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV2
2718:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV4
2719:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV1
2720:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV2
2721:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV4
2722:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV6
2723:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV8
2724:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV10
2725:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV12
2726:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV16
2727:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV32
2728:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV64
2729:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV128
2730:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV256
2731:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
2732:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
2733:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetCommonClock(ADC_Common_TypeDef *ADCxy_COMMON, uint32_t CommonClock)
2734:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
2735:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(ADCxy_COMMON->CCR, ADC_CCR_CKMODE | ADC_CCR_PRESC, CommonClock);
2736:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
2737:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
2738:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
2739:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get parameter common to several ADC: Clock source and prescaler.
2740:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CCR      CKMODE         LL_ADC_GetCommonClock\n
2741:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         CCR      PRESC          LL_ADC_GetCommonClock
2742:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
2743:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
2744:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2745:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV1
2746:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV2
2747:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV4
2748:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV1
ARM GAS  /tmp/ccEuGJBQ.s 			page 68


2749:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV2
2750:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV4
2751:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV6
2752:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV8
2753:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV10
2754:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV12
2755:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV16
2756:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV32
2757:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV64
2758:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV128
2759:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV256
2760:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
2761:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetCommonClock(ADC_Common_TypeDef *ADCxy_COMMON)
2762:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
2763:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCxy_COMMON->CCR, ADC_CCR_CKMODE | ADC_CCR_PRESC));
2764:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
2765:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
2766:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
2767:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Set parameter common to several ADC: measurement path to
2768:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         internal channels (VrefInt, temperature sensor, ...).
2769:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Configure all paths (overwrite current configuration).
2770:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   One or several values can be selected.
2771:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Example: (LL_ADC_PATH_INTERNAL_VREFINT |
2772:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                   LL_ADC_PATH_INTERNAL_TEMPSENSOR)
2773:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         The values not selected are removed from configuration.
2774:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Stabilization time of measurement path to internal channel:
2775:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         After enabling internal paths, before starting ADC conversion,
2776:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         a delay is required for internal voltage reference and
2777:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         temperature sensor stabilization time.
2778:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Refer to device datasheet.
2779:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Refer to literal @ref LL_ADC_DELAY_VREFINT_STAB_US.
2780:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Refer to literal @ref LL_ADC_DELAY_TEMPSENSOR_STAB_US.
2781:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   ADC internal channel sampling time constraint:
2782:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         For ADC conversion of internal channels,
2783:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         a sampling time minimum value is required.
2784:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Refer to device datasheet.
2785:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CCR      VREFEN         LL_ADC_SetCommonPathInternalCh\n
2786:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         CCR      VSENSESEL      LL_ADC_SetCommonPathInternalCh\n
2787:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         CCR      VBATSEL        LL_ADC_SetCommonPathInternalCh
2788:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
2789:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
2790:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  PathInternal This parameter can be a combination of the following values:
2791:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_NONE
2792:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VREFINT
2793:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_TEMPSENSOR
2794:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VBAT
2795:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
2796:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
2797:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetCommonPathInternalCh(ADC_Common_TypeDef *ADCxy_COMMON, uint32_t Path
2798:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
2799:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(ADCxy_COMMON->CCR, ADC_CCR_VREFEN | ADC_CCR_VSENSESEL | ADC_CCR_VBATSEL, PathInternal)
2800:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
2801:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
2802:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
2803:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Set parameter common to several ADC: measurement path to
2804:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         internal channels (VrefInt, temperature sensor, ...).
2805:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Add paths to the current configuration.
ARM GAS  /tmp/ccEuGJBQ.s 			page 69


2806:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   One or several values can be selected.
2807:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Example: (LL_ADC_PATH_INTERNAL_VREFINT |
2808:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                   LL_ADC_PATH_INTERNAL_TEMPSENSOR)
2809:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Stabilization time of measurement path to internal channel:
2810:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         After enabling internal paths, before starting ADC conversion,
2811:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         a delay is required for internal voltage reference and
2812:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         temperature sensor stabilization time.
2813:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Refer to device datasheet.
2814:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Refer to literal @ref LL_ADC_DELAY_VREFINT_STAB_US.
2815:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Refer to literal @ref LL_ADC_DELAY_TEMPSENSOR_STAB_US.
2816:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   ADC internal channel sampling time constraint:
2817:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         For ADC conversion of internal channels,
2818:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         a sampling time minimum value is required.
2819:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Refer to device datasheet.
2820:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CCR      VREFEN         LL_ADC_SetCommonPathInternalChAdd\n
2821:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         CCR      VSENSESEL      LL_ADC_SetCommonPathInternalChAdd\n
2822:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         CCR      VBATSEL        LL_ADC_SetCommonPathInternalChAdd
2823:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
2824:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
2825:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  PathInternal This parameter can be a combination of the following values:
2826:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_NONE
2827:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VREFINT
2828:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_TEMPSENSOR
2829:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VBAT
2830:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
2831:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
2832:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetCommonPathInternalChAdd(ADC_Common_TypeDef *ADCxy_COMMON, uint32_t P
2833:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
2834:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   SET_BIT(ADCxy_COMMON->CCR, PathInternal);
2835:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
2836:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
2837:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
2838:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Set parameter common to several ADC: measurement path to
2839:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         internal channels (VrefInt, temperature sensor, ...).
2840:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Remove paths to the current configuration.
2841:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   One or several values can be selected.
2842:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Example: (LL_ADC_PATH_INTERNAL_VREFINT |
2843:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                   LL_ADC_PATH_INTERNAL_TEMPSENSOR)
2844:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CCR      VREFEN         LL_ADC_SetCommonPathInternalChRem\n
2845:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         CCR      VSENSESEL      LL_ADC_SetCommonPathInternalChRem\n
2846:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         CCR      VBATSEL        LL_ADC_SetCommonPathInternalChRem
2847:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
2848:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
2849:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  PathInternal This parameter can be a combination of the following values:
2850:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_NONE
2851:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VREFINT
2852:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_TEMPSENSOR
2853:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VBAT
2854:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
2855:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
2856:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetCommonPathInternalChRem(ADC_Common_TypeDef *ADCxy_COMMON, uint32_t P
2857:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
2858:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   CLEAR_BIT(ADCxy_COMMON->CCR, PathInternal);
2859:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
2860:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
2861:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
2862:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get parameter common to several ADC: measurement path to internal
ARM GAS  /tmp/ccEuGJBQ.s 			page 70


2863:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         channels (VrefInt, temperature sensor, ...).
2864:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   One or several values can be selected.
2865:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Example: (LL_ADC_PATH_INTERNAL_VREFINT |
2866:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                   LL_ADC_PATH_INTERNAL_TEMPSENSOR)
2867:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CCR      VREFEN         LL_ADC_GetCommonPathInternalCh\n
2868:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         CCR      VSENSESEL      LL_ADC_GetCommonPathInternalCh\n
2869:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         CCR      VBATSEL        LL_ADC_GetCommonPathInternalCh
2870:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
2871:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
2872:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Returned value can be a combination of the following values:
2873:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_NONE
2874:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VREFINT
2875:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_TEMPSENSOR
2876:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VBAT
2877:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
2878:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetCommonPathInternalCh(ADC_Common_TypeDef *ADCxy_COMMON)
2879:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
2880:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCxy_COMMON->CCR, ADC_CCR_VREFEN | ADC_CCR_VSENSESEL | ADC_CCR_VBATSE
2881:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
2882:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
2883:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
2884:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
2885:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
2886:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
2887:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_Instance Configuration of ADC hierarchical scope: ADC ins
2888:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
2889:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
2890:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
2891:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
2892:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Set ADC calibration factor in the mode single-ended
2893:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         or differential (for devices with differential mode available).
2894:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   This function is intended to set calibration parameters
2895:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         without having to perform a new calibration using
2896:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @ref LL_ADC_StartCalibration().
2897:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   For devices with differential mode available:
2898:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Calibration of offset is specific to each of
2899:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         single-ended and differential modes
2900:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (calibration factor must be specified for each of these
2901:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         differential modes, if used afterwards and if the application
2902:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         requires their calibration).
2903:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   In case of setting calibration factors of both modes single ended
2904:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         and differential (parameter LL_ADC_BOTH_SINGLE_DIFF_ENDED):
2905:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         both calibration factors must be concatenated.
2906:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         To perform this processing, use helper macro
2907:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @ref __LL_ADC_CALIB_FACTOR_SINGLE_DIFF().
2908:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2909:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
2910:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must be enabled, without calibration on going, without conversion
2911:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         on going on group regular.
2912:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CALFACT  CALFACT_S      LL_ADC_SetCalibrationFactor\n
2913:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         CALFACT  CALFACT_D      LL_ADC_SetCalibrationFactor
2914:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
2915:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  SingleDiff This parameter can be one of the following values:
2916:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SINGLE_ENDED
2917:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_DIFFERENTIAL_ENDED
2918:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_BOTH_SINGLE_DIFF_ENDED
2919:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  CalibrationFactor Value between Min_Data=0x00 and Max_Data=0x7F
ARM GAS  /tmp/ccEuGJBQ.s 			page 71


2920:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
2921:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
2922:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetCalibrationFactor(ADC_TypeDef *ADCx, uint32_t SingleDiff, uint32_t C
2923:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
2924:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(ADCx->CALFACT,
2925:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              SingleDiff & ADC_SINGLEDIFF_CALIB_FACTOR_MASK,
2926:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              CalibrationFactor << (((SingleDiff & ADC_SINGLEDIFF_CALIB_F_BIT_D_MASK) >> ADC_SINGLED
2927:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
2928:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
2929:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
2930:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC calibration factor in the mode single-ended
2931:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         or differential (for devices with differential mode available).
2932:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Calibration factors are set by hardware after performing
2933:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         a calibration run using function @ref LL_ADC_StartCalibration().
2934:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   For devices with differential mode available:
2935:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Calibration of offset is specific to each of
2936:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         single-ended and differential modes
2937:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CALFACT  CALFACT_S      LL_ADC_GetCalibrationFactor\n
2938:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         CALFACT  CALFACT_D      LL_ADC_GetCalibrationFactor
2939:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
2940:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  SingleDiff This parameter can be one of the following values:
2941:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SINGLE_ENDED
2942:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_DIFFERENTIAL_ENDED
2943:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0x7F
2944:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
2945:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetCalibrationFactor(ADC_TypeDef *ADCx, uint32_t SingleDiff)
2946:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
2947:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* Retrieve bits with position in register depending on parameter           */
2948:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* "SingleDiff".                                                            */
2949:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* Parameter used with mask "ADC_SINGLEDIFF_CALIB_FACTOR_MASK" because      */
2950:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* containing other bits reserved for other purpose.                        */
2951:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CALFACT,
2952:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                              (SingleDiff & ADC_SINGLEDIFF_CALIB_FACTOR_MASK)) >> ((SingleDiff & ADC
2953:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                                                                   ADC_SINGLEDIFF_CA
2954:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
2955:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
2956:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
2957:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Set ADC resolution.
2958:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Refer to reference manual for alignments formats
2959:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         dependencies to ADC resolutions.
2960:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2961:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
2962:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
2963:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         on either groups regular or injected.
2964:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CFGR     RES            LL_ADC_SetResolution
2965:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
2966:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  Resolution This parameter can be one of the following values:
2967:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2968:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2969:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2970:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
2971:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
2972:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
2973:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetResolution(ADC_TypeDef *ADCx, uint32_t Resolution)
2974:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
2975:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_RES, Resolution);
2976:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
ARM GAS  /tmp/ccEuGJBQ.s 			page 72


2977:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
2978:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
2979:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC resolution.
2980:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Refer to reference manual for alignments formats
2981:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         dependencies to ADC resolutions.
2982:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CFGR     RES            LL_ADC_GetResolution
2983:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
2984:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2985:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2986:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2987:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2988:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
2989:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
2990:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetResolution(ADC_TypeDef *ADCx)
2991:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
2992:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_RES));
2993:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
2994:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
2995:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
2996:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Set ADC conversion data alignment.
2997:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Refer to reference manual for alignments formats
2998:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         dependencies to ADC resolutions.
2999:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3000:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
3001:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3002:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         on either groups regular or injected.
3003:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CFGR     ALIGN          LL_ADC_SetDataAlignment
3004:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
3005:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  DataAlignment This parameter can be one of the following values:
3006:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_DATA_ALIGN_RIGHT
3007:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_DATA_ALIGN_LEFT
3008:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
3009:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
3010:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetDataAlignment(ADC_TypeDef *ADCx, uint32_t DataAlignment)
3011:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
3012:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_ALIGN, DataAlignment);
3013:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
3014:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
3015:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
3016:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC conversion data alignment.
3017:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Refer to reference manual for alignments formats
3018:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         dependencies to ADC resolutions.
3019:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CFGR     ALIGN          LL_ADC_GetDataAlignment
3020:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
3021:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3022:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_DATA_ALIGN_RIGHT
3023:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_DATA_ALIGN_LEFT
3024:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
3025:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetDataAlignment(ADC_TypeDef *ADCx)
3026:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
3027:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_ALIGN));
3028:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
3029:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
3030:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
3031:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Set ADC low power mode.
3032:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Description of ADC low power modes:
3033:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - ADC low power mode "auto wait": Dynamic low power mode,
ARM GAS  /tmp/ccEuGJBQ.s 			page 73


3034:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           ADC conversions occurrences are limited to the minimum necessary
3035:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           in order to reduce power consumption.
3036:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           New ADC conversion starts only when the previous
3037:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           unitary conversion data (for ADC group regular)
3038:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           or previous sequence conversions data (for ADC group injected)
3039:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           has been retrieved by user software.
3040:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           In the meantime, ADC remains idle: does not performs any
3041:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           other conversion.
3042:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           This mode allows to automatically adapt the ADC conversions
3043:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           triggers to the speed of the software that reads the data.
3044:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           Moreover, this avoids risk of overrun for low frequency
3045:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           applications.
3046:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           How to use this low power mode:
3047:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           - It is not recommended to use with interruption or DMA
3048:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             since these modes have to clear immediately the EOC flag
3049:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             (by CPU to free the IRQ pending event or by DMA).
3050:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             Auto wait will work but fort a very short time, discarding
3051:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             its intended benefit (except specific case of high load of CPU
3052:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             or DMA transfers which can justify usage of auto wait).
3053:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           - Do use with polling: 1. Start conversion,
3054:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             2. Later on, when conversion data is needed: poll for end of
3055:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             conversion  to ensure that conversion is completed and
3056:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             retrieve ADC conversion data. This will trig another
3057:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             ADC conversion start.
3058:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - ADC low power mode "auto power-off" (feature available on
3059:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           this device if parameter LL_ADC_LP_AUTOPOWEROFF is available):
3060:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           the ADC automatically powers-off after a conversion and
3061:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           automatically wakes up when a new conversion is triggered
3062:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           (with startup time between trigger and start of sampling).
3063:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           This feature can be combined with low power mode "auto wait".
3064:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   With ADC low power mode "auto wait", the ADC conversion data read
3065:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         is corresponding to previous ADC conversion start, independently
3066:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         of delay during which ADC was idle.
3067:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Therefore, the ADC conversion data may be outdated: does not
3068:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         correspond to the current voltage level on the selected
3069:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC channel.
3070:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3071:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
3072:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3073:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         on either groups regular or injected.
3074:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CFGR     AUTDLY         LL_ADC_SetLowPowerMode
3075:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
3076:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  LowPowerMode This parameter can be one of the following values:
3077:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_MODE_NONE
3078:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_AUTOWAIT
3079:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
3080:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
3081:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetLowPowerMode(ADC_TypeDef *ADCx, uint32_t LowPowerMode)
3082:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
3083:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_AUTDLY, LowPowerMode);
3084:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
3085:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
3086:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
3087:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC low power mode:
3088:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Description of ADC low power modes:
3089:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - ADC low power mode "auto wait": Dynamic low power mode,
3090:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           ADC conversions occurrences are limited to the minimum necessary
ARM GAS  /tmp/ccEuGJBQ.s 			page 74


3091:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           in order to reduce power consumption.
3092:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           New ADC conversion starts only when the previous
3093:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           unitary conversion data (for ADC group regular)
3094:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           or previous sequence conversions data (for ADC group injected)
3095:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           has been retrieved by user software.
3096:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           In the meantime, ADC remains idle: does not performs any
3097:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           other conversion.
3098:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           This mode allows to automatically adapt the ADC conversions
3099:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           triggers to the speed of the software that reads the data.
3100:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           Moreover, this avoids risk of overrun for low frequency
3101:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           applications.
3102:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           How to use this low power mode:
3103:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           - It is not recommended to use with interruption or DMA
3104:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             since these modes have to clear immediately the EOC flag
3105:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             (by CPU to free the IRQ pending event or by DMA).
3106:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             Auto wait will work but fort a very short time, discarding
3107:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             its intended benefit (except specific case of high load of CPU
3108:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             or DMA transfers which can justify usage of auto wait).
3109:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           - Do use with polling: 1. Start conversion,
3110:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             2. Later on, when conversion data is needed: poll for end of
3111:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             conversion  to ensure that conversion is completed and
3112:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             retrieve ADC conversion data. This will trig another
3113:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             ADC conversion start.
3114:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - ADC low power mode "auto power-off" (feature available on
3115:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           this device if parameter LL_ADC_LP_AUTOPOWEROFF is available):
3116:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           the ADC automatically powers-off after a conversion and
3117:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           automatically wakes up when a new conversion is triggered
3118:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           (with startup time between trigger and start of sampling).
3119:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           This feature can be combined with low power mode "auto wait".
3120:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   With ADC low power mode "auto wait", the ADC conversion data read
3121:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         is corresponding to previous ADC conversion start, independently
3122:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         of delay during which ADC was idle.
3123:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Therefore, the ADC conversion data may be outdated: does not
3124:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         correspond to the current voltage level on the selected
3125:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC channel.
3126:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CFGR     AUTDLY         LL_ADC_GetLowPowerMode
3127:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
3128:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3129:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_MODE_NONE
3130:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_AUTOWAIT
3131:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
3132:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetLowPowerMode(ADC_TypeDef *ADCx)
3133:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
3134:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_AUTDLY));
3135:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
3136:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
3137:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
3138:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Set ADC selected offset number 1, 2, 3 or 4.
3139:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   This function set the 2 items of offset configuration:
3140:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - ADC channel to which the offset programmed will be applied
3141:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           (independently of channel mapped on ADC group regular
3142:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           or group injected)
3143:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - Offset level (offset to be subtracted from the raw
3144:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           converted data).
3145:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Caution: Offset format is dependent to ADC resolution:
3146:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         offset has to be left-aligned on bit 11, the LSB (right bits)
3147:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         are set to 0.
ARM GAS  /tmp/ccEuGJBQ.s 			page 75


3148:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   This function enables the offset, by default. It can be forced
3149:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         to disable state using function LL_ADC_SetOffsetState().
3150:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   If a channel is mapped on several offsets numbers, only the offset
3151:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         with the lowest value is considered for the subtraction.
3152:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3153:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
3154:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3155:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         on either groups regular or injected.
3156:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On STM32G4, some fast channels are available: fast analog inputs
3157:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         coming from GPIO pads (ADC_IN1..5).
3158:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll OFR1     OFFSET1_CH     LL_ADC_SetOffset\n
3159:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         OFR1     OFFSET1        LL_ADC_SetOffset\n
3160:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         OFR1     OFFSET1_EN     LL_ADC_SetOffset\n
3161:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         OFR2     OFFSET2_CH     LL_ADC_SetOffset\n
3162:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         OFR2     OFFSET2        LL_ADC_SetOffset\n
3163:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         OFR2     OFFSET2_EN     LL_ADC_SetOffset\n
3164:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         OFR3     OFFSET3_CH     LL_ADC_SetOffset\n
3165:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         OFR3     OFFSET3        LL_ADC_SetOffset\n
3166:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         OFR3     OFFSET3_EN     LL_ADC_SetOffset\n
3167:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         OFR4     OFFSET4_CH     LL_ADC_SetOffset\n
3168:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         OFR4     OFFSET4        LL_ADC_SetOffset\n
3169:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         OFR4     OFFSET4_EN     LL_ADC_SetOffset
3170:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
3171:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  Offsety This parameter can be one of the following values:
3172:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_1
3173:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_2
3174:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_3
3175:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_4
3176:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  Channel This parameter can be one of the following values:
3177:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
3178:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1                 (8)
3179:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2                 (8)
3180:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3                 (8)
3181:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4                 (8)
3182:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5                 (8)
3183:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
3184:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
3185:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
3186:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
3187:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
3188:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
3189:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
3190:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
3191:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
3192:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
3193:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
3194:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
3195:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
3196:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT           (7)
3197:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR_ADC1   (1)
3198:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR_ADC5   (5)
3199:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT              (6)
3200:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP1           (1)
3201:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP2           (2)
3202:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP3_ADC2      (2)
3203:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP3_ADC3      (3)
3204:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP4           (5)
ARM GAS  /tmp/ccEuGJBQ.s 			page 76


3205:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP5           (5)
3206:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP6           (4)
3207:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *
3208:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (1) On STM32G4, parameter available only on ADC instance: ADC1.\n
3209:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (2) On STM32G4, parameter available only on ADC instance: ADC2.\n
3210:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (3) On STM32G4, parameter available only on ADC instance: ADC3.\n
3211:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (4) On STM32G4, parameter available only on ADC instance: ADC4.\n
3212:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (5) On STM32G4, parameter available only on ADC instance: ADC5.\n
3213:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (6) On STM32G4, parameter available only on ADC instances: ADC1, ADC3, ADC5.\n
3214:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (7) On STM32G4, parameter available only on ADC instances: ADC1, ADC3, ADC4, ADC5.\n
3215:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *          -  On this STM32 series, all ADCx are not available on all devices. Refer to device da
3216:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (8) On STM32G4, fast channel allows: 2.5 (sampling) + 12.5 (conversion) = 15 ADC clock 
3217:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             Other channels are slow channels  allows: 6.5 (sampling) + 12.5 (conversion) = 19 A
3218:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  OffsetLevel Value between Min_Data=0x000 and Max_Data=0xFFF
3219:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
3220:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
3221:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetOffset(ADC_TypeDef *ADCx, uint32_t Offsety, uint32_t Channel, uint32
3222:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
3223:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->OFR1, Offsety);
3224:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
3225:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(*preg,
3226:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_OFR1_OFFSET1_EN | ADC_OFR1_OFFSET1_CH | ADC_OFR1_OFFSET1,
3227:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_OFR1_OFFSET1_EN | (Channel & ADC_CHANNEL_ID_NUMBER_MASK) | OffsetLevel);
3228:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
3229:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
3230:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
3231:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get for the ADC selected offset number 1, 2, 3 or 4:
3232:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Channel to which the offset programmed will be applied
3233:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (independently of channel mapped on ADC group regular
3234:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         or group injected)
3235:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Usage of the returned channel number:
3236:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - To reinject this channel into another function LL_ADC_xxx:
3237:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           the returned channel number is only partly formatted on definition
3238:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           of literals LL_ADC_CHANNEL_x. Therefore, it has to be compared
3239:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           with parts of literals LL_ADC_CHANNEL_x or using
3240:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           helper macro @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
3241:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           Then the selected literal LL_ADC_CHANNEL_x can be used
3242:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           as parameter for another function.
3243:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - To get the channel number in decimal format:
3244:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           process the returned value with the helper macro
3245:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
3246:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On STM32G4, some fast channels are available: fast analog inputs
3247:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         coming from GPIO pads (ADC_IN1..5).
3248:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll OFR1     OFFSET1_CH     LL_ADC_GetOffsetChannel\n
3249:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         OFR2     OFFSET2_CH     LL_ADC_GetOffsetChannel\n
3250:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         OFR3     OFFSET3_CH     LL_ADC_GetOffsetChannel\n
3251:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         OFR4     OFFSET4_CH     LL_ADC_GetOffsetChannel
3252:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
3253:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  Offsety This parameter can be one of the following values:
3254:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_1
3255:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_2
3256:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_3
3257:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_4
3258:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3259:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
3260:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1                 (8)
3261:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2                 (8)
ARM GAS  /tmp/ccEuGJBQ.s 			page 77


3262:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3                 (8)
3263:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4                 (8)
3264:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5                 (8)
3265:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
3266:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
3267:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
3268:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
3269:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
3270:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
3271:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
3272:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
3273:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
3274:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
3275:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
3276:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
3277:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
3278:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT           (7)
3279:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR_ADC1   (1)
3280:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR_ADC5   (5)
3281:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT              (6)
3282:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP1           (1)
3283:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP2           (2)
3284:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP3_ADC2      (2)
3285:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP3_ADC3      (3)
3286:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP4           (5)
3287:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP5           (5)
3288:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP6           (4)
3289:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *
3290:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (1) On STM32G4, parameter available only on ADC instance: ADC1.\n
3291:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (2) On STM32G4, parameter available only on ADC instance: ADC2.\n
3292:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (3) On STM32G4, parameter available only on ADC instance: ADC3.\n
3293:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (4) On STM32G4, parameter available only on ADC instance: ADC4.\n
3294:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (5) On STM32G4, parameter available only on ADC instance: ADC5.\n
3295:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (6) On STM32G4, parameter available only on ADC instances: ADC1, ADC3, ADC5.\n
3296:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (7) On STM32G4, parameter available only on ADC instances: ADC1, ADC3, ADC4, ADC5.\n
3297:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *          -  On this STM32 series, all ADCx are not available on all devices. Refer to device da
3298:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (8) On STM32G4, fast channel allows: 2.5 (sampling) + 12.5 (conversion) = 15 ADC clock 
3299:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             Other channels are slow channels  allows: 6.5 (sampling) + 12.5 (conversion) = 19 A
3300:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (1, 2, 3, 4, 5, 7) For ADC channel read back from ADC register,
3301:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                      comparison with internal channel parameter to be done
3302:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                      using helper macro @ref __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL().
3303:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
3304:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOffsetChannel(ADC_TypeDef *ADCx, uint32_t Offsety)
3305:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
3306:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->OFR1, Offsety);
3307:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
3308:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint32_t) READ_BIT(*preg, ADC_OFR1_OFFSET1_CH);
3309:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
3310:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
3311:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
3312:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get for the ADC selected offset number 1, 2, 3 or 4:
3313:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Offset level (offset to be subtracted from the raw
3314:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         converted data).
3315:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Caution: Offset format is dependent to ADC resolution:
3316:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         offset has to be left-aligned on bit 11, the LSB (right bits)
3317:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         are set to 0.
3318:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll OFR1     OFFSET1        LL_ADC_GetOffsetLevel\n
ARM GAS  /tmp/ccEuGJBQ.s 			page 78


3319:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         OFR2     OFFSET2        LL_ADC_GetOffsetLevel\n
3320:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         OFR3     OFFSET3        LL_ADC_GetOffsetLevel\n
3321:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         OFR4     OFFSET4        LL_ADC_GetOffsetLevel
3322:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
3323:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  Offsety This parameter can be one of the following values:
3324:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_1
3325:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_2
3326:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_3
3327:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_4
3328:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
3329:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
3330:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOffsetLevel(ADC_TypeDef *ADCx, uint32_t Offsety)
3331:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
3332:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->OFR1, Offsety);
3333:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
3334:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint32_t) READ_BIT(*preg, ADC_OFR1_OFFSET1);
3335:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
3336:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
3337:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
3338:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Set for the ADC selected offset number 1, 2, 3 or 4:
3339:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         force offset state disable or enable
3340:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         without modifying offset channel or offset value.
3341:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   This function should be needed only in case of offset to be
3342:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         enabled-disabled dynamically, and should not be needed in other cases:
3343:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         function LL_ADC_SetOffset() automatically enables the offset.
3344:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3345:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
3346:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3347:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         on either groups regular or injected.
3348:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll OFR1     OFFSET1_EN     LL_ADC_SetOffsetState\n
3349:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         OFR2     OFFSET2_EN     LL_ADC_SetOffsetState\n
3350:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         OFR3     OFFSET3_EN     LL_ADC_SetOffsetState\n
3351:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         OFR4     OFFSET4_EN     LL_ADC_SetOffsetState
3352:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
3353:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  Offsety This parameter can be one of the following values:
3354:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_1
3355:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_2
3356:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_3
3357:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_4
3358:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  OffsetState This parameter can be one of the following values:
3359:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_DISABLE
3360:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_ENABLE
3361:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
3362:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
3363:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetOffsetState(ADC_TypeDef *ADCx, uint32_t Offsety, uint32_t OffsetStat
3364:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
3365:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->OFR1, Offsety);
3366:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
3367:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(*preg,
3368:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_OFR1_OFFSET1_EN,
3369:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              OffsetState);
3370:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
3371:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
3372:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
3373:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get for the ADC selected offset number 1, 2, 3 or 4:
3374:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         offset state disabled or enabled.
3375:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll OFR1     OFFSET1_EN     LL_ADC_GetOffsetState\n
ARM GAS  /tmp/ccEuGJBQ.s 			page 79


3376:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         OFR2     OFFSET2_EN     LL_ADC_GetOffsetState\n
3377:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         OFR3     OFFSET3_EN     LL_ADC_GetOffsetState\n
3378:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         OFR4     OFFSET4_EN     LL_ADC_GetOffsetState
3379:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
3380:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  Offsety This parameter can be one of the following values:
3381:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_1
3382:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_2
3383:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_3
3384:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_4
3385:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3386:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_DISABLE
3387:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_ENABLE
3388:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
3389:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOffsetState(ADC_TypeDef *ADCx, uint32_t Offsety)
3390:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
3391:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->OFR1, Offsety);
3392:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
3393:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint32_t) READ_BIT(*preg, ADC_OFR1_OFFSET1_EN);
3394:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
3395:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
3396:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
3397:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Set for the ADC selected offset number 1, 2, 3 or 4:
3398:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         choose offset sign.
3399:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3400:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
3401:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3402:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         on either groups regular or injected.
3403:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll OFR1     OFFSETPOS      LL_ADC_SetOffsetSign\n
3404:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         OFR2     OFFSETPOS      LL_ADC_SetOffsetSign\n
3405:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         OFR3     OFFSETPOS      LL_ADC_SetOffsetSign\n
3406:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         OFR4     OFFSETPOS      LL_ADC_SetOffsetSign
3407:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
3408:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  Offsety This parameter can be one of the following values:
3409:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_1
3410:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_2
3411:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_3
3412:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_4
3413:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  OffsetSign This parameter can be one of the following values:
3414:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_SIGN_NEGATIVE
3415:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_SIGN_POSITIVE
3416:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
3417:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
3418:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetOffsetSign(ADC_TypeDef *ADCx, uint32_t Offsety, uint32_t OffsetSign)
3419:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
3420:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->OFR1, Offsety);
3421:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
3422:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(*preg,
3423:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_OFR1_OFFSETPOS,
3424:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              OffsetSign);
3425:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
3426:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
3427:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
3428:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get for the ADC selected offset number 1, 2, 3 or 4:
3429:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         offset sign if positive or negative.
3430:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll OFR1     OFFSETPOS      LL_ADC_GetOffsetSign\n
3431:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         OFR2     OFFSETPOS      LL_ADC_GetOffsetSign\n
3432:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         OFR3     OFFSETPOS      LL_ADC_GetOffsetSign\n
ARM GAS  /tmp/ccEuGJBQ.s 			page 80


3433:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         OFR4     OFFSETPOS      LL_ADC_GetOffsetSign
3434:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
3435:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  Offsety This parameter can be one of the following values:
3436:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_1
3437:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_2
3438:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_3
3439:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_4
3440:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3441:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_SIGN_NEGATIVE
3442:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_SIGN_POSITIVE
3443:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
3444:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOffsetSign(ADC_TypeDef *ADCx, uint32_t Offsety)
3445:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
3446:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->OFR1, Offsety);
3447:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
3448:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint32_t) READ_BIT(*preg, ADC_OFR1_OFFSETPOS);
3449:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
3450:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
3451:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
3452:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Set for the ADC selected offset number 1, 2, 3 or 4:
3453:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         choose offset saturation mode.
3454:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3455:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
3456:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3457:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         on either groups regular or injected.
3458:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll OFR1     SATEN          LL_ADC_SetOffsetSaturation\n
3459:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         OFR2     SATEN          LL_ADC_SetOffsetSaturation\n
3460:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         OFR3     SATEN          LL_ADC_SetOffsetSaturation\n
3461:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         OFR4     SATEN          LL_ADC_SetOffsetSaturation
3462:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
3463:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  Offsety This parameter can be one of the following values:
3464:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_1
3465:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_2
3466:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_3
3467:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_4
3468:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  OffsetSaturation This parameter can be one of the following values:
3469:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_SATURATION_ENABLE
3470:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_SATURATION_DISABLE
3471:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
3472:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
3473:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetOffsetSaturation(ADC_TypeDef *ADCx, uint32_t Offsety, uint32_t Offse
3474:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
3475:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->OFR1, Offsety);
3476:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
3477:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(*preg,
3478:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_OFR1_SATEN,
3479:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              OffsetSaturation);
3480:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
3481:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
3482:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
3483:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get for the ADC selected offset number 1, 2, 3 or 4:
3484:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         offset saturation if enabled or disabled.
3485:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll OFR1     SATEN          LL_ADC_GetOffsetSaturation\n
3486:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         OFR2     SATEN          LL_ADC_GetOffsetSaturation\n
3487:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         OFR3     SATEN          LL_ADC_GetOffsetSaturation\n
3488:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         OFR4     SATEN          LL_ADC_GetOffsetSaturation
3489:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
ARM GAS  /tmp/ccEuGJBQ.s 			page 81


3490:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  Offsety This parameter can be one of the following values:
3491:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_1
3492:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_2
3493:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_3
3494:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_4
3495:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3496:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_SATURATION_ENABLE
3497:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_SATURATION_DISABLE
3498:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
3499:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOffsetSaturation(ADC_TypeDef *ADCx, uint32_t Offsety)
3500:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
3501:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->OFR1, Offsety);
3502:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
3503:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint32_t) READ_BIT(*preg, ADC_OFR1_SATEN);
3504:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
3505:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
3506:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
3507:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Set ADC gain compensation.
3508:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   This function set the gain compensation coefficient
3509:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         that is applied to raw converted data using the formula:
3510:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           DATA = DATA(raw) * (gain compensation coef) / 4096
3511:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   This function enables the gain compensation if given
3512:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         coefficient is above 0, otherwise it disables it.
3513:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Gain compensation when enabled is applied to all channels.
3514:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3515:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
3516:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3517:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         on either groups regular or injected.
3518:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll GCOMP    GCOMPCOEFF     LL_ADC_SetGainCompensation\n
3519:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         CFGR2    GCOMP          LL_ADC_SetGainCompensation
3520:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
3521:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  GainCompensation This parameter can be:
3522:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         0           Gain compensation will be disabled and value set to 0
3523:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         1 -> 16393  Gain compensation will be enabled with specified value
3524:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
3525:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
3526:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetGainCompensation(ADC_TypeDef *ADCx, uint32_t GainCompensation)
3527:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
3528:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(ADCx->GCOMP, ADC_GCOMP_GCOMPCOEFF, GainCompensation);
3529:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR2, ADC_CFGR2_GCOMP, ((GainCompensation == 0UL) ? 0UL : 1UL) << ADC_CFGR2_GCO
3530:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
3531:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
3532:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
3533:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get the ADC gain compensation value
3534:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll GCOMP    GCOMPCOEFF     LL_ADC_GetGainCompensation\n
3535:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         CFGR2    GCOMP          LL_ADC_GetGainCompensation
3536:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
3537:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Returned value can be:
3538:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         0           Gain compensation is disabled
3539:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         1 -> 16393  Gain compensation is enabled with returned value
3540:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
3541:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetGainCompensation(ADC_TypeDef *ADCx)
3542:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
3543:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return ((READ_BIT(ADCx->CFGR2, ADC_CFGR2_GCOMP) == ADC_CFGR2_GCOMP) ? READ_BIT(ADCx->GCOMP, ADC_G
3544:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
3545:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
3546:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #if defined(ADC_SMPR1_SMPPLUS)
ARM GAS  /tmp/ccEuGJBQ.s 			page 82


3547:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
3548:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Set ADC sampling time common configuration impacting
3549:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         settings of sampling time channel wise.
3550:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3551:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
3552:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3553:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         on either groups regular or injected.
3554:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll SMPR1    SMPPLUS        LL_ADC_SetSamplingTimeCommonConfig
3555:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
3556:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  SamplingTimeCommonConfig This parameter can be one of the following values:
3557:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_COMMON_DEFAULT
3558:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_COMMON_3C5_REPL_2C5
3559:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
3560:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
3561:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetSamplingTimeCommonConfig(ADC_TypeDef *ADCx, uint32_t SamplingTimeCom
3562:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
3563:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(ADCx->SMPR1, ADC_SMPR1_SMPPLUS, SamplingTimeCommonConfig);
3564:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
3565:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
3566:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
3567:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC sampling time common configuration impacting
3568:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         settings of sampling time channel wise.
3569:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll SMPR1    SMPPLUS        LL_ADC_GetSamplingTimeCommonConfig
3570:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
3571:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3572:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_COMMON_DEFAULT
3573:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_COMMON_3C5_REPL_2C5
3574:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
3575:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetSamplingTimeCommonConfig(ADC_TypeDef *ADCx)
3576:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
3577:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->SMPR1, ADC_SMPR1_SMPPLUS));
3578:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
3579:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #endif /* ADC_SMPR1_SMPPLUS */
3580:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
3581:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
3582:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
3583:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
3584:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
3585:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_Group_Regular Configuration of ADC hierarchical scope: gr
3586:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
3587:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
3588:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
3589:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
3590:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Set ADC group regular conversion trigger source:
3591:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         internal (SW start) or from external peripheral (timer event,
3592:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         external interrupt line).
3593:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, setting trigger source to external trigger
3594:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         also set trigger polarity to rising edge
3595:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (default setting for compatibility with some ADC on other
3596:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         STM32 families having this setting set by HW default value).
3597:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         In case of need to modify trigger edge, use
3598:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         function @ref LL_ADC_REG_SetTriggerEdge().
3599:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Availability of parameters of trigger sources from timer
3600:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         depends on timers availability on the selected device.
3601:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3602:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
3603:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
ARM GAS  /tmp/ccEuGJBQ.s 			page 83


3604:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         on group regular.
3605:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CFGR     EXTSEL         LL_ADC_REG_SetTriggerSource\n
3606:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         CFGR     EXTEN          LL_ADC_REG_SetTriggerSource
3607:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
3608:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  TriggerSource This parameter can be one of the following values:
3609:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_SOFTWARE
3610:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_TRGO
3611:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_TRGO2
3612:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_CH1        (1)
3613:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_CH2        (1)
3614:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_CH3
3615:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM2_TRGO
3616:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM2_CH1        (2)
3617:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM2_CH2        (1)
3618:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM2_CH3        (2)
3619:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM3_TRGO
3620:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM3_CH1        (2)
3621:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM3_CH4        (1)
3622:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM4_TRGO
3623:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM4_CH1        (2)
3624:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM4_CH4        (1)
3625:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM6_TRGO
3626:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM7_TRGO
3627:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM8_TRGO
3628:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM8_TRGO2
3629:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM8_CH1        (2)
3630:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM15_TRGO
3631:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM20_TRGO
3632:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM20_TRGO2
3633:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM20_CH1
3634:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM20_CH2       (1)
3635:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM20_CH3       (1)
3636:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_HRTIM_TRG1
3637:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_HRTIM_TRG2      (2)
3638:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_HRTIM_TRG3
3639:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_HRTIM_TRG4      (2)
3640:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_HRTIM_TRG5
3641:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_HRTIM_TRG6
3642:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_HRTIM_TRG7
3643:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_HRTIM_TRG8
3644:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_HRTIM_TRG9
3645:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_HRTIM_TRG10
3646:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_EXTI_LINE11     (1)
3647:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_EXTI_LINE2      (2)
3648:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_LPTIM_OUT
3649:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *
3650:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (1) On STM32G4 series, parameter not available on all ADC instances: ADC1, ADC2.\n
3651:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (2) On STM32G4 series, parameter not available on all ADC instances: ADC3, ADC4, ADC5.
3652:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             On this STM32 series, all ADCx are not available on all devices. Refer to device da
3653:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
3654:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
3655:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetTriggerSource(ADC_TypeDef *ADCx, uint32_t TriggerSource)
3656:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
3657:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_EXTEN | ADC_CFGR_EXTSEL, TriggerSource);
3658:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
3659:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
3660:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
ARM GAS  /tmp/ccEuGJBQ.s 			page 84


3661:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC group regular conversion trigger source:
3662:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         internal (SW start) or from external peripheral (timer event,
3663:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         external interrupt line).
3664:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   To determine whether group regular trigger source is
3665:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         internal (SW start) or external, without detail
3666:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         of which peripheral is selected as external trigger,
3667:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (equivalent to
3668:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         "if(LL_ADC_REG_GetTriggerSource(ADC1) == LL_ADC_REG_TRIG_SOFTWARE)")
3669:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         use function @ref LL_ADC_REG_IsTriggerSourceSWStart.
3670:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Availability of parameters of trigger sources from timer
3671:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         depends on timers availability on the selected device.
3672:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CFGR     EXTSEL         LL_ADC_REG_GetTriggerSource\n
3673:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         CFGR     EXTEN          LL_ADC_REG_GetTriggerSource
3674:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
3675:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3676:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_SOFTWARE
3677:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_TRGO
3678:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_TRGO2
3679:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_CH1        (1)
3680:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_CH2        (1)
3681:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_CH3
3682:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM2_TRGO
3683:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM2_CH1        (2)
3684:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM2_CH2        (1)
3685:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM2_CH3        (2)
3686:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM3_TRGO
3687:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM3_CH1        (2)
3688:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM3_CH4        (1)
3689:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM4_TRGO
3690:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM4_CH1        (2)
3691:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM4_CH4        (1)
3692:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM6_TRGO
3693:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM7_TRGO
3694:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM8_TRGO
3695:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM8_TRGO2
3696:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM8_CH1        (2)
3697:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM15_TRGO
3698:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM20_TRGO
3699:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM20_TRGO2
3700:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM20_CH1
3701:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM20_CH2       (1)
3702:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM20_CH3       (1)
3703:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_HRTIM_TRG1
3704:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_HRTIM_TRG2      (2)
3705:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_HRTIM_TRG3
3706:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_HRTIM_TRG4      (2)
3707:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_HRTIM_TRG5
3708:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_HRTIM_TRG6
3709:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_HRTIM_TRG7
3710:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_HRTIM_TRG8
3711:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_HRTIM_TRG9
3712:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_HRTIM_TRG10
3713:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_EXTI_LINE11     (1)
3714:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_EXTI_LINE2      (2)
3715:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_LPTIM_OUT
3716:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *
3717:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (1) On STM32G4 series, parameter not available on all ADC instances: ADC1, ADC2.\n
ARM GAS  /tmp/ccEuGJBQ.s 			page 85


3718:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (2) On STM32G4 series, parameter not available on all ADC instances: ADC3, ADC4, ADC5.
3719:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             On this STM32 series, all ADCx are not available on all devices. Refer to device da
3720:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
3721:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetTriggerSource(ADC_TypeDef *ADCx)
3722:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
3723:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   __IO uint32_t TriggerSource = READ_BIT(ADCx->CFGR, ADC_CFGR_EXTSEL | ADC_CFGR_EXTEN);
3724:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
3725:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* Value for shift of {0; 4; 8; 12} depending on value of bitfield          */
3726:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* corresponding to ADC_CFGR_EXTEN {0; 1; 2; 3}.                            */
3727:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   uint32_t ShiftExten = ((TriggerSource & ADC_CFGR_EXTEN) >> (ADC_REG_TRIG_EXTEN_BITOFFSET_POS - 2U
3728:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
3729:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* Set bitfield corresponding to ADC_CFGR_EXTEN and ADC_CFGR_EXTSEL         */
3730:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* to match with triggers literals definition.                              */
3731:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return ((TriggerSource
3732:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****            & (ADC_REG_TRIG_SOURCE_MASK >> ShiftExten) & ADC_CFGR_EXTSEL)
3733:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****           | ((ADC_REG_TRIG_EDGE_MASK >> ShiftExten) & ADC_CFGR_EXTEN)
3734:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****          );
3735:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
3736:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
3737:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
3738:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC group regular conversion trigger source internal (SW start)
3739:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         or external.
3740:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   In case of group regular trigger source set to external trigger,
3741:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         to determine which peripheral is selected as external trigger,
3742:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         use function @ref LL_ADC_REG_GetTriggerSource().
3743:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CFGR     EXTEN          LL_ADC_REG_IsTriggerSourceSWStart
3744:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
3745:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Value "0" if trigger source external trigger
3746:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Value "1" if trigger source SW start.
3747:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
3748:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_IsTriggerSourceSWStart(ADC_TypeDef *ADCx)
3749:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
3750:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return ((READ_BIT(ADCx->CFGR, ADC_CFGR_EXTEN) == (LL_ADC_REG_TRIG_SOFTWARE & ADC_CFGR_EXTEN)) ? 1
3751:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
3752:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
3753:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
3754:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Set ADC group regular conversion trigger polarity.
3755:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Applicable only for trigger source set to external trigger.
3756:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3757:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
3758:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3759:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         on group regular.
3760:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CFGR     EXTEN          LL_ADC_REG_SetTriggerEdge
3761:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
3762:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ExternalTriggerEdge This parameter can be one of the following values:
3763:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_RISING
3764:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_FALLING
3765:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_RISINGFALLING
3766:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
3767:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
3768:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetTriggerEdge(ADC_TypeDef *ADCx, uint32_t ExternalTriggerEdge)
3769:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
3770:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_EXTEN, ExternalTriggerEdge);
3771:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
3772:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
3773:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
3774:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC group regular conversion trigger polarity.
ARM GAS  /tmp/ccEuGJBQ.s 			page 86


3775:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Applicable only for trigger source set to external trigger.
3776:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CFGR     EXTEN          LL_ADC_REG_GetTriggerEdge
3777:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
3778:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3779:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_RISING
3780:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_FALLING
3781:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_RISINGFALLING
3782:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
3783:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetTriggerEdge(ADC_TypeDef *ADCx)
3784:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
3785:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_EXTEN));
3786:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
3787:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
3788:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
3789:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Set ADC sampling mode.
3790:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   This function set the ADC conversion sampling mode
3791:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   This mode applies to regular group only.
3792:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Set sampling mode is applied to all conversion of regular group.
3793:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3794:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
3795:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3796:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         on group regular.
3797:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CFGR2    BULB           LL_ADC_REG_SetSamplingMode\n
3798:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         CFGR2    SMPTRIG        LL_ADC_REG_SetSamplingMode
3799:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
3800:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  SamplingMode This parameter can be one of the following values:
3801:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SAMPLING_MODE_NORMAL
3802:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SAMPLING_MODE_BULB
3803:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SAMPLING_MODE_TRIGGER_CONTROLED
3804:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
3805:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
3806:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetSamplingMode(ADC_TypeDef *ADCx, uint32_t SamplingMode)
3807:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
3808:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR2, ADC_CFGR2_BULB | ADC_CFGR2_SMPTRIG, SamplingMode);
3809:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
3810:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
3811:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
3812:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get the ADC sampling mode
3813:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CFGR2    BULB           LL_ADC_REG_GetSamplingMode\n
3814:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         CFGR2    SMPTRIG        LL_ADC_REG_GetSamplingMode
3815:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
3816:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3817:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SAMPLING_MODE_NORMAL
3818:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SAMPLING_MODE_BULB
3819:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SAMPLING_MODE_TRIGGER_CONTROLED
3820:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
3821:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetSamplingMode(ADC_TypeDef *ADCx)
3822:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
3823:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR2, ADC_CFGR2_BULB | ADC_CFGR2_SMPTRIG));
3824:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
3825:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
3826:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
3827:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Set ADC group regular sequencer length and scan direction.
3828:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Description of ADC group regular sequencer features:
3829:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - For devices with sequencer fully configurable
3830:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           (function "LL_ADC_REG_SetSequencerRanks()" available):
3831:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           sequencer length and each rank affectation to a channel
ARM GAS  /tmp/ccEuGJBQ.s 			page 87


3832:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           are configurable.
3833:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           This function performs configuration of:
3834:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           - Sequence length: Number of ranks in the scan sequence.
3835:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           - Sequence direction: Unless specified in parameters, sequencer
3836:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             scan direction is forward (from rank 1 to rank n).
3837:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           Sequencer ranks are selected using
3838:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           function "LL_ADC_REG_SetSequencerRanks()".
3839:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - For devices with sequencer not fully configurable
3840:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           (function "LL_ADC_REG_SetSequencerChannels()" available):
3841:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           sequencer length and each rank affectation to a channel
3842:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           are defined by channel number.
3843:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           This function performs configuration of:
3844:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           - Sequence length: Number of ranks in the scan sequence is
3845:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             defined by number of channels set in the sequence,
3846:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             rank of each channel is fixed by channel HW number.
3847:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             (channel 0 fixed on rank 0, channel 1 fixed on rank1, ...).
3848:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           - Sequence direction: Unless specified in parameters, sequencer
3849:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             scan direction is forward (from lowest channel number to
3850:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             highest channel number).
3851:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           Sequencer ranks are selected using
3852:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           function "LL_ADC_REG_SetSequencerChannels()".
3853:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Sequencer disabled is equivalent to sequencer of 1 rank:
3854:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC conversion on only 1 channel.
3855:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3856:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
3857:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3858:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         on group regular.
3859:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll SQR1     L              LL_ADC_REG_SetSequencerLength
3860:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
3861:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  SequencerNbRanks This parameter can be one of the following values:
3862:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_DISABLE
3863:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_2RANKS
3864:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_3RANKS
3865:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_4RANKS
3866:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_5RANKS
3867:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_6RANKS
3868:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_7RANKS
3869:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_8RANKS
3870:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_9RANKS
3871:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_10RANKS
3872:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_11RANKS
3873:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_12RANKS
3874:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_13RANKS
3875:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_14RANKS
3876:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_15RANKS
3877:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_16RANKS
3878:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
3879:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
3880:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetSequencerLength(ADC_TypeDef *ADCx, uint32_t SequencerNbRanks)
3881:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
3882:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(ADCx->SQR1, ADC_SQR1_L, SequencerNbRanks);
3883:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
3884:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
3885:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
3886:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC group regular sequencer length and scan direction.
3887:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Description of ADC group regular sequencer features:
3888:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - For devices with sequencer fully configurable
ARM GAS  /tmp/ccEuGJBQ.s 			page 88


3889:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           (function "LL_ADC_REG_SetSequencerRanks()" available):
3890:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           sequencer length and each rank affectation to a channel
3891:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           are configurable.
3892:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           This function retrieves:
3893:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           - Sequence length: Number of ranks in the scan sequence.
3894:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           - Sequence direction: Unless specified in parameters, sequencer
3895:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             scan direction is forward (from rank 1 to rank n).
3896:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           Sequencer ranks are selected using
3897:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           function "LL_ADC_REG_SetSequencerRanks()".
3898:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - For devices with sequencer not fully configurable
3899:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           (function "LL_ADC_REG_SetSequencerChannels()" available):
3900:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           sequencer length and each rank affectation to a channel
3901:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           are defined by channel number.
3902:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           This function retrieves:
3903:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           - Sequence length: Number of ranks in the scan sequence is
3904:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             defined by number of channels set in the sequence,
3905:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             rank of each channel is fixed by channel HW number.
3906:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             (channel 0 fixed on rank 0, channel 1 fixed on rank1, ...).
3907:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           - Sequence direction: Unless specified in parameters, sequencer
3908:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             scan direction is forward (from lowest channel number to
3909:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             highest channel number).
3910:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           Sequencer ranks are selected using
3911:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           function "LL_ADC_REG_SetSequencerChannels()".
3912:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Sequencer disabled is equivalent to sequencer of 1 rank:
3913:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC conversion on only 1 channel.
3914:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll SQR1     L              LL_ADC_REG_GetSequencerLength
3915:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
3916:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3917:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_DISABLE
3918:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_2RANKS
3919:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_3RANKS
3920:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_4RANKS
3921:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_5RANKS
3922:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_6RANKS
3923:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_7RANKS
3924:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_8RANKS
3925:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_9RANKS
3926:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_10RANKS
3927:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_11RANKS
3928:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_12RANKS
3929:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_13RANKS
3930:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_14RANKS
3931:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_15RANKS
3932:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_16RANKS
3933:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
3934:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetSequencerLength(ADC_TypeDef *ADCx)
3935:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
3936:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->SQR1, ADC_SQR1_L));
3937:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
3938:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
3939:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
3940:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Set ADC group regular sequencer discontinuous mode:
3941:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         sequence subdivided and scan conversions interrupted every selected
3942:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         number of ranks.
3943:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   It is not possible to enable both ADC group regular
3944:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         continuous mode and sequencer discontinuous mode.
3945:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   It is not possible to enable both ADC auto-injected mode
ARM GAS  /tmp/ccEuGJBQ.s 			page 89


3946:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         and ADC group regular sequencer discontinuous mode.
3947:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3948:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
3949:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3950:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         on group regular.
3951:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CFGR     DISCEN         LL_ADC_REG_SetSequencerDiscont\n
3952:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         CFGR     DISCNUM        LL_ADC_REG_SetSequencerDiscont
3953:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
3954:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  SeqDiscont This parameter can be one of the following values:
3955:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_DISABLE
3956:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_1RANK
3957:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_2RANKS
3958:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_3RANKS
3959:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_4RANKS
3960:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_5RANKS
3961:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_6RANKS
3962:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_7RANKS
3963:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_8RANKS
3964:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
3965:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
3966:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetSequencerDiscont(ADC_TypeDef *ADCx, uint32_t SeqDiscont)
3967:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
3968:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_DISCEN | ADC_CFGR_DISCNUM, SeqDiscont);
3969:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
3970:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
3971:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
3972:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC group regular sequencer discontinuous mode:
3973:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         sequence subdivided and scan conversions interrupted every selected
3974:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         number of ranks.
3975:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CFGR     DISCEN         LL_ADC_REG_GetSequencerDiscont\n
3976:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         CFGR     DISCNUM        LL_ADC_REG_GetSequencerDiscont
3977:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
3978:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3979:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_DISABLE
3980:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_1RANK
3981:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_2RANKS
3982:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_3RANKS
3983:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_4RANKS
3984:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_5RANKS
3985:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_6RANKS
3986:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_7RANKS
3987:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_8RANKS
3988:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
3989:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetSequencerDiscont(ADC_TypeDef *ADCx)
3990:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
3991:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_DISCEN | ADC_CFGR_DISCNUM));
3992:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
3993:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
3994:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
3995:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Set ADC group regular sequence: channel on the selected
3996:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         scan sequence rank.
3997:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   This function performs configuration of:
3998:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - Channels ordering into each rank of scan sequence:
3999:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           whatever channel can be placed into whatever rank.
4000:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, ADC group regular sequencer is
4001:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         fully configurable: sequencer length and each rank
4002:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         affectation to a channel are configurable.
ARM GAS  /tmp/ccEuGJBQ.s 			page 90


4003:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Refer to description of function @ref LL_ADC_REG_SetSequencerLength().
4004:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Depending on devices and packages, some channels may not be available.
4005:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Refer to device datasheet for channels availability.
4006:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, to measure internal channels (VrefInt,
4007:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         TempSensor, ...), measurement paths to internal channels must be
4008:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         enabled separately.
4009:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         This can be done using function @ref LL_ADC_SetCommonPathInternalCh().
4010:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4011:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
4012:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
4013:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         on group regular.
4014:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll SQR1     SQ1            LL_ADC_REG_SetSequencerRanks\n
4015:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SQR1     SQ2            LL_ADC_REG_SetSequencerRanks\n
4016:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SQR1     SQ3            LL_ADC_REG_SetSequencerRanks\n
4017:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SQR1     SQ4            LL_ADC_REG_SetSequencerRanks\n
4018:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SQR2     SQ5            LL_ADC_REG_SetSequencerRanks\n
4019:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SQR2     SQ6            LL_ADC_REG_SetSequencerRanks\n
4020:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SQR2     SQ7            LL_ADC_REG_SetSequencerRanks\n
4021:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SQR2     SQ8            LL_ADC_REG_SetSequencerRanks\n
4022:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SQR2     SQ9            LL_ADC_REG_SetSequencerRanks\n
4023:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SQR3     SQ10           LL_ADC_REG_SetSequencerRanks\n
4024:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SQR3     SQ11           LL_ADC_REG_SetSequencerRanks\n
4025:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SQR3     SQ12           LL_ADC_REG_SetSequencerRanks\n
4026:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SQR3     SQ13           LL_ADC_REG_SetSequencerRanks\n
4027:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SQR3     SQ14           LL_ADC_REG_SetSequencerRanks\n
4028:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SQR4     SQ15           LL_ADC_REG_SetSequencerRanks\n
4029:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SQR4     SQ16           LL_ADC_REG_SetSequencerRanks
4030:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
4031:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  Rank This parameter can be one of the following values:
4032:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_1
4033:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_2
4034:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_3
4035:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_4
4036:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_5
4037:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_6
4038:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_7
4039:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_8
4040:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_9
4041:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_10
4042:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_11
4043:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_12
4044:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_13
4045:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_14
4046:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_15
4047:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_16
4048:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  Channel This parameter can be one of the following values:
4049:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
4050:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1                 (8)
4051:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2                 (8)
4052:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3                 (8)
4053:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4                 (8)
4054:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5                 (8)
4055:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
4056:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
4057:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
4058:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
4059:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
ARM GAS  /tmp/ccEuGJBQ.s 			page 91


4060:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
4061:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
4062:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
4063:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
4064:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
4065:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
4066:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
4067:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
4068:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT           (7)
4069:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR_ADC1   (1)
4070:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR_ADC5   (5)
4071:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT              (6)
4072:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP1           (1)
4073:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP2           (2)
4074:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP3_ADC2      (2)
4075:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP3_ADC3      (3)
4076:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP4           (5)
4077:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP5           (5)
4078:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP6           (4)
4079:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *
4080:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (1) On STM32G4, parameter available only on ADC instance: ADC1.\n
4081:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (2) On STM32G4, parameter available only on ADC instance: ADC2.\n
4082:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (3) On STM32G4, parameter available only on ADC instance: ADC3.\n
4083:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (4) On STM32G4, parameter available only on ADC instance: ADC4.\n
4084:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (5) On STM32G4, parameter available only on ADC instance: ADC5.\n
4085:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (6) On STM32G4, parameter available only on ADC instances: ADC1, ADC3, ADC5.\n
4086:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (7) On STM32G4, parameter available only on ADC instances: ADC1, ADC3, ADC4, ADC5.\n
4087:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *          -  On this STM32 series, all ADCx are not available on all devices. Refer to device da
4088:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (8) On STM32G4, fast channel allows: 2.5 (sampling) + 12.5 (conversion) = 15 ADC clock 
4089:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             Other channels are slow channels  allows: 6.5 (sampling) + 12.5 (conversion) = 19 A
4090:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
4091:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
4092:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetSequencerRanks(ADC_TypeDef *ADCx, uint32_t Rank, uint32_t Channe
4093:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
4094:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* Set bits with content of parameter "Channel" with bits position          */
4095:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* in register and register position depending on parameter "Rank".         */
4096:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* Parameters "Rank" and "Channel" are used with masks because containing   */
4097:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* other bits reserved for other purpose.                                   */
4098:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->SQR1, ((Rank & ADC_REG_SQRX_REGOFFSET_MASK) >> A
4099:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
4100:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(*preg,
4101:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_CHANNEL_ID_NUMBER_MASK_POSBIT0 << (Rank & ADC_REG_RANK_ID_SQRX_MASK),
4102:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ((Channel & ADC_CHANNEL_ID_NUMBER_MASK) >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS) << (Ra
4103:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
4104:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
4105:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
4106:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC group regular sequence: channel on the selected
4107:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         scan sequence rank.
4108:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, ADC group regular sequencer is
4109:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         fully configurable: sequencer length and each rank
4110:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         affectation to a channel are configurable.
4111:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Refer to description of function @ref LL_ADC_REG_SetSequencerLength().
4112:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Depending on devices and packages, some channels may not be available.
4113:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Refer to device datasheet for channels availability.
4114:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Usage of the returned channel number:
4115:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - To reinject this channel into another function LL_ADC_xxx:
4116:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           the returned channel number is only partly formatted on definition
ARM GAS  /tmp/ccEuGJBQ.s 			page 92


4117:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           of literals LL_ADC_CHANNEL_x. Therefore, it has to be compared
4118:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           with parts of literals LL_ADC_CHANNEL_x or using
4119:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           helper macro @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
4120:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           Then the selected literal LL_ADC_CHANNEL_x can be used
4121:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           as parameter for another function.
4122:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - To get the channel number in decimal format:
4123:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           process the returned value with the helper macro
4124:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
4125:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll SQR1     SQ1            LL_ADC_REG_GetSequencerRanks\n
4126:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SQR1     SQ2            LL_ADC_REG_GetSequencerRanks\n
4127:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SQR1     SQ3            LL_ADC_REG_GetSequencerRanks\n
4128:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SQR1     SQ4            LL_ADC_REG_GetSequencerRanks\n
4129:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SQR2     SQ5            LL_ADC_REG_GetSequencerRanks\n
4130:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SQR2     SQ6            LL_ADC_REG_GetSequencerRanks\n
4131:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SQR2     SQ7            LL_ADC_REG_GetSequencerRanks\n
4132:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SQR2     SQ8            LL_ADC_REG_GetSequencerRanks\n
4133:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SQR2     SQ9            LL_ADC_REG_GetSequencerRanks\n
4134:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SQR3     SQ10           LL_ADC_REG_GetSequencerRanks\n
4135:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SQR3     SQ11           LL_ADC_REG_GetSequencerRanks\n
4136:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SQR3     SQ12           LL_ADC_REG_GetSequencerRanks\n
4137:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SQR3     SQ13           LL_ADC_REG_GetSequencerRanks\n
4138:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SQR3     SQ14           LL_ADC_REG_GetSequencerRanks\n
4139:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SQR4     SQ15           LL_ADC_REG_GetSequencerRanks\n
4140:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SQR4     SQ16           LL_ADC_REG_GetSequencerRanks
4141:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
4142:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  Rank This parameter can be one of the following values:
4143:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_1
4144:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_2
4145:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_3
4146:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_4
4147:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_5
4148:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_6
4149:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_7
4150:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_8
4151:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_9
4152:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_10
4153:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_11
4154:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_12
4155:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_13
4156:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_14
4157:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_15
4158:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_16
4159:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4160:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
4161:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1                 (8)
4162:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2                 (8)
4163:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3                 (8)
4164:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4                 (8)
4165:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5                 (8)
4166:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
4167:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
4168:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
4169:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
4170:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
4171:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
4172:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
4173:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
ARM GAS  /tmp/ccEuGJBQ.s 			page 93


4174:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
4175:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
4176:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
4177:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
4178:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
4179:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT           (7)
4180:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR_ADC1   (1)
4181:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR_ADC5   (5)
4182:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT              (6)
4183:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP1           (1)
4184:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP2           (2)
4185:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP3_ADC2      (2)
4186:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP3_ADC3      (3)
4187:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP4           (5)
4188:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP5           (5)
4189:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP6           (4)
4190:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *
4191:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (1) On STM32G4, parameter available only on ADC instance: ADC1.\n
4192:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (2) On STM32G4, parameter available only on ADC instance: ADC2.\n
4193:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (3) On STM32G4, parameter available only on ADC instance: ADC3.\n
4194:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (4) On STM32G4, parameter available only on ADC instance: ADC4.\n
4195:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (5) On STM32G4, parameter available only on ADC instance: ADC5.\n
4196:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (6) On STM32G4, parameter available only on ADC instances: ADC1, ADC3, ADC5.\n
4197:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (7) On STM32G4, parameter available only on ADC instances: ADC1, ADC3, ADC4, ADC5.\n
4198:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *          -  On this STM32 series, all ADCx are not available on all devices. Refer to device da
4199:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (8) On STM32G4, fast channel allows: 2.5 (sampling) + 12.5 (conversion) = 15 ADC clock 
4200:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             Other channels are slow channels  allows: 6.5 (sampling) + 12.5 (conversion) = 19 A
4201:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (1, 2, 3, 4, 5, 7) For ADC channel read back from ADC register,
4202:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                      comparison with internal channel parameter to be done
4203:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                      using helper macro @ref __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL().
4204:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
4205:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetSequencerRanks(ADC_TypeDef *ADCx, uint32_t Rank)
4206:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
4207:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->SQR1, ((Rank & ADC_REG_SQRX_REGOFFSET_MASK
4208:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
4209:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint32_t)((READ_BIT(*preg,
4210:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                               ADC_CHANNEL_ID_NUMBER_MASK_POSBIT0 << (Rank & ADC_REG_RANK_ID_SQRX_MA
4211:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                      >> (Rank & ADC_REG_RANK_ID_SQRX_MASK)) << ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS
4212:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                    );
4213:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
4214:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
4215:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
4216:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Set ADC continuous conversion mode on ADC group regular.
4217:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Description of ADC continuous conversion mode:
4218:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - single mode: one conversion per trigger
4219:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - continuous mode: after the first trigger, following
4220:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           conversions launched successively automatically.
4221:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   It is not possible to enable both ADC group regular
4222:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         continuous mode and sequencer discontinuous mode.
4223:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4224:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
4225:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
4226:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         on group regular.
4227:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CFGR     CONT           LL_ADC_REG_SetContinuousMode
4228:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
4229:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  Continuous This parameter can be one of the following values:
4230:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_CONV_SINGLE
ARM GAS  /tmp/ccEuGJBQ.s 			page 94


4231:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_CONV_CONTINUOUS
4232:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
4233:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
4234:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetContinuousMode(ADC_TypeDef *ADCx, uint32_t Continuous)
4235:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
4236:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_CONT, Continuous);
4237:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
4238:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
4239:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
4240:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC continuous conversion mode on ADC group regular.
4241:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Description of ADC continuous conversion mode:
4242:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - single mode: one conversion per trigger
4243:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - continuous mode: after the first trigger, following
4244:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           conversions launched successively automatically.
4245:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CFGR     CONT           LL_ADC_REG_GetContinuousMode
4246:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
4247:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4248:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_CONV_SINGLE
4249:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_CONV_CONTINUOUS
4250:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
4251:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetContinuousMode(ADC_TypeDef *ADCx)
4252:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
4253:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_CONT));
4254:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
4255:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
4256:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
4257:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Set ADC group regular conversion data transfer: no transfer or
4258:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         transfer by DMA, and DMA requests mode.
4259:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   If transfer by DMA selected, specifies the DMA requests
4260:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         mode:
4261:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - Limited mode (One shot mode): DMA transfer requests are stopped
4262:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           when number of DMA data transfers (number of
4263:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           ADC conversions) is reached.
4264:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode non-circular.
4265:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - Unlimited mode: DMA transfer requests are unlimited,
4266:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           whatever number of DMA data transfers (number of
4267:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           ADC conversions).
4268:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode circular.
4269:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   If ADC DMA requests mode is set to unlimited and DMA is set to
4270:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         mode non-circular:
4271:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         when DMA transfers size will be reached, DMA will stop transfers of
4272:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC conversions data ADC will raise an overrun error
4273:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *        (overrun flag and interruption if enabled).
4274:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   For devices with several ADC instances: ADC multimode DMA
4275:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         settings are available using function @ref LL_ADC_SetMultiDMATransfer().
4276:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   To configure DMA source address (peripheral address),
4277:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         use function @ref LL_ADC_DMA_GetRegAddr().
4278:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4279:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
4280:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
4281:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         on either groups regular or injected.
4282:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CFGR     DMAEN          LL_ADC_REG_SetDMATransfer\n
4283:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         CFGR     DMACFG         LL_ADC_REG_SetDMATransfer
4284:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
4285:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  DMATransfer This parameter can be one of the following values:
4286:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_NONE
4287:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_LIMITED
ARM GAS  /tmp/ccEuGJBQ.s 			page 95


4288:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_UNLIMITED
4289:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
4290:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
4291:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetDMATransfer(ADC_TypeDef *ADCx, uint32_t DMATransfer)
4292:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
4293:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_DMAEN | ADC_CFGR_DMACFG, DMATransfer);
4294:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
4295:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
4296:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
4297:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC group regular conversion data transfer: no transfer or
4298:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         transfer by DMA, and DMA requests mode.
4299:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   If transfer by DMA selected, specifies the DMA requests
4300:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         mode:
4301:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - Limited mode (One shot mode): DMA transfer requests are stopped
4302:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           when number of DMA data transfers (number of
4303:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           ADC conversions) is reached.
4304:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode non-circular.
4305:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - Unlimited mode: DMA transfer requests are unlimited,
4306:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           whatever number of DMA data transfers (number of
4307:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           ADC conversions).
4308:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode circular.
4309:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   If ADC DMA requests mode is set to unlimited and DMA is set to
4310:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         mode non-circular:
4311:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         when DMA transfers size will be reached, DMA will stop transfers of
4312:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC conversions data ADC will raise an overrun error
4313:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (overrun flag and interruption if enabled).
4314:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   For devices with several ADC instances: ADC multimode DMA
4315:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         settings are available using function @ref LL_ADC_GetMultiDMATransfer().
4316:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   To configure DMA source address (peripheral address),
4317:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         use function @ref LL_ADC_DMA_GetRegAddr().
4318:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CFGR     DMAEN          LL_ADC_REG_GetDMATransfer\n
4319:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         CFGR     DMACFG         LL_ADC_REG_GetDMATransfer
4320:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
4321:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4322:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_NONE
4323:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_LIMITED
4324:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_UNLIMITED
4325:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
4326:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetDMATransfer(ADC_TypeDef *ADCx)
4327:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
4328:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_DMAEN | ADC_CFGR_DMACFG));
4329:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
4330:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
4331:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
4332:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Set ADC group regular behavior in case of overrun:
4333:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         data preserved or overwritten.
4334:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Compatibility with devices without feature overrun:
4335:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         other devices without this feature have a behavior
4336:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         equivalent to data overwritten.
4337:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         The default setting of overrun is data preserved.
4338:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Therefore, for compatibility with all devices, parameter
4339:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         overrun should be set to data overwritten.
4340:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4341:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
4342:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
4343:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         on group regular.
4344:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CFGR     OVRMOD         LL_ADC_REG_SetOverrun
ARM GAS  /tmp/ccEuGJBQ.s 			page 96


4345:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
4346:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  Overrun This parameter can be one of the following values:
4347:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_OVR_DATA_PRESERVED
4348:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_OVR_DATA_OVERWRITTEN
4349:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
4350:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
4351:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetOverrun(ADC_TypeDef *ADCx, uint32_t Overrun)
4352:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
4353:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_OVRMOD, Overrun);
4354:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
4355:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
4356:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
4357:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC group regular behavior in case of overrun:
4358:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         data preserved or overwritten.
4359:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CFGR     OVRMOD         LL_ADC_REG_GetOverrun
4360:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
4361:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4362:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_OVR_DATA_PRESERVED
4363:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_OVR_DATA_OVERWRITTEN
4364:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
4365:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetOverrun(ADC_TypeDef *ADCx)
4366:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
4367:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_OVRMOD));
4368:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
4369:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
4370:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
4371:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
4372:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
4373:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
4374:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_Group_Injected Configuration of ADC hierarchical scope: g
4375:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
4376:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
4377:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
4378:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
4379:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Set ADC group injected conversion trigger source:
4380:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         internal (SW start) or from external peripheral (timer event,
4381:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         external interrupt line).
4382:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, setting trigger source to external trigger
4383:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         also set trigger polarity to rising edge
4384:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (default setting for compatibility with some ADC on other
4385:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         STM32 families having this setting set by HW default value).
4386:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         In case of need to modify trigger edge, use
4387:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         function @ref LL_ADC_INJ_SetTriggerEdge().
4388:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Availability of parameters of trigger sources from timer
4389:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         depends on timers availability on the selected device.
4390:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4391:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
4392:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must not be disabled. Can be enabled with or without conversion
4393:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         on going on either groups regular or injected.
4394:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll JSQR     JEXTSEL        LL_ADC_INJ_SetTriggerSource\n
4395:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         JSQR     JEXTEN         LL_ADC_INJ_SetTriggerSource
4396:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
4397:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  TriggerSource This parameter can be one of the following values:
4398:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_SOFTWARE
4399:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_TRGO
4400:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_TRGO2
4401:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_CH3         (2)
ARM GAS  /tmp/ccEuGJBQ.s 			page 97


4402:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_CH4
4403:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM2_TRGO
4404:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM2_CH1         (1)
4405:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_TRGO
4406:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_CH1         (1)
4407:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_CH3         (1)
4408:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_CH4         (1)
4409:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM4_TRGO
4410:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM4_CH3         (2)
4411:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM4_CH4         (2)
4412:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM6_TRGO
4413:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM7_TRGO
4414:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM8_TRGO
4415:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM8_TRGO2
4416:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM8_CH2         (2)
4417:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM8_CH4
4418:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM15_TRGO
4419:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM16_CH1        (1)
4420:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM20_TRGO
4421:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM20_TRGO2
4422:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM20_CH2        (2)
4423:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM20_CH4        (1)
4424:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_HRTIM_TRG1       (2)
4425:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_HRTIM_TRG2
4426:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_HRTIM_TRG3       (2)
4427:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_HRTIM_TRG4
4428:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_HRTIM_TRG5
4429:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_HRTIM_TRG6
4430:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_HRTIM_TRG7
4431:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_HRTIM_TRG8
4432:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_HRTIM_TRG9
4433:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_HRTIM_TRG10
4434:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_EXTI_LINE3       (2)
4435:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_EXTI_LINE15      (1)
4436:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_LPTIM_OUT
4437:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *
4438:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (1) On STM32G4 series, parameter not available on all ADC instances: ADC1, ADC2.\n
4439:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (2) On STM32G4 series, parameter not available on all ADC instances: ADC3, ADC4, ADC5.
4440:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             On this STM32 series, all ADCx are not available on all devices. Refer to device da
4441:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
4442:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
4443:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_SetTriggerSource(ADC_TypeDef *ADCx, uint32_t TriggerSource)
4444:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
4445:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(ADCx->JSQR, ADC_JSQR_JEXTSEL | ADC_JSQR_JEXTEN, TriggerSource);
4446:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
4447:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
4448:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
4449:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC group injected conversion trigger source:
4450:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         internal (SW start) or from external peripheral (timer event,
4451:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         external interrupt line).
4452:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   To determine whether group injected trigger source is
4453:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         internal (SW start) or external, without detail
4454:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         of which peripheral is selected as external trigger,
4455:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (equivalent to
4456:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         "if(LL_ADC_INJ_GetTriggerSource(ADC1) == LL_ADC_INJ_TRIG_SOFTWARE)")
4457:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         use function @ref LL_ADC_INJ_IsTriggerSourceSWStart.
4458:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Availability of parameters of trigger sources from timer
ARM GAS  /tmp/ccEuGJBQ.s 			page 98


4459:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         depends on timers availability on the selected device.
4460:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll JSQR     JEXTSEL        LL_ADC_INJ_GetTriggerSource\n
4461:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         JSQR     JEXTEN         LL_ADC_INJ_GetTriggerSource
4462:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
4463:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4464:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_SOFTWARE
4465:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_TRGO
4466:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_TRGO2
4467:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_CH3         (2)
4468:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_CH4
4469:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM2_TRGO
4470:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM2_CH1         (1)
4471:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_TRGO
4472:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_CH1         (1)
4473:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_CH3         (1)
4474:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_CH4         (1)
4475:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM4_TRGO
4476:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM4_CH3         (2)
4477:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM4_CH4         (2)
4478:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM6_TRGO
4479:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM7_TRGO
4480:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM8_TRGO
4481:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM8_TRGO2
4482:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM8_CH2         (2)
4483:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM8_CH4
4484:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM15_TRGO
4485:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM16_CH1        (1)
4486:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM20_TRGO
4487:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM20_TRGO2
4488:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM20_CH2        (2)
4489:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM20_CH4        (1)
4490:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_HRTIM_TRG1       (2)
4491:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_HRTIM_TRG2
4492:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_HRTIM_TRG3       (2)
4493:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_HRTIM_TRG4
4494:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_HRTIM_TRG5
4495:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_HRTIM_TRG6
4496:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_HRTIM_TRG7
4497:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_HRTIM_TRG8
4498:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_HRTIM_TRG9
4499:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_HRTIM_TRG10
4500:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_EXTI_LINE3       (2)
4501:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_EXTI_LINE15      (1)
4502:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_LPTIM_OUT
4503:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *
4504:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (1) On STM32G4 series, parameter not available on all ADC instances: ADC1, ADC2.\n
4505:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (2) On STM32G4 series, parameter not available on all ADC instances: ADC3, ADC4, ADC5.
4506:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             On this STM32 series, all ADCx are not available on all devices. Refer to device da
4507:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
4508:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_GetTriggerSource(ADC_TypeDef *ADCx)
4509:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
4510:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   __IO uint32_t TriggerSource = READ_BIT(ADCx->JSQR, ADC_JSQR_JEXTSEL | ADC_JSQR_JEXTEN);
4511:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
4512:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* Value for shift of {0; 4; 8; 12} depending on value of bitfield          */
4513:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* corresponding to ADC_JSQR_JEXTEN {0; 1; 2; 3}.                           */
4514:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   uint32_t ShiftJexten = ((TriggerSource & ADC_JSQR_JEXTEN) >> (ADC_INJ_TRIG_EXTEN_BITOFFSET_POS - 
4515:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
ARM GAS  /tmp/ccEuGJBQ.s 			page 99


4516:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* Set bitfield corresponding to ADC_JSQR_JEXTEN and ADC_JSQR_JEXTSEL       */
4517:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* to match with triggers literals definition.                              */
4518:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return ((TriggerSource
4519:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****            & (ADC_INJ_TRIG_SOURCE_MASK >> ShiftJexten) & ADC_JSQR_JEXTSEL)
4520:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****           | ((ADC_INJ_TRIG_EDGE_MASK >> ShiftJexten) & ADC_JSQR_JEXTEN)
4521:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****          );
4522:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
4523:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
4524:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
4525:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC group injected conversion trigger source internal (SW start)
4526:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****             or external
4527:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   In case of group injected trigger source set to external trigger,
4528:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         to determine which peripheral is selected as external trigger,
4529:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         use function @ref LL_ADC_INJ_GetTriggerSource.
4530:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll JSQR     JEXTEN         LL_ADC_INJ_IsTriggerSourceSWStart
4531:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
4532:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Value "0" if trigger source external trigger
4533:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Value "1" if trigger source SW start.
4534:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
4535:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_IsTriggerSourceSWStart(ADC_TypeDef *ADCx)
4536:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
4537:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return ((READ_BIT(ADCx->JSQR, ADC_JSQR_JEXTEN) == (LL_ADC_INJ_TRIG_SOFTWARE & ADC_JSQR_JEXTEN)) ?
4538:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
4539:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
4540:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
4541:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Set ADC group injected conversion trigger polarity.
4542:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Applicable only for trigger source set to external trigger.
4543:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4544:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
4545:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must not be disabled. Can be enabled with or without conversion
4546:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         on going on either groups regular or injected.
4547:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll JSQR     JEXTEN         LL_ADC_INJ_SetTriggerEdge
4548:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
4549:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ExternalTriggerEdge This parameter can be one of the following values:
4550:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_RISING
4551:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_FALLING
4552:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_RISINGFALLING
4553:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
4554:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
4555:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_SetTriggerEdge(ADC_TypeDef *ADCx, uint32_t ExternalTriggerEdge)
4556:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
4557:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(ADCx->JSQR, ADC_JSQR_JEXTEN, ExternalTriggerEdge);
4558:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
4559:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
4560:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
4561:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC group injected conversion trigger polarity.
4562:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Applicable only for trigger source set to external trigger.
4563:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll JSQR     JEXTEN         LL_ADC_INJ_GetTriggerEdge
4564:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
4565:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4566:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_RISING
4567:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_FALLING
4568:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_RISINGFALLING
4569:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
4570:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_GetTriggerEdge(ADC_TypeDef *ADCx)
4571:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
4572:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->JSQR, ADC_JSQR_JEXTEN));
ARM GAS  /tmp/ccEuGJBQ.s 			page 100


4573:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
4574:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
4575:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
4576:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Set ADC group injected sequencer length and scan direction.
4577:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   This function performs configuration of:
4578:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - Sequence length: Number of ranks in the scan sequence.
4579:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - Sequence direction: Unless specified in parameters, sequencer
4580:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           scan direction is forward (from rank 1 to rank n).
4581:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Sequencer disabled is equivalent to sequencer of 1 rank:
4582:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC conversion on only 1 channel.
4583:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4584:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
4585:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must not be disabled. Can be enabled with or without conversion
4586:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         on going on either groups regular or injected.
4587:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll JSQR     JL             LL_ADC_INJ_SetSequencerLength
4588:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
4589:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  SequencerNbRanks This parameter can be one of the following values:
4590:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_DISABLE
4591:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_2RANKS
4592:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_3RANKS
4593:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_4RANKS
4594:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
4595:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
4596:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_SetSequencerLength(ADC_TypeDef *ADCx, uint32_t SequencerNbRanks)
4597:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
4598:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(ADCx->JSQR, ADC_JSQR_JL, SequencerNbRanks);
4599:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
4600:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
4601:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
4602:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC group injected sequencer length and scan direction.
4603:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   This function retrieves:
4604:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - Sequence length: Number of ranks in the scan sequence.
4605:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - Sequence direction: Unless specified in parameters, sequencer
4606:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           scan direction is forward (from rank 1 to rank n).
4607:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Sequencer disabled is equivalent to sequencer of 1 rank:
4608:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC conversion on only 1 channel.
4609:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll JSQR     JL             LL_ADC_INJ_GetSequencerLength
4610:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
4611:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4612:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_DISABLE
4613:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_2RANKS
4614:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_3RANKS
4615:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_4RANKS
4616:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
4617:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_GetSequencerLength(ADC_TypeDef *ADCx)
4618:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
4619:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->JSQR, ADC_JSQR_JL));
4620:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
4621:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
4622:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
4623:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Set ADC group injected sequencer discontinuous mode:
4624:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         sequence subdivided and scan conversions interrupted every selected
4625:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         number of ranks.
4626:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   It is not possible to enable both ADC group injected
4627:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         auto-injected mode and sequencer discontinuous mode.
4628:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CFGR     JDISCEN        LL_ADC_INJ_SetSequencerDiscont
4629:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
ARM GAS  /tmp/ccEuGJBQ.s 			page 101


4630:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  SeqDiscont This parameter can be one of the following values:
4631:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_DISCONT_DISABLE
4632:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_DISCONT_1RANK
4633:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
4634:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
4635:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_SetSequencerDiscont(ADC_TypeDef *ADCx, uint32_t SeqDiscont)
4636:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
4637:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_JDISCEN, SeqDiscont);
4638:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
4639:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
4640:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
4641:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC group injected sequencer discontinuous mode:
4642:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         sequence subdivided and scan conversions interrupted every selected
4643:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         number of ranks.
4644:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CFGR     JDISCEN        LL_ADC_INJ_GetSequencerDiscont
4645:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
4646:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4647:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_DISCONT_DISABLE
4648:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_DISCONT_1RANK
4649:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
4650:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_GetSequencerDiscont(ADC_TypeDef *ADCx)
4651:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
4652:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_JDISCEN));
4653:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
4654:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
4655:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
4656:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Set ADC group injected sequence: channel on the selected
4657:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         sequence rank.
4658:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Depending on devices and packages, some channels may not be available.
4659:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Refer to device datasheet for channels availability.
4660:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, to measure internal channels (VrefInt,
4661:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         TempSensor, ...), measurement paths to internal channels must be
4662:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         enabled separately.
4663:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         This can be done using function @ref LL_ADC_SetCommonPathInternalCh().
4664:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On STM32G4, some fast channels are available: fast analog inputs
4665:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         coming from GPIO pads (ADC_IN1..5).
4666:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4667:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
4668:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must not be disabled. Can be enabled with or without conversion
4669:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         on going on either groups regular or injected.
4670:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll JSQR     JSQ1           LL_ADC_INJ_SetSequencerRanks\n
4671:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         JSQR     JSQ2           LL_ADC_INJ_SetSequencerRanks\n
4672:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         JSQR     JSQ3           LL_ADC_INJ_SetSequencerRanks\n
4673:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         JSQR     JSQ4           LL_ADC_INJ_SetSequencerRanks
4674:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
4675:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  Rank This parameter can be one of the following values:
4676:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_1
4677:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_2
4678:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_3
4679:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_4
4680:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  Channel This parameter can be one of the following values:
4681:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
4682:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1                 (8)
4683:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2                 (8)
4684:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3                 (8)
4685:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4                 (8)
4686:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5                 (8)
ARM GAS  /tmp/ccEuGJBQ.s 			page 102


4687:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
4688:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
4689:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
4690:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
4691:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
4692:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
4693:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
4694:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
4695:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
4696:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
4697:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
4698:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
4699:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
4700:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT           (7)
4701:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR_ADC1   (1)
4702:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR_ADC5   (5)
4703:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT              (6)
4704:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP1           (1)
4705:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP2           (2)
4706:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP3_ADC2      (2)
4707:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP3_ADC3      (3)
4708:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP4           (5)
4709:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP5           (5)
4710:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP6           (4)
4711:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *
4712:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (1) On STM32G4, parameter available only on ADC instance: ADC1.\n
4713:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (2) On STM32G4, parameter available only on ADC instance: ADC2.\n
4714:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (3) On STM32G4, parameter available only on ADC instance: ADC3.\n
4715:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (4) On STM32G4, parameter available only on ADC instance: ADC4.\n
4716:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (5) On STM32G4, parameter available only on ADC instance: ADC5.\n
4717:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (6) On STM32G4, parameter available only on ADC instances: ADC1, ADC3, ADC5.\n
4718:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (7) On STM32G4, parameter available only on ADC instances: ADC1, ADC3, ADC4, ADC5.\n
4719:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *          -  On this STM32 series, all ADCx are not available on all devices. Refer to device da
4720:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (8) On STM32G4, fast channel allows: 2.5 (sampling) + 12.5 (conversion) = 15 ADC clock 
4721:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             Other channels are slow channels  allows: 6.5 (sampling) + 12.5 (conversion) = 19 A
4722:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
4723:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
4724:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_SetSequencerRanks(ADC_TypeDef *ADCx, uint32_t Rank, uint32_t Channe
4725:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
4726:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* Set bits with content of parameter "Channel" with bits position          */
4727:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* in register depending on parameter "Rank".                               */
4728:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* Parameters "Rank" and "Channel" are used with masks because containing   */
4729:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* other bits reserved for other purpose.                                   */
4730:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(ADCx->JSQR,
4731:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              (ADC_CHANNEL_ID_NUMBER_MASK >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS) << (Rank & ADC_INJ
4732:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ((Channel & ADC_CHANNEL_ID_NUMBER_MASK) >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS) << (Ra
4733:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
4734:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
4735:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
4736:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC group injected sequence: channel on the selected
4737:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         sequence rank.
4738:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Depending on devices and packages, some channels may not be available.
4739:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Refer to device datasheet for channels availability.
4740:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Usage of the returned channel number:
4741:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - To reinject this channel into another function LL_ADC_xxx:
4742:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           the returned channel number is only partly formatted on definition
4743:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           of literals LL_ADC_CHANNEL_x. Therefore, it has to be compared
ARM GAS  /tmp/ccEuGJBQ.s 			page 103


4744:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           with parts of literals LL_ADC_CHANNEL_x or using
4745:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           helper macro @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
4746:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           Then the selected literal LL_ADC_CHANNEL_x can be used
4747:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           as parameter for another function.
4748:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - To get the channel number in decimal format:
4749:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           process the returned value with the helper macro
4750:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
4751:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll JSQR     JSQ1           LL_ADC_INJ_GetSequencerRanks\n
4752:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         JSQR     JSQ2           LL_ADC_INJ_GetSequencerRanks\n
4753:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         JSQR     JSQ3           LL_ADC_INJ_GetSequencerRanks\n
4754:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         JSQR     JSQ4           LL_ADC_INJ_GetSequencerRanks
4755:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
4756:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  Rank This parameter can be one of the following values:
4757:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_1
4758:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_2
4759:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_3
4760:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_4
4761:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4762:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
4763:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1                 (8)
4764:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2                 (8)
4765:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3                 (8)
4766:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4                 (8)
4767:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5                 (8)
4768:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
4769:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
4770:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
4771:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
4772:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
4773:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
4774:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
4775:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
4776:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
4777:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
4778:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
4779:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
4780:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
4781:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT           (7)
4782:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR_ADC1   (1)
4783:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR_ADC5   (5)
4784:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT              (6)
4785:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP1           (1)
4786:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP2           (2)
4787:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP3_ADC2      (2)
4788:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP3_ADC3      (3)
4789:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP4           (5)
4790:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP5           (5)
4791:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP6           (4)
4792:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *
4793:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (1) On STM32G4, parameter available only on ADC instance: ADC1.\n
4794:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (2) On STM32G4, parameter available only on ADC instance: ADC2.\n
4795:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (3) On STM32G4, parameter available only on ADC instance: ADC3.\n
4796:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (4) On STM32G4, parameter available only on ADC instance: ADC4.\n
4797:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (5) On STM32G4, parameter available only on ADC instance: ADC5.\n
4798:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (6) On STM32G4, parameter available only on ADC instances: ADC1, ADC3, ADC5.\n
4799:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (7) On STM32G4, parameter available only on ADC instances: ADC1, ADC3, ADC4, ADC5.\n
4800:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *          -  On this STM32 series, all ADCx are not available on all devices. Refer to device da
ARM GAS  /tmp/ccEuGJBQ.s 			page 104


4801:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (8) On STM32G4, fast channel allows: 2.5 (sampling) + 12.5 (conversion) = 15 ADC clock 
4802:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             Other channels are slow channels  allows: 6.5 (sampling) + 12.5 (conversion) = 19 A
4803:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (1, 2, 3, 4, 5, 7) For ADC channel read back from ADC register,
4804:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                      comparison with internal channel parameter to be done
4805:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                      using helper macro @ref __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL().
4806:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
4807:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_GetSequencerRanks(ADC_TypeDef *ADCx, uint32_t Rank)
4808:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
4809:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint32_t)((READ_BIT(ADCx->JSQR,
4810:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                               (ADC_CHANNEL_ID_NUMBER_MASK >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS) <
4811:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                      >> (Rank & ADC_INJ_RANK_ID_JSQR_MASK)) << ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS
4812:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                    );
4813:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
4814:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
4815:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
4816:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Set ADC group injected conversion trigger:
4817:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         independent or from ADC group regular.
4818:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   This mode can be used to extend number of data registers
4819:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         updated after one ADC conversion trigger and with data
4820:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         permanently kept (not erased by successive conversions of scan of
4821:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC sequencer ranks), up to 5 data registers:
4822:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         1 data register on ADC group regular, 4 data registers
4823:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         on ADC group injected.
4824:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   If ADC group injected injected trigger source is set to an
4825:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         external trigger, this feature must be must be set to
4826:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         independent trigger.
4827:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC group injected automatic trigger is compliant only with
4828:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         group injected trigger source set to SW start, without any
4829:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         further action on  ADC group injected conversion start or stop:
4830:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         in this case, ADC group injected is controlled only
4831:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         from ADC group regular.
4832:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   It is not possible to enable both ADC group injected
4833:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         auto-injected mode and sequencer discontinuous mode.
4834:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4835:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
4836:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
4837:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         on either groups regular or injected.
4838:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CFGR     JAUTO          LL_ADC_INJ_SetTrigAuto
4839:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
4840:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  TrigAuto This parameter can be one of the following values:
4841:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_INDEPENDENT
4842:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_FROM_GRP_REGULAR
4843:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
4844:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
4845:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_SetTrigAuto(ADC_TypeDef *ADCx, uint32_t TrigAuto)
4846:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
4847:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_JAUTO, TrigAuto);
4848:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
4849:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
4850:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
4851:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC group injected conversion trigger:
4852:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         independent or from ADC group regular.
4853:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CFGR     JAUTO          LL_ADC_INJ_GetTrigAuto
4854:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
4855:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4856:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_INDEPENDENT
4857:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_FROM_GRP_REGULAR
ARM GAS  /tmp/ccEuGJBQ.s 			page 105


4858:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
4859:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_GetTrigAuto(ADC_TypeDef *ADCx)
4860:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
4861:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_JAUTO));
4862:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
4863:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
4864:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
4865:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Set ADC group injected contexts queue mode.
4866:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   A context is a setting of group injected sequencer:
4867:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - group injected trigger
4868:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - sequencer length
4869:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - sequencer ranks
4870:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         If contexts queue is disabled:
4871:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - only 1 sequence can be configured
4872:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           and is active perpetually.
4873:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         If contexts queue is enabled:
4874:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - up to 2 contexts can be queued
4875:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           and are checked in and out as a FIFO stack (first-in, first-out).
4876:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - If a new context is set when queues is full, error is triggered
4877:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           by interruption "Injected Queue Overflow".
4878:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - Two behaviors are possible when all contexts have been processed:
4879:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           the contexts queue can maintain the last context active perpetually
4880:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           or can be empty and injected group triggers are disabled.
4881:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - Triggers can be only external (not internal SW start)
4882:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - Caution: The sequence must be fully configured in one time
4883:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           (one write of register JSQR makes a check-in of a new context
4884:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           into the queue).
4885:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           Therefore functions to set separately injected trigger and
4886:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           sequencer channels cannot be used, register JSQR must be set
4887:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           using function @ref LL_ADC_INJ_ConfigQueueContext().
4888:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   This parameter can be modified only when no conversion is on going
4889:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         on either groups regular or injected.
4890:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   A modification of the context mode (bit JQDIS) causes the contexts
4891:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         queue to be flushed and the register JSQR is cleared.
4892:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4893:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
4894:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
4895:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         on either groups regular or injected.
4896:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CFGR     JQM            LL_ADC_INJ_SetQueueMode\n
4897:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         CFGR     JQDIS          LL_ADC_INJ_SetQueueMode
4898:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
4899:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  QueueMode This parameter can be one of the following values:
4900:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_QUEUE_DISABLE
4901:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_QUEUE_2CONTEXTS_LAST_ACTIVE
4902:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_QUEUE_2CONTEXTS_END_EMPTY
4903:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
4904:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
4905:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_SetQueueMode(ADC_TypeDef *ADCx, uint32_t QueueMode)
4906:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
4907:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_JQM | ADC_CFGR_JQDIS, QueueMode);
4908:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
4909:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
4910:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
4911:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC group injected context queue mode.
4912:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CFGR     JQM            LL_ADC_INJ_GetQueueMode\n
4913:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         CFGR     JQDIS          LL_ADC_INJ_GetQueueMode
4914:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
ARM GAS  /tmp/ccEuGJBQ.s 			page 106


4915:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4916:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_QUEUE_DISABLE
4917:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_QUEUE_2CONTEXTS_LAST_ACTIVE
4918:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_QUEUE_2CONTEXTS_END_EMPTY
4919:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
4920:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_GetQueueMode(ADC_TypeDef *ADCx)
4921:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
4922:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_JQM | ADC_CFGR_JQDIS));
4923:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
4924:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
4925:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
4926:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Set one context on ADC group injected that will be checked in
4927:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         contexts queue.
4928:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   A context is a setting of group injected sequencer:
4929:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - group injected trigger
4930:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - sequencer length
4931:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - sequencer ranks
4932:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         This function is intended to be used when contexts queue is enabled,
4933:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         because the sequence must be fully configured in one time
4934:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (functions to set separately injected trigger and sequencer channels
4935:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         cannot be used):
4936:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Refer to function @ref LL_ADC_INJ_SetQueueMode().
4937:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   In the contexts queue, only the active context can be read.
4938:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         The parameters of this function can be read using functions:
4939:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_GetTriggerSource()
4940:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_GetTriggerEdge()
4941:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_GetSequencerRanks()
4942:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, to measure internal channels (VrefInt,
4943:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         TempSensor, ...), measurement paths to internal channels must be
4944:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         enabled separately.
4945:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         This can be done using function @ref LL_ADC_SetCommonPathInternalCh().
4946:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On STM32G4, some fast channels are available: fast analog inputs
4947:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         coming from GPIO pads (ADC_IN1..5).
4948:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4949:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
4950:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must not be disabled. Can be enabled with or without conversion
4951:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         on going on either groups regular or injected.
4952:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll JSQR     JEXTSEL        LL_ADC_INJ_ConfigQueueContext\n
4953:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         JSQR     JEXTEN         LL_ADC_INJ_ConfigQueueContext\n
4954:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         JSQR     JL             LL_ADC_INJ_ConfigQueueContext\n
4955:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         JSQR     JSQ1           LL_ADC_INJ_ConfigQueueContext\n
4956:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         JSQR     JSQ2           LL_ADC_INJ_ConfigQueueContext\n
4957:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         JSQR     JSQ3           LL_ADC_INJ_ConfigQueueContext\n
4958:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         JSQR     JSQ4           LL_ADC_INJ_ConfigQueueContext
4959:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
4960:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  TriggerSource This parameter can be one of the following values:
4961:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_SOFTWARE
4962:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_TRGO
4963:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_TRGO2
4964:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_CH3         (2)
4965:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_CH4
4966:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM2_TRGO
4967:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM2_CH1         (1)
4968:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_TRGO
4969:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_CH1         (1)
4970:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_CH3         (1)
4971:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_CH4         (1)
ARM GAS  /tmp/ccEuGJBQ.s 			page 107


4972:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM4_TRGO
4973:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM4_CH3         (2)
4974:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM4_CH4         (2)
4975:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM6_TRGO
4976:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM7_TRGO
4977:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM8_TRGO
4978:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM8_TRGO2
4979:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM8_CH2         (2)
4980:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM8_CH4
4981:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM15_TRGO
4982:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM16_CH1        (1)
4983:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM20_TRGO
4984:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM20_TRGO2
4985:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM20_CH2        (2)
4986:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM20_CH4        (1)
4987:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_HRTIM_TRG1       (2)
4988:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_HRTIM_TRG2
4989:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_HRTIM_TRG3       (2)
4990:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_HRTIM_TRG4
4991:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_HRTIM_TRG5
4992:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_HRTIM_TRG6
4993:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_HRTIM_TRG7
4994:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_HRTIM_TRG8
4995:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_HRTIM_TRG9
4996:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_HRTIM_TRG10
4997:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_EXTI_LINE3       (2)
4998:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_EXTI_LINE15      (1)
4999:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_LPTIM_OUT
5000:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *
5001:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (1) On STM32G4 series, parameter not available on all ADC instances: ADC1, ADC2.\n
5002:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (2) On STM32G4 series, parameter not available on all ADC instances: ADC3, ADC4, ADC5.
5003:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             On this STM32 series, all ADCx are not available on all devices. Refer to device da
5004:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ExternalTriggerEdge This parameter can be one of the following values:
5005:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_RISING
5006:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_FALLING
5007:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_RISINGFALLING
5008:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *
5009:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Note: This parameter is discarded in case of SW start:
5010:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *               parameter "TriggerSource" set to "LL_ADC_INJ_TRIG_SOFTWARE".
5011:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  SequencerNbRanks This parameter can be one of the following values:
5012:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_DISABLE
5013:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_2RANKS
5014:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_3RANKS
5015:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_4RANKS
5016:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  Rank1_Channel This parameter can be one of the following values:
5017:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
5018:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1                 (8)
5019:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2                 (8)
5020:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3                 (8)
5021:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4                 (8)
5022:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5                 (8)
5023:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
5024:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
5025:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
5026:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
5027:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
5028:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
ARM GAS  /tmp/ccEuGJBQ.s 			page 108


5029:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
5030:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
5031:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
5032:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
5033:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
5034:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
5035:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
5036:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT           (7)
5037:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR_ADC1   (1)
5038:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR_ADC5   (5)
5039:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT              (6)
5040:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP1           (1)
5041:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP2           (2)
5042:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP3_ADC2      (2)
5043:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP3_ADC3      (3)
5044:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP4           (5)
5045:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP5           (5)
5046:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP6           (4)
5047:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *
5048:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (1) On STM32G4, parameter available only on ADC instance: ADC1.\n
5049:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (2) On STM32G4, parameter available only on ADC instance: ADC2.\n
5050:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (3) On STM32G4, parameter available only on ADC instance: ADC3.\n
5051:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (4) On STM32G4, parameter available only on ADC instance: ADC4.\n
5052:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (5) On STM32G4, parameter available only on ADC instance: ADC5.\n
5053:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (6) On STM32G4, parameter available only on ADC instances: ADC1, ADC3, ADC5.\n
5054:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (7) On STM32G4, parameter available only on ADC instances: ADC1, ADC3, ADC4, ADC5.\n
5055:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *          -  On this STM32 series, all ADCx are not available on all devices. Refer to device da
5056:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (8) On STM32G4, fast channel allows: 2.5 (sampling) + 12.5 (conversion) = 15 ADC clock 
5057:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             Other channels are slow channels  allows: 6.5 (sampling) + 12.5 (conversion) = 19 A
5058:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  Rank2_Channel This parameter can be one of the following values:
5059:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
5060:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1                 (8)
5061:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2                 (8)
5062:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3                 (8)
5063:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4                 (8)
5064:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5                 (8)
5065:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
5066:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
5067:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
5068:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
5069:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
5070:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
5071:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
5072:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
5073:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
5074:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
5075:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
5076:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
5077:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
5078:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT           (7)
5079:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR_ADC1   (1)
5080:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR_ADC5   (5)
5081:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT              (6)
5082:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP1           (1)
5083:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP2           (2)
5084:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP3_ADC2      (2)
5085:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP3_ADC3      (3)
ARM GAS  /tmp/ccEuGJBQ.s 			page 109


5086:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP4           (5)
5087:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP5           (5)
5088:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP6           (4)
5089:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *
5090:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (1) On STM32G4, parameter available only on ADC instance: ADC1.\n
5091:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (2) On STM32G4, parameter available only on ADC instance: ADC2.\n
5092:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (3) On STM32G4, parameter available only on ADC instance: ADC3.\n
5093:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (4) On STM32G4, parameter available only on ADC instance: ADC4.\n
5094:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (5) On STM32G4, parameter available only on ADC instance: ADC5.\n
5095:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (6) On STM32G4, parameter available only on ADC instances: ADC1, ADC3, ADC5.\n
5096:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (7) On STM32G4, parameter available only on ADC instances: ADC1, ADC3, ADC4, ADC5.\n
5097:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *          -  On this STM32 series, all ADCx are not available on all devices. Refer to device da
5098:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (8) On STM32G4, fast channel allows: 2.5 (sampling) + 12.5 (conversion) = 15 ADC clock 
5099:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             Other channels are slow channels  allows: 6.5 (sampling) + 12.5 (conversion) = 19 A
5100:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  Rank3_Channel This parameter can be one of the following values:
5101:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
5102:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1                 (8)
5103:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2                 (8)
5104:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3                 (8)
5105:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4                 (8)
5106:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5                 (8)
5107:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
5108:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
5109:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
5110:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
5111:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
5112:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
5113:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
5114:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
5115:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
5116:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
5117:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
5118:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
5119:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
5120:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT           (7)
5121:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR_ADC1   (1)
5122:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR_ADC5   (5)
5123:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT              (6)
5124:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP1           (1)
5125:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP2           (2)
5126:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP3_ADC2      (2)
5127:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP3_ADC3      (3)
5128:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP4           (5)
5129:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP5           (5)
5130:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP6           (4)
5131:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *
5132:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (1) On STM32G4, parameter available only on ADC instance: ADC1.\n
5133:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (2) On STM32G4, parameter available only on ADC instance: ADC2.\n
5134:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (3) On STM32G4, parameter available only on ADC instance: ADC3.\n
5135:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (4) On STM32G4, parameter available only on ADC instance: ADC4.\n
5136:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (5) On STM32G4, parameter available only on ADC instance: ADC5.\n
5137:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (6) On STM32G4, parameter available only on ADC instances: ADC1, ADC3, ADC5.\n
5138:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (7) On STM32G4, parameter available only on ADC instances: ADC1, ADC3, ADC4, ADC5.\n
5139:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *          -  On this STM32 series, all ADCx are not available on all devices. Refer to device da
5140:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (8) On STM32G4, fast channel allows: 2.5 (sampling) + 12.5 (conversion) = 15 ADC clock 
5141:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             Other channels are slow channels  allows: 6.5 (sampling) + 12.5 (conversion) = 19 A
5142:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  Rank4_Channel This parameter can be one of the following values:
ARM GAS  /tmp/ccEuGJBQ.s 			page 110


5143:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
5144:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1                 (8)
5145:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2                 (8)
5146:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3                 (8)
5147:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4                 (8)
5148:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5                 (8)
5149:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
5150:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
5151:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
5152:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
5153:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
5154:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
5155:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
5156:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
5157:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
5158:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
5159:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
5160:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
5161:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
5162:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT           (7)
5163:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR_ADC1   (1)
5164:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR_ADC5   (5)
5165:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT              (6)
5166:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP1           (1)
5167:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP2           (2)
5168:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP3_ADC2      (2)
5169:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP3_ADC3      (3)
5170:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP4           (5)
5171:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP5           (5)
5172:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP6           (4)
5173:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *
5174:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (1) On STM32G4, parameter available only on ADC instance: ADC1.\n
5175:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (2) On STM32G4, parameter available only on ADC instance: ADC2.\n
5176:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (3) On STM32G4, parameter available only on ADC instance: ADC3.\n
5177:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (4) On STM32G4, parameter available only on ADC instance: ADC4.\n
5178:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (5) On STM32G4, parameter available only on ADC instance: ADC5.\n
5179:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (6) On STM32G4, parameter available only on ADC instances: ADC1, ADC3, ADC5.\n
5180:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (7) On STM32G4, parameter available only on ADC instances: ADC1, ADC3, ADC4, ADC5.\n
5181:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *          -  On this STM32 series, all ADCx are not available on all devices. Refer to device da
5182:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (8) On STM32G4, fast channel allows: 2.5 (sampling) + 12.5 (conversion) = 15 ADC clock 
5183:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             Other channels are slow channels  allows: 6.5 (sampling) + 12.5 (conversion) = 19 A
5184:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
5185:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
5186:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_ConfigQueueContext(ADC_TypeDef *ADCx,
5187:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                                    uint32_t TriggerSource,
5188:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                                    uint32_t ExternalTriggerEdge,
5189:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                                    uint32_t SequencerNbRanks,
5190:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                                    uint32_t Rank1_Channel,
5191:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                                    uint32_t Rank2_Channel,
5192:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                                    uint32_t Rank3_Channel,
5193:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                                    uint32_t Rank4_Channel)
5194:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
5195:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* Set bits with content of parameter "Rankx_Channel" with bits position    */
5196:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* in register depending on literal "LL_ADC_INJ_RANK_x".                    */
5197:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* Parameters "Rankx_Channel" and "LL_ADC_INJ_RANK_x" are used with masks   */
5198:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* because containing other bits reserved for other purpose.                */
5199:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* If parameter "TriggerSource" is set to SW start, then parameter          */
ARM GAS  /tmp/ccEuGJBQ.s 			page 111


5200:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* "ExternalTriggerEdge" is discarded.                                      */
5201:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   uint32_t is_trigger_not_sw = (uint32_t)((TriggerSource != LL_ADC_INJ_TRIG_SOFTWARE) ? 1UL : 0UL);
5202:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(ADCx->JSQR,
5203:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_JSQR_JEXTSEL |
5204:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_JSQR_JEXTEN  |
5205:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_JSQR_JSQ4    |
5206:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_JSQR_JSQ3    |
5207:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_JSQR_JSQ2    |
5208:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_JSQR_JSQ1    |
5209:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_JSQR_JL,
5210:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              (TriggerSource & ADC_JSQR_JEXTSEL)          |
5211:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              (ExternalTriggerEdge * (is_trigger_not_sw)) |
5212:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              (((Rank4_Channel & ADC_CHANNEL_ID_NUMBER_MASK) >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS)
5213:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              (((Rank3_Channel & ADC_CHANNEL_ID_NUMBER_MASK) >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS)
5214:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              (((Rank2_Channel & ADC_CHANNEL_ID_NUMBER_MASK) >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS)
5215:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              (((Rank1_Channel & ADC_CHANNEL_ID_NUMBER_MASK) >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS)
5216:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              SequencerNbRanks
5217:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****             );
5218:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
5219:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
5220:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
5221:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
5222:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
5223:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
5224:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_Channels Configuration of ADC hierarchical scope: channels
5225:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
5226:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
5227:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
5228:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
5229:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Set sampling time of the selected ADC channel
5230:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Unit: ADC clock cycles.
5231:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this device, sampling time is on channel scope: independently
5232:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         of channel mapped on ADC group regular or injected.
5233:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   In case of internal channel (VrefInt, TempSensor, ...) to be
5234:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         converted:
5235:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         sampling time constraints must be respected (sampling time can be
5236:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         adjusted in function of ADC clock frequency and sampling time
5237:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         setting).
5238:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Refer to device datasheet for timings values (parameters TS_vrefint,
5239:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         TS_temp, ...).
5240:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Conversion time is the addition of sampling time and processing time.
5241:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         On this STM32 series, ADC processing time is:
5242:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - 12.5 ADC clock cycles at ADC resolution 12 bits
5243:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - 10.5 ADC clock cycles at ADC resolution 10 bits
5244:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - 8.5 ADC clock cycles at ADC resolution 8 bits
5245:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - 6.5 ADC clock cycles at ADC resolution 6 bits
5246:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   In case of ADC conversion of internal channel (VrefInt,
5247:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         temperature sensor, ...), a sampling time minimum value
5248:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         is required.
5249:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Refer to device datasheet.
5250:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
5251:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
5252:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
5253:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         on either groups regular or injected.
5254:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll SMPR1    SMP0           LL_ADC_SetChannelSamplingTime\n
5255:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SMPR1    SMP1           LL_ADC_SetChannelSamplingTime\n
5256:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SMPR1    SMP2           LL_ADC_SetChannelSamplingTime\n
ARM GAS  /tmp/ccEuGJBQ.s 			page 112


5257:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SMPR1    SMP3           LL_ADC_SetChannelSamplingTime\n
5258:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SMPR1    SMP4           LL_ADC_SetChannelSamplingTime\n
5259:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SMPR1    SMP5           LL_ADC_SetChannelSamplingTime\n
5260:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SMPR1    SMP6           LL_ADC_SetChannelSamplingTime\n
5261:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SMPR1    SMP7           LL_ADC_SetChannelSamplingTime\n
5262:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SMPR1    SMP8           LL_ADC_SetChannelSamplingTime\n
5263:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SMPR1    SMP9           LL_ADC_SetChannelSamplingTime\n
5264:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SMPR2    SMP10          LL_ADC_SetChannelSamplingTime\n
5265:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SMPR2    SMP11          LL_ADC_SetChannelSamplingTime\n
5266:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SMPR2    SMP12          LL_ADC_SetChannelSamplingTime\n
5267:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SMPR2    SMP13          LL_ADC_SetChannelSamplingTime\n
5268:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SMPR2    SMP14          LL_ADC_SetChannelSamplingTime\n
5269:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SMPR2    SMP15          LL_ADC_SetChannelSamplingTime\n
5270:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SMPR2    SMP16          LL_ADC_SetChannelSamplingTime\n
5271:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SMPR2    SMP17          LL_ADC_SetChannelSamplingTime\n
5272:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SMPR2    SMP18          LL_ADC_SetChannelSamplingTime
5273:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
5274:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  Channel This parameter can be one of the following values:
5275:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
5276:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1                 (8)
5277:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2                 (8)
5278:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3                 (8)
5279:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4                 (8)
5280:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5                 (8)
5281:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
5282:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
5283:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
5284:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
5285:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
5286:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
5287:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
5288:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
5289:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
5290:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
5291:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
5292:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
5293:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
5294:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT           (7)
5295:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR_ADC1   (1)
5296:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR_ADC5   (5)
5297:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT              (6)
5298:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP1           (1)
5299:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP2           (2)
5300:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP3_ADC2      (2)
5301:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP3_ADC3      (3)
5302:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP4           (5)
5303:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP5           (5)
5304:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP6           (4)
5305:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *
5306:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (1) On STM32G4, parameter available only on ADC instance: ADC1.\n
5307:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (2) On STM32G4, parameter available only on ADC instance: ADC2.\n
5308:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (3) On STM32G4, parameter available only on ADC instance: ADC3.\n
5309:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (4) On STM32G4, parameter available only on ADC instance: ADC4.\n
5310:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (5) On STM32G4, parameter available only on ADC instance: ADC5.\n
5311:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (6) On STM32G4, parameter available only on ADC instances: ADC1, ADC3, ADC5.\n
5312:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (7) On STM32G4, parameter available only on ADC instances: ADC1, ADC3, ADC4, ADC5.\n
5313:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *          -  On this STM32 series, all ADCx are not available on all devices. Refer to device da
ARM GAS  /tmp/ccEuGJBQ.s 			page 113


5314:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (8) On STM32G4, fast channel allows: 2.5 (sampling) + 12.5 (conversion) = 15 ADC clock 
5315:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             Other channels are slow channels  allows: 6.5 (sampling) + 12.5 (conversion) = 19 A
5316:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  SamplingTime This parameter can be one of the following values:
5317:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_2CYCLES_5   (1)
5318:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_6CYCLES_5
5319:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_12CYCLES_5
5320:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_24CYCLES_5
5321:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_47CYCLES_5
5322:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_92CYCLES_5
5323:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_247CYCLES_5
5324:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_640CYCLES_5
5325:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *
5326:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (1) On some devices, ADC sampling time 2.5 ADC clock cycles
5327:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             can be replaced by 3.5 ADC clock cycles.
5328:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             Refer to function @ref LL_ADC_SetSamplingTimeCommonConfig().
5329:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
5330:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
5331:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetChannelSamplingTime(ADC_TypeDef *ADCx, uint32_t Channel, uint32_t Sa
5332:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
5333:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* Set bits with content of parameter "SamplingTime" with bits position     */
5334:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* in register and register position depending on parameter "Channel".      */
5335:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* Parameter "Channel" is used with masks because containing                */
5336:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* other bits reserved for other purpose.                                   */
5337:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->SMPR1, ((Channel & ADC_CHANNEL_SMPRX_REGOFFSET_M
5338:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
5339:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(*preg,
5340:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_SMPR1_SMP0 << ((Channel & ADC_CHANNEL_SMPx_BITOFFSET_MASK) >> ADC_CHANNEL_SMPx_BIT
5341:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              SamplingTime   << ((Channel & ADC_CHANNEL_SMPx_BITOFFSET_MASK) >> ADC_CHANNEL_SMPx_BIT
5342:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
5343:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
5344:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
5345:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get sampling time of the selected ADC channel
5346:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Unit: ADC clock cycles.
5347:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this device, sampling time is on channel scope: independently
5348:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         of channel mapped on ADC group regular or injected.
5349:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Conversion time is the addition of sampling time and processing time.
5350:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         On this STM32 series, ADC processing time is:
5351:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - 12.5 ADC clock cycles at ADC resolution 12 bits
5352:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - 10.5 ADC clock cycles at ADC resolution 10 bits
5353:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - 8.5 ADC clock cycles at ADC resolution 8 bits
5354:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - 6.5 ADC clock cycles at ADC resolution 6 bits
5355:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll SMPR1    SMP0           LL_ADC_GetChannelSamplingTime\n
5356:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SMPR1    SMP1           LL_ADC_GetChannelSamplingTime\n
5357:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SMPR1    SMP2           LL_ADC_GetChannelSamplingTime\n
5358:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SMPR1    SMP3           LL_ADC_GetChannelSamplingTime\n
5359:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SMPR1    SMP4           LL_ADC_GetChannelSamplingTime\n
5360:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SMPR1    SMP5           LL_ADC_GetChannelSamplingTime\n
5361:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SMPR1    SMP6           LL_ADC_GetChannelSamplingTime\n
5362:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SMPR1    SMP7           LL_ADC_GetChannelSamplingTime\n
5363:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SMPR1    SMP8           LL_ADC_GetChannelSamplingTime\n
5364:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SMPR1    SMP9           LL_ADC_GetChannelSamplingTime\n
5365:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SMPR2    SMP10          LL_ADC_GetChannelSamplingTime\n
5366:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SMPR2    SMP11          LL_ADC_GetChannelSamplingTime\n
5367:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SMPR2    SMP12          LL_ADC_GetChannelSamplingTime\n
5368:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SMPR2    SMP13          LL_ADC_GetChannelSamplingTime\n
5369:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SMPR2    SMP14          LL_ADC_GetChannelSamplingTime\n
5370:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SMPR2    SMP15          LL_ADC_GetChannelSamplingTime\n
ARM GAS  /tmp/ccEuGJBQ.s 			page 114


5371:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SMPR2    SMP16          LL_ADC_GetChannelSamplingTime\n
5372:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SMPR2    SMP17          LL_ADC_GetChannelSamplingTime\n
5373:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SMPR2    SMP18          LL_ADC_GetChannelSamplingTime
5374:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
5375:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  Channel This parameter can be one of the following values:
5376:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
5377:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1                 (8)
5378:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2                 (8)
5379:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3                 (8)
5380:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4                 (8)
5381:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5                 (8)
5382:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
5383:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
5384:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
5385:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
5386:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
5387:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
5388:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
5389:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
5390:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
5391:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
5392:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
5393:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
5394:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
5395:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT           (7)
5396:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR_ADC1   (1)
5397:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR_ADC5   (5)
5398:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT              (6)
5399:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP1           (1)
5400:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP2           (2)
5401:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP3_ADC2      (2)
5402:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP3_ADC3      (3)
5403:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP4           (5)
5404:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP5           (5)
5405:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP6           (4)
5406:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *
5407:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (1) On STM32G4, parameter available only on ADC instance: ADC1.\n
5408:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (2) On STM32G4, parameter available only on ADC instance: ADC2.\n
5409:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (3) On STM32G4, parameter available only on ADC instance: ADC3.\n
5410:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (4) On STM32G4, parameter available only on ADC instance: ADC4.\n
5411:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (5) On STM32G4, parameter available only on ADC instance: ADC5.\n
5412:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (6) On STM32G4, parameter available only on ADC instances: ADC1, ADC3, ADC5.\n
5413:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (7) On STM32G4, parameter available only on ADC instances: ADC1, ADC3, ADC4, ADC5.\n
5414:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *          -  On this STM32 series, all ADCx are not available on all devices. Refer to device da
5415:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (8) On STM32G4, fast channel allows: 2.5 (sampling) + 12.5 (conversion) = 15 ADC clock 
5416:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             Other channels are slow channels  allows: 6.5 (sampling) + 12.5 (conversion) = 19 A
5417:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
5418:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_2CYCLES_5   (1)
5419:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_6CYCLES_5
5420:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_12CYCLES_5
5421:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_24CYCLES_5
5422:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_47CYCLES_5
5423:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_92CYCLES_5
5424:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_247CYCLES_5
5425:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_640CYCLES_5
5426:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *
5427:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (1) On some devices, ADC sampling time 2.5 ADC clock cycles
ARM GAS  /tmp/ccEuGJBQ.s 			page 115


5428:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             can be replaced by 3.5 ADC clock cycles.
5429:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             Refer to function @ref LL_ADC_SetSamplingTimeCommonConfig().
5430:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
5431:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetChannelSamplingTime(ADC_TypeDef *ADCx, uint32_t Channel)
5432:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
5433:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->SMPR1, ((Channel & ADC_CHANNEL_SMPRX_REGOF
5434:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
5435:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(*preg,
5436:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                              ADC_SMPR1_SMP0 << ((Channel & ADC_CHANNEL_SMPx_BITOFFSET_MASK) >> ADC_
5437:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                     >> ((Channel & ADC_CHANNEL_SMPx_BITOFFSET_MASK) >> ADC_CHANNEL_SMPx_BITOFFSET_P
5438:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                    );
5439:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
5440:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
5441:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
5442:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Set mode single-ended or differential input of the selected
5443:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC channel.
5444:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Channel ending is on channel scope: independently of channel mapped
5445:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         on ADC group regular or injected.
5446:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         In differential mode: Differential measurement is carried out
5447:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         between the selected channel 'i' (positive input) and
5448:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         channel 'i+1' (negative input). Only channel 'i' has to be
5449:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         configured, channel 'i+1' is configured automatically.
5450:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Refer to Reference Manual to ensure the selected channel is
5451:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         available in differential mode.
5452:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         For example, internal channels (VrefInt, TempSensor, ...) are
5453:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         not available in differential mode.
5454:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   When configuring a channel 'i' in differential mode,
5455:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         the channel 'i+1' is not usable separately.
5456:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On STM32G4, some channels are internally fixed to single-ended inputs
5457:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         configuration:
5458:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - ADC1: Channels 12, 15, 16, 17 and 18
5459:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - ADC2: Channels 15, 17 and 18
5460:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - ADC3: Channels 12, 16, 17 and 18            (1)
5461:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - ADC4: Channels 16, 17 and 18                (1)
5462:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - ADC5: Channels 2, 3, 4, 16, 17 and 18       (1)
5463:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (1) ADC3/4/5 are not available on all devices, refer to device datasheet
5464:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             for more details.
5465:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   For ADC channels configured in differential mode, both inputs
5466:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         should be biased at (Vref+)/2 +/-200mV.
5467:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (Vref+ is the analog voltage reference)
5468:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
5469:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
5470:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must be ADC disabled.
5471:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   One or several values can be selected.
5472:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Example: (LL_ADC_CHANNEL_4 | LL_ADC_CHANNEL_12 | ...)
5473:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll DIFSEL   DIFSEL         LL_ADC_SetChannelSingleDiff
5474:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
5475:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  Channel This parameter can be one of the following values:
5476:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
5477:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
5478:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
5479:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
5480:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
5481:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
5482:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
5483:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
5484:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
ARM GAS  /tmp/ccEuGJBQ.s 			page 116


5485:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
5486:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
5487:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
5488:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
5489:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
5490:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
5491:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  SingleDiff This parameter can be a combination of the following values:
5492:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SINGLE_ENDED
5493:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_DIFFERENTIAL_ENDED
5494:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
5495:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
5496:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetChannelSingleDiff(ADC_TypeDef *ADCx, uint32_t Channel, uint32_t Sing
5497:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
5498:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* Bits of channels in single or differential mode are set only for         */
5499:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* differential mode (for single mode, mask of bits allowed to be set is    */
5500:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* shifted out of range of bits of channels in single or differential mode. */
5501:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(ADCx->DIFSEL,
5502:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              Channel & ADC_SINGLEDIFF_CHANNEL_MASK,
5503:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              (Channel & ADC_SINGLEDIFF_CHANNEL_MASK) & (ADC_DIFSEL_DIFSEL >> (SingleDiff & ADC_SING
5504:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
5505:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
5506:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
5507:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get mode single-ended or differential input of the selected
5508:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC channel.
5509:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   When configuring a channel 'i' in differential mode,
5510:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         the channel 'i+1' is not usable separately.
5511:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Therefore, to ensure a channel is configured in single-ended mode,
5512:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         the configuration of channel itself and the channel 'i-1' must be
5513:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         read back (to ensure that the selected channel channel has not been
5514:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         configured in differential mode by the previous channel).
5515:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Refer to Reference Manual to ensure the selected channel is
5516:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         available in differential mode.
5517:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         For example, internal channels (VrefInt, TempSensor, ...) are
5518:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         not available in differential mode.
5519:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   When configuring a channel 'i' in differential mode,
5520:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         the channel 'i+1' is not usable separately.
5521:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On STM32G4, some channels are internally fixed to single-ended inputs
5522:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         configuration:
5523:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - ADC1: Channels 12, 15, 16, 17 and 18
5524:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - ADC2: Channels 15, 17 and 18
5525:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - ADC3: Channels 12, 16, 17 and 18            (1)
5526:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - ADC4: Channels 16, 17 and 18                (1)
5527:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - ADC5: Channels 2, 3, 4, 16, 17 and 18       (1)
5528:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (1) ADC3/4/5 are not available on all devices, refer to device datasheet
5529:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             for more details.
5530:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   One or several values can be selected. In this case, the value
5531:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         returned is null if all channels are in single ended-mode.
5532:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Example: (LL_ADC_CHANNEL_4 | LL_ADC_CHANNEL_12 | ...)
5533:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll DIFSEL   DIFSEL         LL_ADC_GetChannelSingleDiff
5534:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
5535:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  Channel This parameter can be a combination of the following values:
5536:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
5537:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
5538:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
5539:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
5540:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
5541:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
ARM GAS  /tmp/ccEuGJBQ.s 			page 117


5542:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
5543:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
5544:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
5545:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
5546:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
5547:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
5548:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
5549:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
5550:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
5551:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval 0: channel in single-ended mode, else: channel in differential mode
5552:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
5553:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetChannelSingleDiff(ADC_TypeDef *ADCx, uint32_t Channel)
5554:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
5555:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->DIFSEL, (Channel & ADC_SINGLEDIFF_CHANNEL_MASK)));
5556:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
5557:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
5558:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
5559:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
5560:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
5561:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
5562:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_AnalogWatchdog Configuration of ADC transversal scope: an
5563:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
5564:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
5565:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
5566:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
5567:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Set ADC analog watchdog monitored channels:
5568:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         a single channel, multiple channels or all channels,
5569:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         on ADC groups regular and-or injected.
5570:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Once monitored channels are selected, analog watchdog
5571:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         is enabled.
5572:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   In case of need to define a single channel to monitor
5573:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         with analog watchdog from sequencer channel definition,
5574:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         use helper macro @ref __LL_ADC_ANALOGWD_CHANNEL_GROUP().
5575:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, there are 2 kinds of analog watchdog
5576:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         instance:
5577:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - AWD standard (instance AWD1):
5578:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           - channels monitored: can monitor 1 channel or all channels.
5579:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           - groups monitored: ADC groups regular and-or injected.
5580:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           - resolution: resolution is not limited (corresponds to
5581:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             ADC resolution configured).
5582:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - AWD flexible (instances AWD2, AWD3):
5583:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           - channels monitored: flexible on channels monitored, selection is
5584:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             channel wise, from from 1 to all channels.
5585:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             Specificity of this analog watchdog: Multiple channels can
5586:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             be selected. For example:
5587:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             (LL_ADC_AWD_CHANNEL4_REG_INJ | LL_ADC_AWD_CHANNEL5_REG_INJ | ...)
5588:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           - groups monitored: not selection possible (monitoring on both
5589:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             groups regular and injected).
5590:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             Channels selected are monitored on groups regular and injected:
5591:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG_INJ (do not use parameters
5592:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG and LL_ADC_AWD_CHANNELxx_INJ)
5593:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           - resolution: resolution is limited to 8 bits: if ADC resolution is
5594:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             12 bits the 4 LSB are ignored, if ADC resolution is 10 bits
5595:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             the 2 LSB are ignored.
5596:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
5597:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
5598:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
ARM GAS  /tmp/ccEuGJBQ.s 			page 118


5599:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         on either groups regular or injected.
5600:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CFGR     AWD1CH         LL_ADC_SetAnalogWDMonitChannels\n
5601:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         CFGR     AWD1SGL        LL_ADC_SetAnalogWDMonitChannels\n
5602:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         CFGR     AWD1EN         LL_ADC_SetAnalogWDMonitChannels\n
5603:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         CFGR     JAWD1EN        LL_ADC_SetAnalogWDMonitChannels\n
5604:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         AWD2CR   AWD2CH         LL_ADC_SetAnalogWDMonitChannels\n
5605:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         AWD3CR   AWD3CH         LL_ADC_SetAnalogWDMonitChannels
5606:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
5607:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  AWDy This parameter can be one of the following values:
5608:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD1
5609:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD2
5610:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD3
5611:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  AWDChannelGroup This parameter can be one of the following values:
5612:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_DISABLE
5613:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_REG        (0)
5614:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_INJ        (0)
5615:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_REG_INJ
5616:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_REG           (0)
5617:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_INJ           (0)
5618:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_REG_INJ
5619:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_REG           (0)
5620:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_INJ           (0)
5621:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_REG_INJ
5622:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_REG           (0)
5623:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_INJ           (0)
5624:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_REG_INJ
5625:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_REG           (0)
5626:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_INJ           (0)
5627:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_REG_INJ
5628:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_REG           (0)
5629:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_INJ           (0)
5630:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_REG_INJ
5631:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_REG           (0)
5632:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_INJ           (0)
5633:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_REG_INJ
5634:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_REG           (0)
5635:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_INJ           (0)
5636:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_REG_INJ
5637:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_REG           (0)
5638:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_INJ           (0)
5639:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_REG_INJ
5640:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_REG           (0)
5641:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_INJ           (0)
5642:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_REG_INJ
5643:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_REG           (0)
5644:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_INJ           (0)
5645:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_REG_INJ
5646:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_REG          (0)
5647:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_INJ          (0)
5648:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_REG_INJ
5649:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_REG          (0)
5650:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_INJ          (0)
5651:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_REG_INJ
5652:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_REG          (0)
5653:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_INJ          (0)
5654:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_REG_INJ
5655:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_REG          (0)
ARM GAS  /tmp/ccEuGJBQ.s 			page 119


5656:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_INJ          (0)
5657:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_REG_INJ
5658:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_REG          (0)
5659:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_INJ          (0)
5660:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_REG_INJ
5661:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_REG          (0)
5662:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_INJ          (0)
5663:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_REG_INJ
5664:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_REG          (0)
5665:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_INJ          (0)
5666:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_REG_INJ
5667:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_REG          (0)
5668:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_INJ          (0)
5669:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_REG_INJ
5670:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_REG          (0)
5671:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_INJ          (0)
5672:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_REG_INJ
5673:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VREFINT_REG          (0)
5674:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VREFINT_INJ          (0)
5675:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VREFINT_REG_INJ
5676:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_TEMPSENSOR_ADC1_REG  (0)(1)
5677:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_TEMPSENSOR_ADC1_INJ  (0)(1)
5678:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_TEMPSENSOR_ADC1_REG_INJ (1)
5679:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_TEMPSENSOR_ADC5_REG  (0)(5)
5680:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_TEMPSENSOR_ADC5_INJ  (0)(5)
5681:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_TEMPSENSOR_ADC5_REG_INJ (5)
5682:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VBAT_REG             (0)(6)
5683:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VBAT_INJ             (0)(6)
5684:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VBAT_REG_INJ            (6)
5685:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VOPAMP1_REG          (0)(1)
5686:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VOPAMP1_INJ          (0)(1)
5687:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VOPAMP1_REG_INJ         (1)
5688:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VOPAMP2_REG          (0)(2)
5689:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VOPAMP2_INJ          (0)(2)
5690:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VOPAMP2_REG_INJ         (2)
5691:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VOPAMP3_ADC2_REG     (0)(2)
5692:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VOPAMP3_ADC2_INJ     (0)(2)
5693:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VOPAMP3_ADC2_REG_INJ    (2)
5694:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VOPAMP3_ADC3_REG     (0)(3)
5695:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VOPAMP3_ADC3_INJ     (0)(3)
5696:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VOPAMP3_ADC3_REG_INJ    (3)
5697:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VOPAMP4_REG          (0)(5)
5698:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VOPAMP4_INJ          (0)(5)
5699:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VOPAMP4_REG_INJ         (5)
5700:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VOPAMP5_REG          (0)(5)
5701:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VOPAMP5_INJ          (0)(5)
5702:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VOPAMP5_REG_INJ         (5)
5703:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VOPAMP6_REG          (0)(4)
5704:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VOPAMP6_INJ          (0)(4)
5705:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VOPAMP6_REG_INJ         (4)
5706:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *
5707:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (0) On STM32G4, parameter available only on analog watchdog number: AWD1.\n
5708:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (1) On STM32G4, parameter available only on ADC instance: ADC1.\n
5709:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (2) On STM32G4, parameter available only on ADC instance: ADC2.\n
5710:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (3) On STM32G4, parameter available only on ADC instance: ADC3.\n
5711:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (4) On STM32G4, parameter available only on ADC instance: ADC4.\n
5712:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (5) On STM32G4, parameter available only on ADC instance: ADC5.\n
ARM GAS  /tmp/ccEuGJBQ.s 			page 120


5713:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (6) On STM32G4, parameter available only on ADC instances: ADC1, ADC3, ADC5.\n
5714:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (7) On STM32G4, parameter available only on ADC instances: ADC1, ADC3, ADC4, ADC5.\n
5715:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *          -  On this STM32 series, all ADCx are not available on all devices. Refer to device da
5716:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
5717:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
5718:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetAnalogWDMonitChannels(ADC_TypeDef *ADCx, uint32_t AWDy, uint32_t AWD
5719:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
5720:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* Set bits with content of parameter "AWDChannelGroup" with bits position  */
5721:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* in register and register position depending on parameter "AWDy".         */
5722:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* Parameters "AWDChannelGroup" and "AWDy" are used with masks because      */
5723:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* containing other bits reserved for other purpose.                        */
5724:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->CFGR, ((AWDy & ADC_AWD_CRX_REGOFFSET_MASK) >> AD
5725:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              + ((AWDy & ADC_AWD_CR12_REGOFFSETGAP_MASK) * ADC_AWD_C
5726:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
5727:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(*preg,
5728:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              (AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK),
5729:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              AWDChannelGroup & AWDy);
5730:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
5731:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
5732:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
5733:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC analog watchdog monitored channel.
5734:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Usage of the returned channel number:
5735:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - To reinject this channel into another function LL_ADC_xxx:
5736:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           the returned channel number is only partly formatted on definition
5737:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           of literals LL_ADC_CHANNEL_x. Therefore, it has to be compared
5738:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           with parts of literals LL_ADC_CHANNEL_x or using
5739:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           helper macro @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
5740:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           Then the selected literal LL_ADC_CHANNEL_x can be used
5741:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           as parameter for another function.
5742:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - To get the channel number in decimal format:
5743:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           process the returned value with the helper macro
5744:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
5745:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           Applicable only when the analog watchdog is set to monitor
5746:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           one channel.
5747:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, there are 2 kinds of analog watchdog
5748:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         instance:
5749:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - AWD standard (instance AWD1):
5750:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           - channels monitored: can monitor 1 channel or all channels.
5751:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           - groups monitored: ADC groups regular and-or injected.
5752:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           - resolution: resolution is not limited (corresponds to
5753:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             ADC resolution configured).
5754:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - AWD flexible (instances AWD2, AWD3):
5755:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           - channels monitored: flexible on channels monitored, selection is
5756:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             channel wise, from from 1 to all channels.
5757:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             Specificity of this analog watchdog: Multiple channels can
5758:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             be selected. For example:
5759:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             (LL_ADC_AWD_CHANNEL4_REG_INJ | LL_ADC_AWD_CHANNEL5_REG_INJ | ...)
5760:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           - groups monitored: not selection possible (monitoring on both
5761:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             groups regular and injected).
5762:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             Channels selected are monitored on groups regular and injected:
5763:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG_INJ (do not use parameters
5764:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG and LL_ADC_AWD_CHANNELxx_INJ)
5765:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           - resolution: resolution is limited to 8 bits: if ADC resolution is
5766:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             12 bits the 4 LSB are ignored, if ADC resolution is 10 bits
5767:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             the 2 LSB are ignored.
5768:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
5769:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
ARM GAS  /tmp/ccEuGJBQ.s 			page 121


5770:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
5771:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         on either groups regular or injected.
5772:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CFGR     AWD1CH         LL_ADC_GetAnalogWDMonitChannels\n
5773:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         CFGR     AWD1SGL        LL_ADC_GetAnalogWDMonitChannels\n
5774:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         CFGR     AWD1EN         LL_ADC_GetAnalogWDMonitChannels\n
5775:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         CFGR     JAWD1EN        LL_ADC_GetAnalogWDMonitChannels\n
5776:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         AWD2CR   AWD2CH         LL_ADC_GetAnalogWDMonitChannels\n
5777:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         AWD3CR   AWD3CH         LL_ADC_GetAnalogWDMonitChannels
5778:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
5779:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  AWDy This parameter can be one of the following values:
5780:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD1
5781:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD2 (1)
5782:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD3 (1)
5783:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *
5784:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (1) On this AWD number, monitored channel can be retrieved
5785:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             if only 1 channel is programmed (or none or all channels).
5786:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             This function cannot retrieve monitored channel if
5787:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             multiple channels are programmed simultaneously
5788:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             by bitfield.
5789:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
5790:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_DISABLE
5791:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_REG        (0)
5792:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_INJ        (0)
5793:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_REG_INJ
5794:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_REG           (0)
5795:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_INJ           (0)
5796:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_REG_INJ
5797:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_REG           (0)
5798:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_INJ           (0)
5799:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_REG_INJ
5800:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_REG           (0)
5801:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_INJ           (0)
5802:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_REG_INJ
5803:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_REG           (0)
5804:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_INJ           (0)
5805:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_REG_INJ
5806:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_REG           (0)
5807:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_INJ           (0)
5808:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_REG_INJ
5809:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_REG           (0)
5810:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_INJ           (0)
5811:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_REG_INJ
5812:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_REG           (0)
5813:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_INJ           (0)
5814:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_REG_INJ
5815:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_REG           (0)
5816:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_INJ           (0)
5817:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_REG_INJ
5818:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_REG           (0)
5819:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_INJ           (0)
5820:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_REG_INJ
5821:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_REG           (0)
5822:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_INJ           (0)
5823:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_REG_INJ
5824:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_REG          (0)
5825:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_INJ          (0)
5826:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_REG_INJ
ARM GAS  /tmp/ccEuGJBQ.s 			page 122


5827:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_REG          (0)
5828:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_INJ          (0)
5829:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_REG_INJ
5830:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_REG          (0)
5831:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_INJ          (0)
5832:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_REG_INJ
5833:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_REG          (0)
5834:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_INJ          (0)
5835:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_REG_INJ
5836:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_REG          (0)
5837:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_INJ          (0)
5838:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_REG_INJ
5839:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_REG          (0)
5840:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_INJ          (0)
5841:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_REG_INJ
5842:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_REG          (0)
5843:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_INJ          (0)
5844:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_REG_INJ
5845:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_REG          (0)
5846:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_INJ          (0)
5847:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_REG_INJ
5848:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_REG          (0)
5849:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_INJ          (0)
5850:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_REG_INJ
5851:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *
5852:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (0) On STM32G4, parameter available only on analog watchdog number: AWD1.
5853:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
5854:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetAnalogWDMonitChannels(ADC_TypeDef *ADCx, uint32_t AWDy)
5855:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
5856:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->CFGR, ((AWDy & ADC_AWD_CRX_REGOFFSET_MASK)
5857:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                                    + ((AWDy & ADC_AWD_CR12_REGOFFSETGAP_MASK) * ADC
5858:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
5859:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   uint32_t AnalogWDMonitChannels = (READ_BIT(*preg, AWDy) & AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK);
5860:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
5861:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* If "AnalogWDMonitChannels" == 0, then the selected AWD is disabled       */
5862:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* (parameter value LL_ADC_AWD_DISABLE).                                    */
5863:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* Else, the selected AWD is enabled and is monitoring a group of channels  */
5864:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* or a single channel.                                                     */
5865:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   if (AnalogWDMonitChannels != 0UL)
5866:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   {
5867:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****     if (AWDy == LL_ADC_AWD1)
5868:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****     {
5869:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****       if ((AnalogWDMonitChannels & ADC_CFGR_AWD1SGL) == 0UL)
5870:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****       {
5871:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****         /* AWD monitoring a group of channels */
5872:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****         AnalogWDMonitChannels = ((AnalogWDMonitChannels
5873:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                   | (ADC_AWD_CR23_CHANNEL_MASK)
5874:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                  )
5875:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                  & (~(ADC_CFGR_AWD1CH))
5876:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                 );
5877:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****       }
5878:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****       else
5879:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****       {
5880:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****         /* AWD monitoring a single channel */
5881:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****         AnalogWDMonitChannels = (AnalogWDMonitChannels
5882:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                  | (ADC_AWD2CR_AWD2CH_0 << (AnalogWDMonitChannels >> ADC_CFGR_AWD1C
5883:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                 );
ARM GAS  /tmp/ccEuGJBQ.s 			page 123


5884:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****       }
5885:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****     }
5886:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****     else
5887:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****     {
5888:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****       if ((AnalogWDMonitChannels & ADC_AWD_CR23_CHANNEL_MASK) == ADC_AWD_CR23_CHANNEL_MASK)
5889:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****       {
5890:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****         /* AWD monitoring a group of channels */
5891:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****         AnalogWDMonitChannels = (ADC_AWD_CR23_CHANNEL_MASK
5892:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                  | ((ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN))
5893:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                 );
5894:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****       }
5895:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****       else
5896:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****       {
5897:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****         /* AWD monitoring a single channel */
5898:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****         /* AWD monitoring a group of channels */
5899:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****         AnalogWDMonitChannels = (AnalogWDMonitChannels
5900:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                  | (ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN | ADC_CFGR_AWD1SGL)
5901:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                  | (__LL_ADC_CHANNEL_TO_DECIMAL_NB(AnalogWDMonitChannels) << ADC_CF
5902:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                 );
5903:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****       }
5904:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****     }
5905:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   }
5906:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
5907:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return AnalogWDMonitChannels;
5908:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
5909:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
5910:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
5911:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Set ADC analog watchdog thresholds value of both thresholds
5912:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         high and low.
5913:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   If value of only one threshold high or low must be set,
5914:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         use function @ref LL_ADC_SetAnalogWDThresholds().
5915:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   In case of ADC resolution different of 12 bits,
5916:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         analog watchdog thresholds data require a specific shift.
5917:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Use helper macro @ref __LL_ADC_ANALOGWD_SET_THRESHOLD_RESOLUTION().
5918:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, there are 2 kinds of analog watchdog
5919:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         instance:
5920:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - AWD standard (instance AWD1):
5921:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           - channels monitored: can monitor 1 channel or all channels.
5922:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           - groups monitored: ADC groups regular and-or injected.
5923:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           - resolution: resolution is not limited (corresponds to
5924:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             ADC resolution configured).
5925:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - AWD flexible (instances AWD2, AWD3):
5926:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           - channels monitored: flexible on channels monitored, selection is
5927:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             channel wise, from from 1 to all channels.
5928:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             Specificity of this analog watchdog: Multiple channels can
5929:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             be selected. For example:
5930:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             (LL_ADC_AWD_CHANNEL4_REG_INJ | LL_ADC_AWD_CHANNEL5_REG_INJ | ...)
5931:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           - groups monitored: not selection possible (monitoring on both
5932:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             groups regular and injected).
5933:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             Channels selected are monitored on groups regular and injected:
5934:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG_INJ (do not use parameters
5935:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG and LL_ADC_AWD_CHANNELxx_INJ)
5936:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           - resolution: resolution is limited to 8 bits: if ADC resolution is
5937:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             12 bits the 4 LSB are ignored, if ADC resolution is 10 bits
5938:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             the 2 LSB are ignored.
5939:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   If ADC oversampling is enabled, ADC analog watchdog thresholds are
5940:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         impacted: the comparison of analog watchdog thresholds is done on
ARM GAS  /tmp/ccEuGJBQ.s 			page 124


5941:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         oversampling final computation (after ratio and shift application):
5942:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC data register bitfield [15:4] (12 most significant bits).
5943:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll TR1      HT1            LL_ADC_ConfigAnalogWDThresholds\n
5944:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         TR2      HT2            LL_ADC_ConfigAnalogWDThresholds\n
5945:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         TR3      HT3            LL_ADC_ConfigAnalogWDThresholds\n
5946:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         TR1      LT1            LL_ADC_ConfigAnalogWDThresholds\n
5947:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         TR2      LT2            LL_ADC_ConfigAnalogWDThresholds\n
5948:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         TR3      LT3            LL_ADC_ConfigAnalogWDThresholds
5949:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
5950:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  AWDy This parameter can be one of the following values:
5951:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD1
5952:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD2
5953:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD3
5954:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  AWDThresholdHighValue Value between Min_Data=0x000 and Max_Data=0xFFF
5955:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  AWDThresholdLowValue Value between Min_Data=0x000 and Max_Data=0xFFF
5956:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
5957:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
5958:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ConfigAnalogWDThresholds(ADC_TypeDef *ADCx, uint32_t AWDy, uint32_t AWD
5959:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                                      uint32_t AWDThresholdLowValue)
5960:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
5961:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* Set bits with content of parameter "AWDThresholdxxxValue" with bits      */
5962:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* position in register and register position depending on parameter        */
5963:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* "AWDy".                                                                  */
5964:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* Parameters "AWDy" and "AWDThresholdxxxValue" are used with masks because */
5965:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* containing other bits reserved for other purpose.                        */
5966:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->TR1, ((AWDy & ADC_AWD_TRX_REGOFFSET_MASK) >> ADC
5967:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
5968:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(*preg,
5969:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_TR1_HT1 | ADC_TR1_LT1,
5970:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              (AWDThresholdHighValue << ADC_TR1_HT1_BITOFFSET_POS) | AWDThresholdLowValue);
5971:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
5972:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
5973:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
5974:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Set ADC analog watchdog threshold value of threshold
5975:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         high or low.
5976:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   If values of both thresholds high or low must be set,
5977:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         use function @ref LL_ADC_ConfigAnalogWDThresholds().
5978:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   In case of ADC resolution different of 12 bits,
5979:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         analog watchdog thresholds data require a specific shift.
5980:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Use helper macro @ref __LL_ADC_ANALOGWD_SET_THRESHOLD_RESOLUTION().
5981:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, there are 2 kinds of analog watchdog
5982:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         instance:
5983:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - AWD standard (instance AWD1):
5984:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           - channels monitored: can monitor 1 channel or all channels.
5985:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           - groups monitored: ADC groups regular and-or injected.
5986:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           - resolution: resolution is not limited (corresponds to
5987:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             ADC resolution configured).
5988:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - AWD flexible (instances AWD2, AWD3):
5989:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           - channels monitored: flexible on channels monitored, selection is
5990:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             channel wise, from from 1 to all channels.
5991:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             Specificity of this analog watchdog: Multiple channels can
5992:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             be selected. For example:
5993:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             (LL_ADC_AWD_CHANNEL4_REG_INJ | LL_ADC_AWD_CHANNEL5_REG_INJ | ...)
5994:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           - groups monitored: not selection possible (monitoring on both
5995:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             groups regular and injected).
5996:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             Channels selected are monitored on groups regular and injected:
5997:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG_INJ (do not use parameters
ARM GAS  /tmp/ccEuGJBQ.s 			page 125


5998:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG and LL_ADC_AWD_CHANNELxx_INJ)
5999:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           - resolution: resolution is limited to 8 bits: if ADC resolution is
6000:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             12 bits the 4 LSB are ignored, if ADC resolution is 10 bits
6001:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             the 2 LSB are ignored.
6002:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   If ADC oversampling is enabled, ADC analog watchdog thresholds are
6003:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         impacted: the comparison of analog watchdog thresholds is done on
6004:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         oversampling final computation (after ratio and shift application):
6005:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC data register bitfield [15:4] (12 most significant bits).
6006:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is not conditioned to
6007:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
6008:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC can be disabled, enabled with or without conversion on going
6009:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         on either ADC groups regular or injected.
6010:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll TR1      HT1            LL_ADC_SetAnalogWDThresholds\n
6011:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         TR2      HT2            LL_ADC_SetAnalogWDThresholds\n
6012:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         TR3      HT3            LL_ADC_SetAnalogWDThresholds\n
6013:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         TR1      LT1            LL_ADC_SetAnalogWDThresholds\n
6014:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         TR2      LT2            LL_ADC_SetAnalogWDThresholds\n
6015:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         TR3      LT3            LL_ADC_SetAnalogWDThresholds
6016:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
6017:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  AWDy This parameter can be one of the following values:
6018:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD1
6019:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD2
6020:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD3
6021:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  AWDThresholdsHighLow This parameter can be one of the following values:
6022:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_HIGH
6023:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_LOW
6024:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  AWDThresholdValue Value between Min_Data=0x000 and Max_Data=0xFFF
6025:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
6026:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
6027:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetAnalogWDThresholds(ADC_TypeDef *ADCx, uint32_t AWDy, uint32_t AWDThr
6028:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                                   uint32_t AWDThresholdValue)
6029:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
6030:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* Set bits with content of parameter "AWDThresholdValue" with bits         */
6031:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* position in register and register position depending on parameters       */
6032:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* "AWDThresholdsHighLow" and "AWDy".                                       */
6033:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* Parameters "AWDy" and "AWDThresholdValue" are used with masks because    */
6034:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* containing other bits reserved for other purpose.                        */
6035:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->TR1,
6036:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              ((AWDy & ADC_AWD_TRX_REGOFFSET_MASK) >> ADC_AWD_TRX_RE
6037:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
6038:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(*preg,
6039:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              AWDThresholdsHighLow,
6040:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              AWDThresholdValue << ((AWDThresholdsHighLow & ADC_AWD_TRX_BIT_HIGH_MASK) >> ADC_AWD_TR
6041:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
6042:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
6043:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
6044:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC analog watchdog threshold value of threshold high,
6045:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         threshold low or raw data with ADC thresholds high and low
6046:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         concatenated.
6047:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   If raw data with ADC thresholds high and low is retrieved,
6048:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         the data of each threshold high or low can be isolated
6049:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         using helper macro:
6050:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @ref __LL_ADC_ANALOGWD_THRESHOLDS_HIGH_LOW().
6051:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   In case of ADC resolution different of 12 bits,
6052:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         analog watchdog thresholds data require a specific shift.
6053:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Use helper macro @ref __LL_ADC_ANALOGWD_GET_THRESHOLD_RESOLUTION().
6054:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll TR1      HT1            LL_ADC_GetAnalogWDThresholds\n
ARM GAS  /tmp/ccEuGJBQ.s 			page 126


6055:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         TR2      HT2            LL_ADC_GetAnalogWDThresholds\n
6056:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         TR3      HT3            LL_ADC_GetAnalogWDThresholds\n
6057:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         TR1      LT1            LL_ADC_GetAnalogWDThresholds\n
6058:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         TR2      LT2            LL_ADC_GetAnalogWDThresholds\n
6059:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         TR3      LT3            LL_ADC_GetAnalogWDThresholds
6060:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
6061:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  AWDy This parameter can be one of the following values:
6062:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD1
6063:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD2
6064:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD3
6065:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  AWDThresholdsHighLow This parameter can be one of the following values:
6066:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_HIGH
6067:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_LOW
6068:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLDS_HIGH_LOW
6069:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
6070:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
6071:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetAnalogWDThresholds(ADC_TypeDef *ADCx, uint32_t AWDy, uint32_t AW
6072:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
6073:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->TR1,
6074:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                                    ((AWDy & ADC_AWD_TRX_REGOFFSET_MASK) >> ADC_AWD_
6075:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
6076:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(*preg,
6077:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                              (AWDThresholdsHighLow | ADC_TR1_LT1))
6078:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                     >> (((AWDThresholdsHighLow & ADC_AWD_TRX_BIT_HIGH_MASK) >> ADC_AWD_TRX_BIT_HIGH
6079:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                         & ~(AWDThresholdsHighLow & ADC_TR1_LT1)));
6080:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
6081:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
6082:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
6083:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Set ADC analog watchdog filtering configuration
6084:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6085:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
6086:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
6087:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         on either groups regular or injected.
6088:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, this feature is only available on first
6089:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         analog watchdog (AWD1)
6090:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll TR1      AWDFILT        LL_ADC_SetAWDFilteringConfiguration
6091:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
6092:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  AWDy This parameter can be one of the following values:
6093:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD1
6094:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  FilteringConfig This parameter can be one of the following values:
6095:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_FILTERING_NONE
6096:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_FILTERING_2SAMPLES
6097:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_FILTERING_3SAMPLES
6098:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_FILTERING_4SAMPLES
6099:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_FILTERING_5SAMPLES
6100:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_FILTERING_6SAMPLES
6101:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_FILTERING_7SAMPLES
6102:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_FILTERING_8SAMPLES
6103:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
6104:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
6105:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetAWDFilteringConfiguration(ADC_TypeDef *ADCx, uint32_t AWDy, uint32_t
6106:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
6107:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* Prevent unused argument(s) compilation warning */
6108:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   (void)(AWDy);
6109:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(ADCx->TR1, ADC_TR1_AWDFILT, FilteringConfig);
6110:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
6111:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
ARM GAS  /tmp/ccEuGJBQ.s 			page 127


6112:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
6113:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC analog watchdog filtering configuration
6114:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, this feature is only available on first
6115:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         analog watchdog (AWD1)
6116:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll TR1      AWDFILT        LL_ADC_GetAWDFilteringConfiguration
6117:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
6118:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  AWDy This parameter can be one of the following values:
6119:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD1
6120:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Returned value can be:
6121:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_FILTERING_NONE
6122:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_FILTERING_2SAMPLES
6123:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_FILTERING_3SAMPLES
6124:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_FILTERING_4SAMPLES
6125:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_FILTERING_5SAMPLES
6126:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_FILTERING_6SAMPLES
6127:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_FILTERING_7SAMPLES
6128:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_FILTERING_8SAMPLES
6129:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
6130:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetAWDFilteringConfiguration(ADC_TypeDef *ADCx, uint32_t AWDy)
6131:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
6132:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* Prevent unused argument(s) compilation warning */
6133:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   (void)(AWDy);
6134:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->TR1, ADC_TR1_AWDFILT));
6135:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
6136:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
6137:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
6138:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
6139:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
6140:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
6141:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_oversampling Configuration of ADC transversal scope: over
6142:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
6143:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
6144:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
6145:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
6146:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Set ADC oversampling scope: ADC groups regular and-or injected
6147:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (availability of ADC group injected depends on STM32 families).
6148:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   If both groups regular and injected are selected,
6149:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         specify behavior of ADC group injected interrupting
6150:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         group regular: when ADC group injected is triggered,
6151:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         the oversampling on ADC group regular is either
6152:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         temporary stopped and continued, or resumed from start
6153:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (oversampler buffer reset).
6154:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6155:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
6156:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
6157:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         on either groups regular or injected.
6158:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CFGR2    ROVSE          LL_ADC_SetOverSamplingScope\n
6159:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         CFGR2    JOVSE          LL_ADC_SetOverSamplingScope\n
6160:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         CFGR2    ROVSM          LL_ADC_SetOverSamplingScope
6161:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
6162:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  OvsScope This parameter can be one of the following values:
6163:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_DISABLE
6164:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_GRP_REGULAR_CONTINUED
6165:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_GRP_REGULAR_RESUMED
6166:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_GRP_INJECTED
6167:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_GRP_INJ_REG_RESUMED
6168:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
ARM GAS  /tmp/ccEuGJBQ.s 			page 128


6169:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
6170:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetOverSamplingScope(ADC_TypeDef *ADCx, uint32_t OvsScope)
6171:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
6172:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR2, ADC_CFGR2_ROVSE | ADC_CFGR2_JOVSE | ADC_CFGR2_ROVSM, OvsScope);
6173:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
6174:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
6175:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
6176:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC oversampling scope: ADC groups regular and-or injected
6177:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (availability of ADC group injected depends on STM32 families).
6178:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   If both groups regular and injected are selected,
6179:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         specify behavior of ADC group injected interrupting
6180:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         group regular: when ADC group injected is triggered,
6181:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         the oversampling on ADC group regular is either
6182:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         temporary stopped and continued, or resumed from start
6183:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (oversampler buffer reset).
6184:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CFGR2    ROVSE          LL_ADC_GetOverSamplingScope\n
6185:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         CFGR2    JOVSE          LL_ADC_GetOverSamplingScope\n
6186:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         CFGR2    ROVSM          LL_ADC_GetOverSamplingScope
6187:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
6188:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
6189:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_DISABLE
6190:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_GRP_REGULAR_CONTINUED
6191:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_GRP_REGULAR_RESUMED
6192:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_GRP_INJECTED
6193:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_GRP_INJ_REG_RESUMED
6194:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
6195:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOverSamplingScope(ADC_TypeDef *ADCx)
6196:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
6197:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR2, ADC_CFGR2_ROVSE | ADC_CFGR2_JOVSE | ADC_CFGR2_ROVSM));
6198:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
6199:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
6200:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
6201:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Set ADC oversampling discontinuous mode (triggered mode)
6202:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         on the selected ADC group.
6203:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Number of oversampled conversions are done either in:
6204:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - continuous mode (all conversions of oversampling ratio
6205:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           are done from 1 trigger)
6206:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - discontinuous mode (each conversion of oversampling ratio
6207:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           needs a trigger)
6208:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6209:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
6210:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
6211:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         on group regular.
6212:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, oversampling discontinuous mode
6213:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (triggered mode) can be used only when oversampling is
6214:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         set on group regular only and in resumed mode.
6215:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CFGR2    TROVS          LL_ADC_SetOverSamplingDiscont
6216:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
6217:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  OverSamplingDiscont This parameter can be one of the following values:
6218:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_REG_CONT
6219:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_REG_DISCONT
6220:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
6221:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
6222:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetOverSamplingDiscont(ADC_TypeDef *ADCx, uint32_t OverSamplingDiscont)
6223:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
6224:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR2, ADC_CFGR2_TROVS, OverSamplingDiscont);
6225:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
ARM GAS  /tmp/ccEuGJBQ.s 			page 129


6226:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
6227:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
6228:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC oversampling discontinuous mode (triggered mode)
6229:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         on the selected ADC group.
6230:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Number of oversampled conversions are done either in:
6231:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - continuous mode (all conversions of oversampling ratio
6232:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           are done from 1 trigger)
6233:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - discontinuous mode (each conversion of oversampling ratio
6234:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           needs a trigger)
6235:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CFGR2    TROVS          LL_ADC_GetOverSamplingDiscont
6236:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
6237:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
6238:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_REG_CONT
6239:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_REG_DISCONT
6240:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
6241:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOverSamplingDiscont(ADC_TypeDef *ADCx)
6242:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
6243:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR2, ADC_CFGR2_TROVS));
6244:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
6245:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
6246:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
6247:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Set ADC oversampling
6248:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (impacting both ADC groups regular and injected)
6249:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   This function set the 2 items of oversampling configuration:
6250:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - ratio
6251:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - shift
6252:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6253:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
6254:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
6255:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         on either groups regular or injected.
6256:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CFGR2    OVSS           LL_ADC_ConfigOverSamplingRatioShift\n
6257:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         CFGR2    OVSR           LL_ADC_ConfigOverSamplingRatioShift
6258:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
6259:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  Ratio This parameter can be one of the following values:
6260:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_2
6261:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_4
6262:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_8
6263:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_16
6264:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_32
6265:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_64
6266:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_128
6267:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_256
6268:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  Shift This parameter can be one of the following values:
6269:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_NONE
6270:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_1
6271:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_2
6272:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_3
6273:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_4
6274:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_5
6275:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_6
6276:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_7
6277:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_8
6278:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
6279:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
6280:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ConfigOverSamplingRatioShift(ADC_TypeDef *ADCx, uint32_t Ratio, uint32_
6281:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
6282:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR2, (ADC_CFGR2_OVSS | ADC_CFGR2_OVSR), (Shift | Ratio));
ARM GAS  /tmp/ccEuGJBQ.s 			page 130


6283:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
6284:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
6285:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
6286:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC oversampling ratio
6287:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *        (impacting both ADC groups regular and injected)
6288:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CFGR2    OVSR           LL_ADC_GetOverSamplingRatio
6289:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
6290:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Ratio This parameter can be one of the following values:
6291:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_2
6292:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_4
6293:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_8
6294:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_16
6295:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_32
6296:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_64
6297:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_128
6298:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_256
6299:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
6300:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOverSamplingRatio(ADC_TypeDef *ADCx)
6301:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
6302:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR2, ADC_CFGR2_OVSR));
6303:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
6304:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
6305:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
6306:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC oversampling shift
6307:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *        (impacting both ADC groups regular and injected)
6308:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CFGR2    OVSS           LL_ADC_GetOverSamplingShift
6309:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
6310:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Shift This parameter can be one of the following values:
6311:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_NONE
6312:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_1
6313:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_2
6314:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_3
6315:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_4
6316:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_5
6317:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_6
6318:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_7
6319:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_8
6320:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
6321:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOverSamplingShift(ADC_TypeDef *ADCx)
6322:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
6323:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR2, ADC_CFGR2_OVSS));
6324:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
6325:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
6326:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
6327:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
6328:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
6329:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
6330:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_Multimode Configuration of ADC hierarchical scope: multim
6331:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
6332:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
6333:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
6334:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #if defined(ADC_MULTIMODE_SUPPORT)
6335:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
6336:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Set ADC multimode configuration to operate in independent mode
6337:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         or multimode (for devices with several ADC instances).
6338:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   If multimode configuration: the selected ADC instance is
6339:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         either master or slave depending on hardware.
ARM GAS  /tmp/ccEuGJBQ.s 			page 131


6340:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Refer to reference manual.
6341:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6342:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
6343:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         All ADC instances of the ADC common group must be disabled.
6344:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         This check can be done with function @ref LL_ADC_IsEnabled() for each
6345:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC instance or by using helper macro
6346:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @ref __LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE().
6347:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CCR      DUAL           LL_ADC_SetMultimode
6348:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
6349:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
6350:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  Multimode This parameter can be one of the following values:
6351:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_INDEPENDENT
6352:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_REG_SIMULT
6353:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_REG_INTERL
6354:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_INJ_SIMULT
6355:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_INJ_ALTERN
6356:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_REG_SIM_INJ_SIM
6357:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_REG_SIM_INJ_ALT
6358:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_REG_INT_INJ_SIM
6359:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
6360:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
6361:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetMultimode(ADC_Common_TypeDef *ADCxy_COMMON, uint32_t Multimode)
6362:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
6363:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(ADCxy_COMMON->CCR, ADC_CCR_DUAL, Multimode);
6364:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
6365:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
6366:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
6367:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC multimode configuration to operate in independent mode
6368:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         or multimode (for devices with several ADC instances).
6369:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   If multimode configuration: the selected ADC instance is
6370:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         either master or slave depending on hardware.
6371:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Refer to reference manual.
6372:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CCR      DUAL           LL_ADC_GetMultimode
6373:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
6374:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
6375:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
6376:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_INDEPENDENT
6377:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_REG_SIMULT
6378:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_REG_INTERL
6379:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_INJ_SIMULT
6380:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_INJ_ALTERN
6381:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_REG_SIM_INJ_SIM
6382:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_REG_SIM_INJ_ALT
6383:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_REG_INT_INJ_SIM
6384:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
6385:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetMultimode(ADC_Common_TypeDef *ADCxy_COMMON)
6386:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
6387:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCxy_COMMON->CCR, ADC_CCR_DUAL));
6388:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
6389:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
6390:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
6391:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Set ADC multimode conversion data transfer: no transfer
6392:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         or transfer by DMA.
6393:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   If ADC multimode transfer by DMA is not selected:
6394:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         each ADC uses its own DMA channel, with its individual
6395:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         DMA transfer settings.
6396:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         If ADC multimode transfer by DMA is selected:
ARM GAS  /tmp/ccEuGJBQ.s 			page 132


6397:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         One DMA channel is used for both ADC (DMA of ADC master)
6398:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Specifies the DMA requests mode:
6399:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - Limited mode (One shot mode): DMA transfer requests are stopped
6400:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           when number of DMA data transfers (number of
6401:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           ADC conversions) is reached.
6402:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode non-circular.
6403:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - Unlimited mode: DMA transfer requests are unlimited,
6404:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           whatever number of DMA data transfers (number of
6405:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           ADC conversions).
6406:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode circular.
6407:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   If ADC DMA requests mode is set to unlimited and DMA is set to
6408:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         mode non-circular:
6409:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         when DMA transfers size will be reached, DMA will stop transfers of
6410:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC conversions data ADC will raise an overrun error
6411:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (overrun flag and interruption if enabled).
6412:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   How to retrieve multimode conversion data:
6413:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Whatever multimode transfer by DMA setting: using function
6414:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @ref LL_ADC_REG_ReadMultiConversionData32().
6415:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         If ADC multimode transfer by DMA is selected: conversion data
6416:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         is a raw data with ADC master and slave concatenated.
6417:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         A macro is available to get the conversion data of
6418:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC master or ADC slave: see helper macro
6419:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @ref __LL_ADC_MULTI_CONV_DATA_MASTER_SLAVE().
6420:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6421:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
6422:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         All ADC instances of the ADC common group must be disabled
6423:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         or enabled without conversion on going on group regular.
6424:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CCR      MDMA           LL_ADC_SetMultiDMATransfer\n
6425:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         CCR      DMACFG         LL_ADC_SetMultiDMATransfer
6426:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
6427:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
6428:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  MultiDMATransfer This parameter can be one of the following values:
6429:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_REG_DMA_EACH_ADC
6430:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_REG_DMA_LIMIT_RES12_10B
6431:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_REG_DMA_LIMIT_RES8_6B
6432:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_REG_DMA_UNLMT_RES12_10B
6433:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_REG_DMA_UNLMT_RES8_6B
6434:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
6435:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
6436:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetMultiDMATransfer(ADC_Common_TypeDef *ADCxy_COMMON, uint32_t MultiDMA
6437:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
6438:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(ADCxy_COMMON->CCR, ADC_CCR_MDMA | ADC_CCR_DMACFG, MultiDMATransfer);
6439:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
6440:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
6441:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
6442:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC multimode conversion data transfer: no transfer
6443:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         or transfer by DMA.
6444:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   If ADC multimode transfer by DMA is not selected:
6445:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         each ADC uses its own DMA channel, with its individual
6446:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         DMA transfer settings.
6447:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         If ADC multimode transfer by DMA is selected:
6448:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         One DMA channel is used for both ADC (DMA of ADC master)
6449:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Specifies the DMA requests mode:
6450:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - Limited mode (One shot mode): DMA transfer requests are stopped
6451:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           when number of DMA data transfers (number of
6452:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           ADC conversions) is reached.
6453:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode non-circular.
ARM GAS  /tmp/ccEuGJBQ.s 			page 133


6454:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - Unlimited mode: DMA transfer requests are unlimited,
6455:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           whatever number of DMA data transfers (number of
6456:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           ADC conversions).
6457:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode circular.
6458:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   If ADC DMA requests mode is set to unlimited and DMA is set to
6459:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         mode non-circular:
6460:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         when DMA transfers size will be reached, DMA will stop transfers of
6461:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC conversions data ADC will raise an overrun error
6462:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (overrun flag and interruption if enabled).
6463:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   How to retrieve multimode conversion data:
6464:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Whatever multimode transfer by DMA setting: using function
6465:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @ref LL_ADC_REG_ReadMultiConversionData32().
6466:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         If ADC multimode transfer by DMA is selected: conversion data
6467:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         is a raw data with ADC master and slave concatenated.
6468:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         A macro is available to get the conversion data of
6469:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC master or ADC slave: see helper macro
6470:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @ref __LL_ADC_MULTI_CONV_DATA_MASTER_SLAVE().
6471:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CCR      MDMA           LL_ADC_GetMultiDMATransfer\n
6472:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         CCR      DMACFG         LL_ADC_GetMultiDMATransfer
6473:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
6474:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
6475:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
6476:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_REG_DMA_EACH_ADC
6477:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_REG_DMA_LIMIT_RES12_10B
6478:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_REG_DMA_LIMIT_RES8_6B
6479:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_REG_DMA_UNLMT_RES12_10B
6480:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_REG_DMA_UNLMT_RES8_6B
6481:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
6482:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetMultiDMATransfer(ADC_Common_TypeDef *ADCxy_COMMON)
6483:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
6484:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCxy_COMMON->CCR, ADC_CCR_MDMA | ADC_CCR_DMACFG));
6485:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
6486:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
6487:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
6488:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Set ADC multimode delay between 2 sampling phases.
6489:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   The sampling delay range depends on ADC resolution:
6490:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - ADC resolution 12 bits can have maximum delay of 12 cycles.
6491:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - ADC resolution 10 bits can have maximum delay of 10 cycles.
6492:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - ADC resolution  8 bits can have maximum delay of  8 cycles.
6493:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - ADC resolution  6 bits can have maximum delay of  6 cycles.
6494:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6495:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
6496:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         All ADC instances of the ADC common group must be disabled.
6497:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         This check can be done with function @ref LL_ADC_IsEnabled() for each
6498:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC instance or by using helper macro helper macro
6499:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @ref __LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE().
6500:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CCR      DELAY          LL_ADC_SetMultiTwoSamplingDelay
6501:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
6502:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
6503:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  MultiTwoSamplingDelay This parameter can be one of the following values:
6504:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_1CYCLE
6505:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_2CYCLES
6506:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_3CYCLES
6507:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_4CYCLES
6508:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_5CYCLES
6509:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_6CYCLES  (1)
6510:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_7CYCLES  (1)
ARM GAS  /tmp/ccEuGJBQ.s 			page 134


6511:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_8CYCLES  (2)
6512:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_9CYCLES  (2)
6513:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_10CYCLES (2)
6514:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_11CYCLES (3)
6515:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_12CYCLES (3)
6516:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *
6517:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (1) Parameter available only if ADC resolution is 12, 10 or 8 bits.\n
6518:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (2) Parameter available only if ADC resolution is 12 or 10 bits.\n
6519:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (3) Parameter available only if ADC resolution is 12 bits.
6520:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
6521:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
6522:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetMultiTwoSamplingDelay(ADC_Common_TypeDef *ADCxy_COMMON, uint32_t Mul
6523:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
6524:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(ADCxy_COMMON->CCR, ADC_CCR_DELAY, MultiTwoSamplingDelay);
6525:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
6526:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
6527:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
6528:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC multimode delay between 2 sampling phases.
6529:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CCR      DELAY          LL_ADC_GetMultiTwoSamplingDelay
6530:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
6531:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
6532:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
6533:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_1CYCLE
6534:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_2CYCLES
6535:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_3CYCLES
6536:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_4CYCLES
6537:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_5CYCLES
6538:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_6CYCLES  (1)
6539:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_7CYCLES  (1)
6540:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_8CYCLES  (2)
6541:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_9CYCLES  (2)
6542:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_10CYCLES (2)
6543:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_11CYCLES (3)
6544:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_12CYCLES (3)
6545:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *
6546:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (1) Parameter available only if ADC resolution is 12, 10 or 8 bits.\n
6547:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (2) Parameter available only if ADC resolution is 12 or 10 bits.\n
6548:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (3) Parameter available only if ADC resolution is 12 bits.
6549:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
6550:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetMultiTwoSamplingDelay(ADC_Common_TypeDef *ADCxy_COMMON)
6551:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
6552:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCxy_COMMON->CCR, ADC_CCR_DELAY));
6553:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
6554:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #endif /* ADC_MULTIMODE_SUPPORT */
6555:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
6556:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
6557:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
6558:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
6559:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Operation_ADC_Instance Operation on ADC hierarchical scope: ADC instance
6560:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
6561:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
6562:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
6563:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
6564:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Put ADC instance in deep power down state.
6565:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   In case of ADC calibration necessary: When ADC is in deep-power-down
6566:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         state, the internal analog calibration is lost. After exiting from
6567:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         deep power down, calibration must be relaunched or calibration factor
ARM GAS  /tmp/ccEuGJBQ.s 			page 135


6568:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (preliminarily saved) must be set back into calibration register.
6569:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6570:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
6571:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must be ADC disabled.
6572:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CR       DEEPPWD        LL_ADC_EnableDeepPowerDown
6573:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
6574:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
6575:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
6576:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableDeepPowerDown(ADC_TypeDef *ADCx)
6577:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
6578:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
6579:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
6580:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
6581:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
6582:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
6583:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_CR_DEEPPWD);
6584:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
6585:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
6586:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
6587:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Disable ADC deep power down mode.
6588:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   In case of ADC calibration necessary: When ADC is in deep-power-down
6589:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         state, the internal analog calibration is lost. After exiting from
6590:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         deep power down, calibration must be relaunched or calibration factor
6591:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (preliminarily saved) must be set back into calibration register.
6592:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6593:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
6594:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must be ADC disabled.
6595:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CR       DEEPPWD        LL_ADC_DisableDeepPowerDown
6596:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
6597:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
6598:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
6599:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableDeepPowerDown(ADC_TypeDef *ADCx)
6600:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
6601:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
6602:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
6603:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
6604:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   CLEAR_BIT(ADCx->CR, (ADC_CR_DEEPPWD | ADC_CR_BITS_PROPERTY_RS));
6605:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
6606:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
6607:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
6608:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get the selected ADC instance deep power down state.
6609:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CR       DEEPPWD        LL_ADC_IsDeepPowerDownEnabled
6610:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
6611:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval 0: deep power down is disabled, 1: deep power down is enabled.
6612:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
6613:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsDeepPowerDownEnabled(ADC_TypeDef *ADCx)
 112              		.loc 2 6613 26 is_stmt 1 view .LVU37
 113              	.LBB335:
6614:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
6615:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_DEEPPWD) == (ADC_CR_DEEPPWD)) ? 1UL : 0UL);
 114              		.loc 2 6615 3 view .LVU38
 115              		.loc 2 6615 12 is_stmt 0 view .LVU39
 116 0016 9A68     		ldr	r2, [r3, #8]
 117              		.loc 2 6615 74 view .LVU40
 118 0018 12F0005F 		tst	r2, #536870912
 119 001c 05D0     		beq	.L5
 120              	.LVL5:
ARM GAS  /tmp/ccEuGJBQ.s 			page 136


 121              		.loc 2 6615 74 view .LVU41
 122              	.LBE335:
 123              	.LBE334:
 488:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 124              		.loc 1 488 5 is_stmt 1 view .LVU42
 125              	.LBB336:
 126              	.LBI336:
6599:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 127              		.loc 2 6599 22 view .LVU43
 128              	.LBB337:
6604:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 129              		.loc 2 6604 3 view .LVU44
 130 001e 9A68     		ldr	r2, [r3, #8]
 131 0020 22F02042 		bic	r2, r2, #-1610612736
 132 0024 22F03F02 		bic	r2, r2, #63
 133 0028 9A60     		str	r2, [r3, #8]
 134              	.LVL6:
 135              	.L5:
6604:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 136              		.loc 2 6604 3 is_stmt 0 view .LVU45
 137              	.LBE337:
 138              	.LBE336:
 495:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
 139              		.loc 1 495 3 is_stmt 1 view .LVU46
 495:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
 140              		.loc 1 495 7 is_stmt 0 view .LVU47
 141 002a 2268     		ldr	r2, [r4]
 142              	.LVL7:
 143              	.LBB338:
 144              	.LBI338:
6616:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
6617:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
6618:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
6619:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Enable ADC instance internal voltage regulator.
6620:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, after ADC internal voltage regulator enable,
6621:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         a delay for ADC internal voltage regulator stabilization
6622:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         is required before performing a ADC calibration or ADC enable.
6623:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Refer to device datasheet, parameter tADCVREG_STUP.
6624:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Refer to literal @ref LL_ADC_DELAY_INTERNAL_REGUL_STAB_US.
6625:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6626:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
6627:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must be ADC disabled.
6628:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CR       ADVREGEN       LL_ADC_EnableInternalRegulator
6629:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
6630:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
6631:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
6632:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableInternalRegulator(ADC_TypeDef *ADCx)
6633:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
6634:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
6635:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
6636:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
6637:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
6638:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
6639:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_CR_ADVREGEN);
6640:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
6641:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
6642:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
ARM GAS  /tmp/ccEuGJBQ.s 			page 137


6643:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Disable ADC internal voltage regulator.
6644:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6645:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
6646:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must be ADC disabled.
6647:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CR       ADVREGEN       LL_ADC_DisableInternalRegulator
6648:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
6649:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
6650:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
6651:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableInternalRegulator(ADC_TypeDef *ADCx)
6652:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
6653:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   CLEAR_BIT(ADCx->CR, (ADC_CR_ADVREGEN | ADC_CR_BITS_PROPERTY_RS));
6654:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
6655:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
6656:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
6657:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get the selected ADC instance internal voltage regulator state.
6658:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CR       ADVREGEN       LL_ADC_IsInternalRegulatorEnabled
6659:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
6660:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval 0: internal regulator is disabled, 1: internal regulator is enabled.
6661:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
6662:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsInternalRegulatorEnabled(ADC_TypeDef *ADCx)
 145              		.loc 2 6662 26 is_stmt 1 view .LVU48
 146              	.LBB339:
6663:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
6664:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_ADVREGEN) == (ADC_CR_ADVREGEN)) ? 1UL : 0UL);
 147              		.loc 2 6664 3 view .LVU49
 148              		.loc 2 6664 12 is_stmt 0 view .LVU50
 149 002c 9368     		ldr	r3, [r2, #8]
 150              		.loc 2 6664 76 view .LVU51
 151 002e 13F0805F 		tst	r3, #268435456
 152 0032 1FD1     		bne	.L6
 153              	.LVL8:
 154              		.loc 2 6664 76 view .LVU52
 155              	.LBE339:
 156              	.LBE338:
 498:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 157              		.loc 1 498 5 is_stmt 1 view .LVU53
 158              	.LBB340:
 159              	.LBI340:
6632:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 160              		.loc 2 6632 22 view .LVU54
 161              	.LBB341:
6637:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 162              		.loc 2 6637 3 view .LVU55
 163 0034 9368     		ldr	r3, [r2, #8]
 164 0036 23F01043 		bic	r3, r3, #-1879048192
 165 003a 23F03F03 		bic	r3, r3, #63
 166 003e 43F08053 		orr	r3, r3, #268435456
 167 0042 9360     		str	r3, [r2, #8]
 168              	.LVL9:
6637:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 169              		.loc 2 6637 3 is_stmt 0 view .LVU56
 170              	.LBE341:
 171              	.LBE340:
 503:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     while (wait_loop_index != 0UL)
 172              		.loc 1 503 5 is_stmt 1 view .LVU57
 503:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     while (wait_loop_index != 0UL)
 173              		.loc 1 503 89 is_stmt 0 view .LVU58
ARM GAS  /tmp/ccEuGJBQ.s 			page 138


 174 0044 794B     		ldr	r3, .L32
 175 0046 1B68     		ldr	r3, [r3]
 176 0048 9B09     		lsrs	r3, r3, #6
 177 004a 794A     		ldr	r2, .L32+4
 178 004c A2FB0323 		umull	r2, r3, r2, r3
 179 0050 9B09     		lsrs	r3, r3, #6
 503:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     while (wait_loop_index != 0UL)
 180              		.loc 1 503 109 view .LVU59
 181 0052 0133     		adds	r3, r3, #1
 503:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     while (wait_loop_index != 0UL)
 182              		.loc 1 503 69 view .LVU60
 183 0054 5B00     		lsls	r3, r3, #1
 503:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     while (wait_loop_index != 0UL)
 184              		.loc 1 503 21 view .LVU61
 185 0056 0193     		str	r3, [sp, #4]
 504:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 186              		.loc 1 504 5 is_stmt 1 view .LVU62
 504:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 187              		.loc 1 504 11 is_stmt 0 view .LVU63
 188 0058 09E0     		b	.L7
 189              	.LVL10:
 190              	.L28:
 474:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 191              		.loc 1 474 5 is_stmt 1 view .LVU64
 192 005a FFF7FEFF 		bl	HAL_ADC_MspInit
 193              	.LVL11:
 478:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 194              		.loc 1 478 5 view .LVU65
 195 005e 0023     		movs	r3, #0
 196 0060 2366     		str	r3, [r4, #96]
 481:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
 197              		.loc 1 481 5 view .LVU66
 481:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
 198              		.loc 1 481 16 is_stmt 0 view .LVU67
 199 0062 84F85830 		strb	r3, [r4, #88]
 200 0066 D5E7     		b	.L4
 201              	.L8:
 506:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
 202              		.loc 1 506 7 is_stmt 1 view .LVU68
 506:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
 203              		.loc 1 506 22 is_stmt 0 view .LVU69
 204 0068 019B     		ldr	r3, [sp, #4]
 205 006a 013B     		subs	r3, r3, #1
 206 006c 0193     		str	r3, [sp, #4]
 207              	.L7:
 504:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 208              		.loc 1 504 28 is_stmt 1 view .LVU70
 209 006e 019B     		ldr	r3, [sp, #4]
 210 0070 002B     		cmp	r3, #0
 211 0072 F9D1     		bne	.L8
 212              	.L6:
 513:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
 213              		.loc 1 513 3 view .LVU71
 513:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
 214              		.loc 1 513 7 is_stmt 0 view .LVU72
 215 0074 2268     		ldr	r2, [r4]
 216              	.LVL12:
ARM GAS  /tmp/ccEuGJBQ.s 			page 139


 217              	.LBB342:
 218              	.LBI342:
6662:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 219              		.loc 2 6662 26 is_stmt 1 view .LVU73
 220              	.LBB343:
 221              		.loc 2 6664 3 view .LVU74
 222              		.loc 2 6664 12 is_stmt 0 view .LVU75
 223 0076 9368     		ldr	r3, [r2, #8]
 224              		.loc 2 6664 76 view .LVU76
 225 0078 13F0805F 		tst	r3, #268435456
 226 007c 40F09C80 		bne	.L26
 227              	.LVL13:
 228              		.loc 2 6664 76 view .LVU77
 229              	.LBE343:
 230              	.LBE342:
 516:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 231              		.loc 1 516 5 is_stmt 1 view .LVU78
 232 0080 E36D     		ldr	r3, [r4, #92]
 233 0082 43F01003 		orr	r3, r3, #16
 234 0086 E365     		str	r3, [r4, #92]
 519:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 235              		.loc 1 519 5 view .LVU79
 236 0088 236E     		ldr	r3, [r4, #96]
 237 008a 43F00103 		orr	r3, r3, #1
 238 008e 2366     		str	r3, [r4, #96]
 521:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
 239              		.loc 1 521 5 view .LVU80
 240              	.LVL14:
 521:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
 241              		.loc 1 521 20 is_stmt 0 view .LVU81
 242 0090 0120     		movs	r0, #1
 243              	.LVL15:
 244              	.L9:
 528:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 245              		.loc 1 528 3 is_stmt 1 view .LVU82
 246              	.LBB344:
 247              	.LBI344:
6665:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
6666:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
6667:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
6668:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Enable the selected ADC instance.
6669:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, after ADC enable, a delay for
6670:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC internal analog stabilization is required before performing a
6671:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC conversion start.
6672:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Refer to device datasheet, parameter tSTAB.
6673:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, flag LL_ADC_FLAG_ADRDY is raised when the ADC
6674:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         is enabled and when conversion clock is active.
6675:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (not only core clock: this ADC has a dual clock domain)
6676:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6677:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
6678:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must be ADC disabled and ADC internal voltage regulator enabled.
6679:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CR       ADEN           LL_ADC_Enable
6680:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
6681:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
6682:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
6683:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_Enable(ADC_TypeDef *ADCx)
6684:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
ARM GAS  /tmp/ccEuGJBQ.s 			page 140


6685:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
6686:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
6687:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
6688:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
6689:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
6690:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_CR_ADEN);
6691:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
6692:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
6693:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
6694:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Disable the selected ADC instance.
6695:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6696:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
6697:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must be not disabled. Must be enabled without conversion on going
6698:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         on either groups regular or injected.
6699:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CR       ADDIS          LL_ADC_Disable
6700:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
6701:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
6702:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
6703:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_Disable(ADC_TypeDef *ADCx)
6704:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
6705:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
6706:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
6707:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
6708:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
6709:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
6710:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_CR_ADDIS);
6711:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
6712:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
6713:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
6714:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get the selected ADC instance enable state.
6715:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, flag LL_ADC_FLAG_ADRDY is raised when the ADC
6716:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         is enabled and when conversion clock is active.
6717:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (not only core clock: this ADC has a dual clock domain)
6718:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CR       ADEN           LL_ADC_IsEnabled
6719:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
6720:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval 0: ADC is disabled, 1: ADC is enabled.
6721:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
6722:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsEnabled(ADC_TypeDef *ADCx)
6723:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
6724:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_ADEN) == (ADC_CR_ADEN)) ? 1UL : 0UL);
6725:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
6726:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
6727:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
6728:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get the selected ADC instance disable state.
6729:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CR       ADDIS          LL_ADC_IsDisableOngoing
6730:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
6731:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval 0: no ADC disable command on going.
6732:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
6733:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsDisableOngoing(ADC_TypeDef *ADCx)
6734:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
6735:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_ADDIS) == (ADC_CR_ADDIS)) ? 1UL : 0UL);
6736:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
6737:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
6738:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
6739:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Start ADC calibration in the mode single-ended
6740:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         or differential (for devices with differential mode available).
6741:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, a minimum number of ADC clock cycles
ARM GAS  /tmp/ccEuGJBQ.s 			page 141


6742:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         are required between ADC end of calibration and ADC enable.
6743:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Refer to literal @ref LL_ADC_DELAY_CALIB_ENABLE_ADC_CYCLES.
6744:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   For devices with differential mode available:
6745:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Calibration of offset is specific to each of
6746:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         single-ended and differential modes
6747:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (calibration run must be performed for each of these
6748:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         differential modes, if used afterwards and if the application
6749:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         requires their calibration).
6750:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6751:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
6752:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must be ADC disabled.
6753:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CR       ADCAL          LL_ADC_StartCalibration\n
6754:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         CR       ADCALDIF       LL_ADC_StartCalibration
6755:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
6756:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  SingleDiff This parameter can be one of the following values:
6757:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SINGLE_ENDED
6758:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_DIFFERENTIAL_ENDED
6759:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
6760:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
6761:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_StartCalibration(ADC_TypeDef *ADCx, uint32_t SingleDiff)
6762:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
6763:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
6764:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
6765:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
6766:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
6767:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_CR_ADCALDIF | ADC_CR_BITS_PROPERTY_RS,
6768:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_CR_ADCAL | (SingleDiff & ADC_SINGLEDIFF_CALIB_START_MASK));
6769:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
6770:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
6771:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
6772:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC calibration state.
6773:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CR       ADCAL          LL_ADC_IsCalibrationOnGoing
6774:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
6775:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval 0: calibration complete, 1: calibration in progress.
6776:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
6777:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsCalibrationOnGoing(ADC_TypeDef *ADCx)
6778:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
6779:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_ADCAL) == (ADC_CR_ADCAL)) ? 1UL : 0UL);
6780:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
6781:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
6782:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
6783:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
6784:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
6785:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
6786:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Operation_ADC_Group_Regular Operation on ADC hierarchical scope: group regu
6787:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
6788:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
6789:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
6790:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
6791:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Start ADC group regular conversion.
6792:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, this function is relevant for both
6793:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         internal trigger (SW start) and external trigger:
6794:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - If ADC trigger has been set to software start, ADC conversion
6795:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           starts immediately.
6796:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - If ADC trigger has been set to external trigger, ADC conversion
6797:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           will start at next trigger event (on the selected trigger edge)
6798:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           following the ADC start conversion command.
ARM GAS  /tmp/ccEuGJBQ.s 			page 142


6799:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6800:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
6801:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must be enabled without conversion on going on group regular,
6802:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         without conversion stop command on going on group regular,
6803:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         without ADC disable command on going.
6804:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CR       ADSTART        LL_ADC_REG_StartConversion
6805:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
6806:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
6807:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
6808:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_StartConversion(ADC_TypeDef *ADCx)
6809:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
6810:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
6811:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
6812:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
6813:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
6814:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
6815:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_CR_ADSTART);
6816:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
6817:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
6818:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
6819:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Stop ADC group regular conversion.
6820:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6821:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
6822:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must be enabled with conversion on going on group regular,
6823:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         without ADC disable command on going.
6824:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CR       ADSTP          LL_ADC_REG_StopConversion
6825:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
6826:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
6827:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
6828:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_StopConversion(ADC_TypeDef *ADCx)
6829:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
6830:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
6831:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
6832:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
6833:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
6834:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
6835:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_CR_ADSTP);
6836:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
6837:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
6838:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
6839:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC group regular conversion state.
6840:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CR       ADSTART        LL_ADC_REG_IsConversionOngoing
6841:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
6842:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval 0: no conversion is on going on ADC group regular.
6843:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
6844:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_IsConversionOngoing(ADC_TypeDef *ADCx)
 248              		.loc 2 6844 26 view .LVU83
 249              	.LBB345:
6845:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
6846:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_ADSTART) == (ADC_CR_ADSTART)) ? 1UL : 0UL);
 250              		.loc 2 6846 3 view .LVU84
 251              		.loc 2 6846 12 is_stmt 0 view .LVU85
 252 0092 9368     		ldr	r3, [r2, #8]
 253              		.loc 2 6846 74 view .LVU86
 254 0094 13F00403 		ands	r3, r3, #4
 255 0098 00D0     		beq	.L10
 256 009a 0123     		movs	r3, #1
ARM GAS  /tmp/ccEuGJBQ.s 			page 143


 257              	.L10:
 258              	.LVL16:
 259              		.loc 2 6846 74 view .LVU87
 260              	.LBE345:
 261              	.LBE344:
 530:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       && (tmp_adc_reg_is_conversion_on_going == 0UL)
 262              		.loc 1 530 3 is_stmt 1 view .LVU88
 530:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       && (tmp_adc_reg_is_conversion_on_going == 0UL)
 263              		.loc 1 530 13 is_stmt 0 view .LVU89
 264 009c E16D     		ldr	r1, [r4, #92]
 530:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       && (tmp_adc_reg_is_conversion_on_going == 0UL)
 265              		.loc 1 530 6 view .LVU90
 266 009e 11F0100F 		tst	r1, #16
 267 00a2 40F0BA80 		bne	.L11
 531:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****      )
 268              		.loc 1 531 7 view .LVU91
 269 00a6 002B     		cmp	r3, #0
 270 00a8 40F0B780 		bne	.L11
 535:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                       HAL_ADC_STATE_REG_BUSY,
 271              		.loc 1 535 5 is_stmt 1 view .LVU92
 272 00ac E36D     		ldr	r3, [r4, #92]
 273              	.LVL17:
 535:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                       HAL_ADC_STATE_REG_BUSY,
 274              		.loc 1 535 5 is_stmt 0 view .LVU93
 275 00ae 23F48173 		bic	r3, r3, #258
 276 00b2 43F00203 		orr	r3, r3, #2
 277 00b6 E365     		str	r3, [r4, #92]
 544:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 278              		.loc 1 544 5 is_stmt 1 view .LVU94
 279              	.LVL18:
 280              	.LBB346:
 281              	.LBI346:
6722:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 282              		.loc 2 6722 26 view .LVU95
 283              	.LBB347:
6724:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 284              		.loc 2 6724 3 view .LVU96
6724:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 285              		.loc 2 6724 12 is_stmt 0 view .LVU97
 286 00b8 9368     		ldr	r3, [r2, #8]
6724:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 287              		.loc 2 6724 68 view .LVU98
 288 00ba 13F0010F 		tst	r3, #1
 289 00be 15D1     		bne	.L12
 290              	.LVL19:
6724:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 291              		.loc 2 6724 68 view .LVU99
 292              	.LBE347:
 293              	.LBE346:
 546:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 294              		.loc 1 546 7 is_stmt 1 view .LVU100
 295              	.LBB348:
 296              	.LBI348:
6722:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 297              		.loc 2 6722 26 view .LVU101
 298              	.LBB349:
6724:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
ARM GAS  /tmp/ccEuGJBQ.s 			page 144


 299              		.loc 2 6724 3 view .LVU102
6724:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 300              		.loc 2 6724 12 is_stmt 0 view .LVU103
 301 00c0 4FF0A043 		mov	r3, #1342177280
 302 00c4 9A68     		ldr	r2, [r3, #8]
6724:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 303              		.loc 2 6724 68 view .LVU104
 304 00c6 12F00102 		ands	r2, r2, #1
 305 00ca 00D0     		beq	.L13
 306 00cc 0122     		movs	r2, #1
 307              	.L13:
 308              	.LVL20:
6724:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 309              		.loc 2 6724 68 view .LVU105
 310              	.LBE349:
 311              	.LBE348:
 312              	.LBB350:
 313              	.LBI350:
6722:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 314              		.loc 2 6722 26 is_stmt 1 view .LVU106
 315              	.LBB351:
6724:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 316              		.loc 2 6724 3 view .LVU107
6724:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 317              		.loc 2 6724 12 is_stmt 0 view .LVU108
 318 00ce 594B     		ldr	r3, .L32+8
 319 00d0 9B68     		ldr	r3, [r3, #8]
6724:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 320              		.loc 2 6724 68 view .LVU109
 321 00d2 13F00103 		ands	r3, r3, #1
 322 00d6 00D0     		beq	.L14
 323 00d8 0123     		movs	r3, #1
 324              	.L14:
 325              	.LVL21:
6724:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 326              		.loc 2 6724 68 view .LVU110
 327              	.LBE351:
 328              	.LBE350:
 546:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 329              		.loc 1 546 10 view .LVU111
 330 00da 1343     		orrs	r3, r3, r2
 331 00dc 06D1     		bne	.L12
 565:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
 332              		.loc 1 565 9 is_stmt 1 view .LVU112
 333 00de 6368     		ldr	r3, [r4, #4]
 334              	.LVL22:
 335              	.LBB352:
 336              	.LBI352:
2733:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 337              		.loc 2 2733 22 view .LVU113
 338              	.LBB353:
2735:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 339              		.loc 2 2735 3 view .LVU114
 340 00e0 5549     		ldr	r1, .L32+12
 341 00e2 8A68     		ldr	r2, [r1, #8]
 342 00e4 22F47C12 		bic	r2, r2, #4128768
 343 00e8 1343     		orrs	r3, r3, r2
ARM GAS  /tmp/ccEuGJBQ.s 			page 145


 344              	.LVL23:
2735:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 345              		.loc 2 2735 3 is_stmt 0 view .LVU115
 346 00ea 8B60     		str	r3, [r1, #8]
 347              	.LVL24:
 348              	.L12:
2735:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 349              		.loc 2 2735 3 view .LVU116
 350              	.LBE353:
 351              	.LBE352:
 578:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                 hadc->Init.Overrun                                                     |
 352              		.loc 1 578 5 is_stmt 1 view .LVU117
 578:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                 hadc->Init.Overrun                                                     |
 353              		.loc 1 578 17 is_stmt 0 view .LVU118
 354 00ec 627F     		ldrb	r2, [r4, #29]	@ zero_extendqisi2
 579:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                 hadc->Init.DataAlign                                                   |
 355              		.loc 1 579 27 view .LVU119
 356 00ee E36B     		ldr	r3, [r4, #60]
 578:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                 hadc->Init.Overrun                                                     |
 357              		.loc 1 578 88 view .LVU120
 358 00f0 43EA4233 		orr	r3, r3, r2, lsl #13
 580:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                 hadc->Init.Resolution                                                  |
 359              		.loc 1 580 27 view .LVU121
 360 00f4 E268     		ldr	r2, [r4, #12]
 579:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                 hadc->Init.DataAlign                                                   |
 361              		.loc 1 579 88 view .LVU122
 362 00f6 1343     		orrs	r3, r3, r2
 581:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                 ADC_CFGR_REG_DISCONTINUOUS((uint32_t)hadc->Init.DiscontinuousConvMode));
 363              		.loc 1 581 27 view .LVU123
 364 00f8 A268     		ldr	r2, [r4, #8]
 580:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                 hadc->Init.Resolution                                                  |
 365              		.loc 1 580 88 view .LVU124
 366 00fa 1343     		orrs	r3, r3, r2
 582:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 367              		.loc 1 582 17 view .LVU125
 368 00fc 94F82420 		ldrb	r2, [r4, #36]	@ zero_extendqisi2
 578:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                 hadc->Init.Overrun                                                     |
 369              		.loc 1 578 14 view .LVU126
 370 0100 43EA0243 		orr	r3, r3, r2, lsl #16
 371              	.LVL25:
 584:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 372              		.loc 1 584 5 is_stmt 1 view .LVU127
 584:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 373              		.loc 1 584 8 is_stmt 0 view .LVU128
 374 0104 012A     		cmp	r2, #1
 375 0106 59D0     		beq	.L29
 376              	.L15:
 594:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 377              		.loc 1 594 5 is_stmt 1 view .LVU129
 594:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 378              		.loc 1 594 19 is_stmt 0 view .LVU130
 379 0108 E26A     		ldr	r2, [r4, #44]
 594:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 380              		.loc 1 594 8 view .LVU131
 381 010a 22B1     		cbz	r2, .L16
 596:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                   | hadc->Init.ExternalTrigConvEdge
 382              		.loc 1 596 7 is_stmt 1 view .LVU132
ARM GAS  /tmp/ccEuGJBQ.s 			page 146


 596:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                   | hadc->Init.ExternalTrigConvEdge
 383              		.loc 1 596 48 is_stmt 0 view .LVU133
 384 010c 02F47872 		and	r2, r2, #992
 597:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                  );
 385              		.loc 1 597 31 view .LVU134
 386 0110 216B     		ldr	r1, [r4, #48]
 597:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                  );
 387              		.loc 1 597 19 view .LVU135
 388 0112 0A43     		orrs	r2, r2, r1
 596:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                   | hadc->Init.ExternalTrigConvEdge
 389              		.loc 1 596 15 view .LVU136
 390 0114 1343     		orrs	r3, r3, r2
 391              	.LVL26:
 392              	.L16:
 602:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 393              		.loc 1 602 5 is_stmt 1 view .LVU137
 394 0116 2168     		ldr	r1, [r4]
 395 0118 CD68     		ldr	r5, [r1, #12]
 396 011a 484A     		ldr	r2, .L32+16
 397 011c 2A40     		ands	r2, r2, r5
 398 011e 1A43     		orrs	r2, r2, r3
 399 0120 CA60     		str	r2, [r1, #12]
 605:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 400              		.loc 1 605 5 view .LVU138
 401 0122 2268     		ldr	r2, [r4]
 402 0124 1369     		ldr	r3, [r2, #16]
 403              	.LVL27:
 605:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 404              		.loc 1 605 5 is_stmt 0 view .LVU139
 405 0126 23F04063 		bic	r3, r3, #201326592
 406 012a 616B     		ldr	r1, [r4, #52]
 407 012c 0B43     		orrs	r3, r3, r1
 408 012e 1361     		str	r3, [r2, #16]
 614:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     tmp_adc_is_conversion_on_going_injected = LL_ADC_INJ_IsConversionOngoing(hadc->Instance);
 409              		.loc 1 614 5 is_stmt 1 view .LVU140
 614:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     tmp_adc_is_conversion_on_going_injected = LL_ADC_INJ_IsConversionOngoing(hadc->Instance);
 410              		.loc 1 614 46 is_stmt 0 view .LVU141
 411 0130 2168     		ldr	r1, [r4]
 412              	.LVL28:
 413              	.LBB354:
 414              	.LBI354:
6844:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 415              		.loc 2 6844 26 is_stmt 1 view .LVU142
 416              	.LBB355:
 417              		.loc 2 6846 3 view .LVU143
 418              		.loc 2 6846 12 is_stmt 0 view .LVU144
 419 0132 8B68     		ldr	r3, [r1, #8]
 420              		.loc 2 6846 74 view .LVU145
 421 0134 13F00403 		ands	r3, r3, #4
 422 0138 00D0     		beq	.L17
 423 013a 0123     		movs	r3, #1
 424              	.L17:
 425              	.LVL29:
 426              		.loc 2 6846 74 view .LVU146
 427              	.LBE355:
 428              	.LBE354:
 615:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     if ((tmp_adc_is_conversion_on_going_regular == 0UL)
ARM GAS  /tmp/ccEuGJBQ.s 			page 147


 429              		.loc 1 615 5 is_stmt 1 view .LVU147
 430              	.LBB356:
 431              	.LBI356:
6847:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
6848:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
6849:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
6850:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC group regular command of conversion stop state
6851:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CR       ADSTP          LL_ADC_REG_IsStopConversionOngoing
6852:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
6853:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval 0: no command of conversion stop is on going on ADC group regular.
6854:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
6855:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_IsStopConversionOngoing(ADC_TypeDef *ADCx)
6856:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
6857:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_ADSTP) == (ADC_CR_ADSTP)) ? 1UL : 0UL);
6858:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
6859:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
6860:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
6861:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Start ADC sampling phase for sampling time trigger mode
6862:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   This function is relevant only when
6863:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - @ref LL_ADC_REG_SAMPLING_MODE_TRIGGER_CONTROLED has been set
6864:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           using @ref LL_ADC_REG_SetSamplingMode
6865:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - @ref LL_ADC_REG_TRIG_SOFTWARE is used as trigger source
6866:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6867:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
6868:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must be enabled without conversion on going on group regular,
6869:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         without conversion stop command on going on group regular,
6870:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         without ADC disable command on going.
6871:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CFGR2    SWTRIG         LL_ADC_REG_StartSamplingPhase
6872:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
6873:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
6874:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
6875:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_StartSamplingPhase(ADC_TypeDef *ADCx)
6876:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
6877:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   SET_BIT(ADCx->CFGR2, ADC_CFGR2_SWTRIG);
6878:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
6879:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
6880:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
6881:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Stop ADC sampling phase for sampling time trigger mode and start conversion
6882:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   This function is relevant only when
6883:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - @ref LL_ADC_REG_SAMPLING_MODE_TRIGGER_CONTROLED has been set
6884:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           using @ref LL_ADC_REG_SetSamplingMode
6885:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - @ref LL_ADC_REG_TRIG_SOFTWARE is used as trigger source
6886:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - @ref LL_ADC_REG_StartSamplingPhase has been called to start
6887:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           the sampling phase
6888:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6889:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
6890:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must be enabled without conversion on going on group regular,
6891:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         without conversion stop command on going on group regular,
6892:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         without ADC disable command on going.
6893:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CFGR2    SWTRIG         LL_ADC_REG_StopSamplingPhase
6894:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
6895:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
6896:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
6897:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_StopSamplingPhase(ADC_TypeDef *ADCx)
6898:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
6899:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   CLEAR_BIT(ADCx->CFGR2, ADC_CFGR2_SWTRIG);
6900:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
ARM GAS  /tmp/ccEuGJBQ.s 			page 148


6901:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
6902:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
6903:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC group regular conversion data, range fit for
6904:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         all ADC configurations: all ADC resolutions and
6905:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         all oversampling increased data width (for devices
6906:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         with feature oversampling).
6907:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll DR       RDATA          LL_ADC_REG_ReadConversionData32
6908:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
6909:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Value between Min_Data=0x00000000 and Max_Data=0xFFFFFFFF
6910:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
6911:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_ReadConversionData32(ADC_TypeDef *ADCx)
6912:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
6913:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->DR, ADC_DR_RDATA));
6914:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
6915:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
6916:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
6917:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC group regular conversion data, range fit for
6918:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC resolution 12 bits.
6919:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   For devices with feature oversampling: Oversampling
6920:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         can increase data width, function for extended range
6921:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         may be needed: @ref LL_ADC_REG_ReadConversionData32.
6922:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll DR       RDATA          LL_ADC_REG_ReadConversionData12
6923:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
6924:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
6925:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
6926:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint16_t LL_ADC_REG_ReadConversionData12(ADC_TypeDef *ADCx)
6927:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
6928:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint16_t)(READ_BIT(ADCx->DR, ADC_DR_RDATA));
6929:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
6930:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
6931:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
6932:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC group regular conversion data, range fit for
6933:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC resolution 10 bits.
6934:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   For devices with feature oversampling: Oversampling
6935:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         can increase data width, function for extended range
6936:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         may be needed: @ref LL_ADC_REG_ReadConversionData32.
6937:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll DR       RDATA          LL_ADC_REG_ReadConversionData10
6938:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
6939:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0x3FF
6940:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
6941:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint16_t LL_ADC_REG_ReadConversionData10(ADC_TypeDef *ADCx)
6942:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
6943:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint16_t)(READ_BIT(ADCx->DR, ADC_DR_RDATA));
6944:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
6945:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
6946:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
6947:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC group regular conversion data, range fit for
6948:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC resolution 8 bits.
6949:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   For devices with feature oversampling: Oversampling
6950:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         can increase data width, function for extended range
6951:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         may be needed: @ref LL_ADC_REG_ReadConversionData32.
6952:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll DR       RDATA          LL_ADC_REG_ReadConversionData8
6953:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
6954:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0xFF
6955:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
6956:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint8_t LL_ADC_REG_ReadConversionData8(ADC_TypeDef *ADCx)
6957:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
ARM GAS  /tmp/ccEuGJBQ.s 			page 149


6958:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint8_t)(READ_BIT(ADCx->DR, ADC_DR_RDATA));
6959:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
6960:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
6961:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
6962:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC group regular conversion data, range fit for
6963:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC resolution 6 bits.
6964:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   For devices with feature oversampling: Oversampling
6965:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         can increase data width, function for extended range
6966:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         may be needed: @ref LL_ADC_REG_ReadConversionData32.
6967:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll DR       RDATA          LL_ADC_REG_ReadConversionData6
6968:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
6969:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0x3F
6970:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
6971:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint8_t LL_ADC_REG_ReadConversionData6(ADC_TypeDef *ADCx)
6972:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
6973:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint8_t)(READ_BIT(ADCx->DR, ADC_DR_RDATA));
6974:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
6975:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
6976:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #if defined(ADC_MULTIMODE_SUPPORT)
6977:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
6978:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC multimode conversion data of ADC master, ADC slave
6979:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         or raw data with ADC master and slave concatenated.
6980:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   If raw data with ADC master and slave concatenated is retrieved,
6981:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         a macro is available to get the conversion data of
6982:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC master or ADC slave: see helper macro
6983:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @ref __LL_ADC_MULTI_CONV_DATA_MASTER_SLAVE().
6984:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (however this macro is mainly intended for multimode
6985:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         transfer by DMA, because this function can do the same
6986:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         by getting multimode conversion data of ADC master or ADC slave
6987:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         separately).
6988:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CDR      RDATA_MST      LL_ADC_REG_ReadMultiConversionData32\n
6989:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         CDR      RDATA_SLV      LL_ADC_REG_ReadMultiConversionData32
6990:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
6991:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
6992:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ConversionData This parameter can be one of the following values:
6993:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_MASTER
6994:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_SLAVE
6995:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_MASTER_SLAVE
6996:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Value between Min_Data=0x00000000 and Max_Data=0xFFFFFFFF
6997:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
6998:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_ReadMultiConversionData32(ADC_Common_TypeDef *ADCxy_COMMON, uin
6999:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7000:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCxy_COMMON->CDR,
7001:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                              ConversionData)
7002:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                     >> (POSITION_VAL(ConversionData) & 0x1FUL)
7003:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                    );
7004:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7005:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #endif /* ADC_MULTIMODE_SUPPORT */
7006:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7007:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7008:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
7009:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7010:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7011:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Operation_ADC_Group_Injected Operation on ADC hierarchical scope: group inj
7012:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
7013:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7014:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
ARM GAS  /tmp/ccEuGJBQ.s 			page 150


7015:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7016:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Start ADC group injected conversion.
7017:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, this function is relevant for both
7018:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         internal trigger (SW start) and external trigger:
7019:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - If ADC trigger has been set to software start, ADC conversion
7020:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           starts immediately.
7021:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - If ADC trigger has been set to external trigger, ADC conversion
7022:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           will start at next trigger event (on the selected trigger edge)
7023:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           following the ADC start conversion command.
7024:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
7025:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
7026:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must be enabled without conversion on going on group injected,
7027:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         without conversion stop command on going on group injected,
7028:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         without ADC disable command on going.
7029:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CR       JADSTART       LL_ADC_INJ_StartConversion
7030:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
7031:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
7032:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7033:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_StartConversion(ADC_TypeDef *ADCx)
7034:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7035:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
7036:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
7037:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
7038:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
7039:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
7040:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_CR_JADSTART);
7041:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7042:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7043:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7044:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Stop ADC group injected conversion.
7045:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
7046:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
7047:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must be enabled with conversion on going on group injected,
7048:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         without ADC disable command on going.
7049:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CR       JADSTP         LL_ADC_INJ_StopConversion
7050:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
7051:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
7052:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7053:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_StopConversion(ADC_TypeDef *ADCx)
7054:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7055:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
7056:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
7057:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
7058:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
7059:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
7060:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_CR_JADSTP);
7061:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7062:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7063:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7064:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC group injected conversion state.
7065:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CR       JADSTART       LL_ADC_INJ_IsConversionOngoing
7066:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
7067:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval 0: no conversion is on going on ADC group injected.
7068:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7069:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_IsConversionOngoing(ADC_TypeDef *ADCx)
 432              		.loc 2 7069 26 view .LVU148
 433              	.LBB357:
ARM GAS  /tmp/ccEuGJBQ.s 			page 151


7070:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7071:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_JADSTART) == (ADC_CR_JADSTART)) ? 1UL : 0UL);
 434              		.loc 2 7071 3 view .LVU149
 435              		.loc 2 7071 12 is_stmt 0 view .LVU150
 436 013c 8A68     		ldr	r2, [r1, #8]
 437              		.loc 2 7071 76 view .LVU151
 438 013e 12F00802 		ands	r2, r2, #8
 439 0142 00D0     		beq	.L18
 440 0144 0122     		movs	r2, #1
 441              	.L18:
 442              	.LVL30:
 443              		.loc 2 7071 76 view .LVU152
 444              	.LBE357:
 445              	.LBE356:
 616:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         && (tmp_adc_is_conversion_on_going_injected == 0UL)
 446              		.loc 1 616 5 is_stmt 1 view .LVU153
 616:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         && (tmp_adc_is_conversion_on_going_injected == 0UL)
 447              		.loc 1 616 8 is_stmt 0 view .LVU154
 448 0146 43BB     		cbnz	r3, .L19
 617:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****        )
 449              		.loc 1 617 9 view .LVU155
 450 0148 3ABB     		cbnz	r2, .L19
 620:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                  ADC_CFGR_AUTOWAIT((uint32_t)hadc->Init.LowPowerAutoWait)        |
 451              		.loc 1 620 7 is_stmt 1 view .LVU156
 621:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                  ADC_CFGR_DMACONTREQ((uint32_t)hadc->Init.DMAContinuousRequests));
 452              		.loc 1 621 18 is_stmt 0 view .LVU157
 453 014a 237F     		ldrb	r3, [r4, #28]	@ zero_extendqisi2
 454              	.LVL31:
 622:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 455              		.loc 1 622 18 view .LVU158
 456 014c 94F83820 		ldrb	r2, [r4, #56]	@ zero_extendqisi2
 457              	.LVL32:
 622:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 458              		.loc 1 622 18 view .LVU159
 459 0150 5200     		lsls	r2, r2, #1
 620:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                  ADC_CFGR_AUTOWAIT((uint32_t)hadc->Init.LowPowerAutoWait)        |
 460              		.loc 1 620 15 view .LVU160
 461 0152 42EA8332 		orr	r2, r2, r3, lsl #14
 462              	.LVL33:
 624:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 463              		.loc 1 624 7 is_stmt 1 view .LVU161
 464 0156 CB68     		ldr	r3, [r1, #12]
 465 0158 23F48043 		bic	r3, r3, #16384
 466 015c 23F00203 		bic	r3, r3, #2
 467 0160 1343     		orrs	r3, r3, r2
 468 0162 CB60     		str	r3, [r1, #12]
 626:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 469              		.loc 1 626 7 view .LVU162
 626:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 470              		.loc 1 626 21 is_stmt 0 view .LVU163
 471 0164 2369     		ldr	r3, [r4, #16]
 626:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 472              		.loc 1 626 10 view .LVU164
 473 0166 73B3     		cbz	r3, .L20
 628:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         MODIFY_REG(hadc->Instance->GCOMP, ADC_GCOMP_GCOMPCOEFF, hadc->Init.GainCompensation);
 474              		.loc 1 628 9 is_stmt 1 view .LVU165
 475 0168 2268     		ldr	r2, [r4]
ARM GAS  /tmp/ccEuGJBQ.s 			page 152


 476              	.LVL34:
 628:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         MODIFY_REG(hadc->Instance->GCOMP, ADC_GCOMP_GCOMPCOEFF, hadc->Init.GainCompensation);
 477              		.loc 1 628 9 is_stmt 0 view .LVU166
 478 016a 1369     		ldr	r3, [r2, #16]
 479 016c 43F48033 		orr	r3, r3, #65536
 480 0170 1361     		str	r3, [r2, #16]
 629:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
 481              		.loc 1 629 9 is_stmt 1 view .LVU167
 482 0172 2268     		ldr	r2, [r4]
 483 0174 D2F8C030 		ldr	r3, [r2, #192]
 484 0178 23F47F53 		bic	r3, r3, #16320
 485 017c 23F03F03 		bic	r3, r3, #63
 486 0180 2169     		ldr	r1, [r4, #16]
 487 0182 0B43     		orrs	r3, r3, r1
 488 0184 C2F8C030 		str	r3, [r2, #192]
 489              	.L21:
 637:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 490              		.loc 1 637 7 view .LVU168
 637:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 491              		.loc 1 637 21 is_stmt 0 view .LVU169
 492 0188 94F84030 		ldrb	r3, [r4, #64]	@ zero_extendqisi2
 637:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 493              		.loc 1 637 10 view .LVU170
 494 018c 012B     		cmp	r3, #1
 495 018e 29D0     		beq	.L30
 664:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
 496              		.loc 1 664 9 is_stmt 1 view .LVU171
 497 0190 2268     		ldr	r2, [r4]
 498 0192 1369     		ldr	r3, [r2, #16]
 499 0194 23F00103 		bic	r3, r3, #1
 500 0198 1361     		str	r3, [r2, #16]
 501              	.L19:
 678:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 502              		.loc 1 678 5 view .LVU172
 678:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 503              		.loc 1 678 19 is_stmt 0 view .LVU173
 504 019a 6369     		ldr	r3, [r4, #20]
 678:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 505              		.loc 1 678 8 view .LVU174
 506 019c 012B     		cmp	r3, #1
 507 019e 33D0     		beq	.L31
 685:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
 508              		.loc 1 685 7 is_stmt 1 view .LVU175
 509 01a0 2268     		ldr	r2, [r4]
 510 01a2 136B     		ldr	r3, [r2, #48]
 511 01a4 23F00F03 		bic	r3, r3, #15
 512 01a8 1363     		str	r3, [r2, #48]
 513              	.L24:
 690:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
 514              		.loc 1 690 5 view .LVU176
 515 01aa E36D     		ldr	r3, [r4, #92]
 516 01ac 23F00303 		bic	r3, r3, #3
 517 01b0 43F00103 		orr	r3, r3, #1
 518 01b4 E365     		str	r3, [r4, #92]
 519 01b6 35E0     		b	.L3
 520              	.LVL35:
 521              	.L26:
ARM GAS  /tmp/ccEuGJBQ.s 			page 153


 405:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t tmpCFGR;
 522              		.loc 1 405 21 is_stmt 0 view .LVU177
 523 01b8 0020     		movs	r0, #0
 524 01ba 6AE7     		b	.L9
 525              	.LVL36:
 526              	.L29:
 586:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
 527              		.loc 1 586 7 is_stmt 1 view .LVU178
 586:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
 528              		.loc 1 586 18 is_stmt 0 view .LVU179
 529 01bc A26A     		ldr	r2, [r4, #40]
 530 01be 013A     		subs	r2, r2, #1
 586:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
 531              		.loc 1 586 15 view .LVU180
 532 01c0 43EA4243 		orr	r3, r3, r2, lsl #17
 533              	.LVL37:
 586:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
 534              		.loc 1 586 15 view .LVU181
 535 01c4 A0E7     		b	.L15
 536              	.LVL38:
 537              	.L20:
 633:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         MODIFY_REG(hadc->Instance->GCOMP, ADC_GCOMP_GCOMPCOEFF, 0UL);
 538              		.loc 1 633 9 is_stmt 1 view .LVU182
 539 01c6 2268     		ldr	r2, [r4]
 540              	.LVL39:
 633:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         MODIFY_REG(hadc->Instance->GCOMP, ADC_GCOMP_GCOMPCOEFF, 0UL);
 541              		.loc 1 633 9 is_stmt 0 view .LVU183
 542 01c8 1369     		ldr	r3, [r2, #16]
 543 01ca 23F48033 		bic	r3, r3, #65536
 544 01ce 1361     		str	r3, [r2, #16]
 634:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
 545              		.loc 1 634 9 is_stmt 1 view .LVU184
 546 01d0 2268     		ldr	r2, [r4]
 547 01d2 D2F8C030 		ldr	r3, [r2, #192]
 548 01d6 23F47F53 		bic	r3, r3, #16320
 549 01da 23F03F03 		bic	r3, r3, #63
 550 01de C2F8C030 		str	r3, [r2, #192]
 551 01e2 D1E7     		b	.L21
 552              	.L30:
 639:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         assert_param(IS_ADC_RIGHT_BIT_SHIFT(hadc->Init.Oversampling.RightBitShift));
 553              		.loc 1 639 9 view .LVU185
 640:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         assert_param(IS_ADC_TRIGGERED_OVERSAMPLING_MODE(hadc->Init.Oversampling.TriggeredMode));
 554              		.loc 1 640 9 view .LVU186
 641:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         assert_param(IS_ADC_REGOVERSAMPLING_MODE(hadc->Init.Oversampling.OversamplingStopReset));
 555              		.loc 1 641 9 view .LVU187
 642:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 556              		.loc 1 642 9 view .LVU188
 649:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                    ADC_CFGR2_OVSR  |
 557              		.loc 1 649 9 view .LVU189
 558 01e4 2168     		ldr	r1, [r4]
 559 01e6 0B69     		ldr	r3, [r1, #16]
 560 01e8 23F4FF63 		bic	r3, r3, #2040
 561 01ec 23F00403 		bic	r3, r3, #4
 562 01f0 626C     		ldr	r2, [r4, #68]
 563 01f2 A56C     		ldr	r5, [r4, #72]
 564 01f4 2A43     		orrs	r2, r2, r5
 565 01f6 E56C     		ldr	r5, [r4, #76]
ARM GAS  /tmp/ccEuGJBQ.s 			page 154


 566 01f8 2A43     		orrs	r2, r2, r5
 567 01fa 256D     		ldr	r5, [r4, #80]
 568 01fc 2A43     		orrs	r2, r2, r5
 569 01fe 1343     		orrs	r3, r3, r2
 570 0200 43F00103 		orr	r3, r3, #1
 571 0204 0B61     		str	r3, [r1, #16]
 572 0206 C8E7     		b	.L19
 573              	.L31:
 681:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
 574              		.loc 1 681 7 view .LVU190
 575 0208 2168     		ldr	r1, [r4]
 576 020a 0B6B     		ldr	r3, [r1, #48]
 577 020c 23F00F03 		bic	r3, r3, #15
 578 0210 226A     		ldr	r2, [r4, #32]
 579 0212 013A     		subs	r2, r2, #1
 580 0214 1343     		orrs	r3, r3, r2
 581 0216 0B63     		str	r3, [r1, #48]
 582 0218 C7E7     		b	.L24
 583              	.LVL40:
 584              	.L11:
 695:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 585              		.loc 1 695 5 view .LVU191
 586 021a E36D     		ldr	r3, [r4, #92]
 587              	.LVL41:
 695:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 588              		.loc 1 695 5 is_stmt 0 view .LVU192
 589 021c 43F01003 		orr	r3, r3, #16
 590 0220 E365     		str	r3, [r4, #92]
 697:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
 591              		.loc 1 697 5 is_stmt 1 view .LVU193
 592              	.LVL42:
 697:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
 593              		.loc 1 697 20 is_stmt 0 view .LVU194
 594 0222 0120     		movs	r0, #1
 595              	.LVL43:
 596              	.L3:
 702:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 597              		.loc 1 702 1 view .LVU195
 598 0224 03B0     		add	sp, sp, #12
 599              	.LCFI2:
 600              		.cfi_remember_state
 601              		.cfi_def_cfa_offset 12
 602              		@ sp needed
 603 0226 30BD     		pop	{r4, r5, pc}
 604              	.LVL44:
 605              	.L25:
 606              	.LCFI3:
 607              		.cfi_restore_state
 415:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
 608              		.loc 1 415 12 view .LVU196
 609 0228 0120     		movs	r0, #1
 610              	.LVL45:
 415:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
 611              		.loc 1 415 12 view .LVU197
 612 022a FBE7     		b	.L3
 613              	.L33:
 614              		.align	2
ARM GAS  /tmp/ccEuGJBQ.s 			page 155


 615              	.L32:
 616 022c 00000000 		.word	SystemCoreClock
 617 0230 632D3E05 		.word	87960931
 618 0234 00010050 		.word	1342177536
 619 0238 00030050 		.word	1342178048
 620 023c 0740F0FF 		.word	-1032185
 621              		.cfi_endproc
 622              	.LFE329:
 624              		.section	.text.HAL_ADC_MspDeInit,"ax",%progbits
 625              		.align	1
 626              		.weak	HAL_ADC_MspDeInit
 627              		.syntax unified
 628              		.thumb
 629              		.thumb_func
 631              	HAL_ADC_MspDeInit:
 632              	.LVL46:
 633              	.LFB332:
 930:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 931:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** /**
 932:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @brief  DeInitialize the ADC MSP.
 933:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @param hadc ADC handle
 934:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @note   All ADC instances use the same core clock at RCC level, disabling
 935:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         the core clock reset all ADC instances).
 936:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @retval None
 937:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   */
 938:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** __weak void HAL_ADC_MspDeInit(ADC_HandleTypeDef *hadc)
 939:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** {
 634              		.loc 1 939 1 is_stmt 1 view -0
 635              		.cfi_startproc
 636              		@ args = 0, pretend = 0, frame = 0
 637              		@ frame_needed = 0, uses_anonymous_args = 0
 638              		@ link register save eliminated.
 940:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
 941:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   UNUSED(hadc);
 639              		.loc 1 941 3 view .LVU199
 942:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 943:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* NOTE : This function should not be modified. When the callback is needed,
 944:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             function HAL_ADC_MspDeInit must be implemented in the user file.
 945:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****    */
 946:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** }
 640              		.loc 1 946 1 is_stmt 0 view .LVU200
 641 0000 7047     		bx	lr
 642              		.cfi_endproc
 643              	.LFE332:
 645              		.section	.text.HAL_ADC_PollForConversion,"ax",%progbits
 646              		.align	1
 647              		.global	HAL_ADC_PollForConversion
 648              		.syntax unified
 649              		.thumb
 650              		.thumb_func
 652              	HAL_ADC_PollForConversion:
 653              	.LVL47:
 654              	.LFB335:
 947:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 948:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
 949:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** /**
 950:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @brief  Register a User ADC Callback
ARM GAS  /tmp/ccEuGJBQ.s 			page 156


 951:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         To be used instead of the weak predefined callback
 952:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @param  hadc Pointer to a ADC_HandleTypeDef structure that contains
 953:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *                the configuration information for the specified ADC.
 954:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @param  CallbackID ID of the callback to be registered
 955:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         This parameter can be one of the following values:
 956:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_CONVERSION_COMPLETE_CB_ID      ADC conversion complete callback ID
 957:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_CONVERSION_HALF_CB_ID          ADC conversion DMA half-transfer call
 958:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_LEVEL_OUT_OF_WINDOW_1_CB_ID    ADC analog watchdog 1 callback ID
 959:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_ERROR_CB_ID                    ADC error callback ID
 960:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_INJ_CONVERSION_COMPLETE_CB_ID  ADC group injected conversion complet
 961:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_INJ_QUEUE_OVEFLOW_CB_ID        ADC group injected context queue over
 962:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_LEVEL_OUT_OF_WINDOW_2_CB_ID    ADC analog watchdog 2 callback ID
 963:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_LEVEL_OUT_OF_WINDOW_3_CB_ID    ADC analog watchdog 3 callback ID
 964:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_END_OF_SAMPLING_CB_ID          ADC end of sampling callback ID
 965:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_MSPINIT_CB_ID                  ADC Msp Init callback ID
 966:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_MSPDEINIT_CB_ID                ADC Msp DeInit callback ID
 967:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_MSPINIT_CB_ID MspInit callback ID
 968:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_MSPDEINIT_CB_ID MspDeInit callback ID
 969:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @param  pCallback pointer to the Callback function
 970:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @retval HAL status
 971:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   */
 972:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_RegisterCallback(ADC_HandleTypeDef *hadc, HAL_ADC_CallbackIDTypeDef Callb
 973:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                                            pADC_CallbackTypeDef pCallback)
 974:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** {
 975:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   HAL_StatusTypeDef status = HAL_OK;
 976:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 977:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   if (pCallback == NULL)
 978:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
 979:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Update the error code */
 980:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     hadc->ErrorCode |= HAL_ADC_ERROR_INVALID_CALLBACK;
 981:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 982:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     return HAL_ERROR;
 983:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
 984:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 985:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   if ((hadc->State & HAL_ADC_STATE_READY) != 0UL)
 986:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
 987:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     switch (CallbackID)
 988:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 989:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       case HAL_ADC_CONVERSION_COMPLETE_CB_ID :
 990:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         hadc->ConvCpltCallback = pCallback;
 991:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         break;
 992:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 993:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       case HAL_ADC_CONVERSION_HALF_CB_ID :
 994:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         hadc->ConvHalfCpltCallback = pCallback;
 995:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         break;
 996:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 997:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       case HAL_ADC_LEVEL_OUT_OF_WINDOW_1_CB_ID :
 998:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         hadc->LevelOutOfWindowCallback = pCallback;
 999:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         break;
1000:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1001:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       case HAL_ADC_ERROR_CB_ID :
1002:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         hadc->ErrorCallback = pCallback;
1003:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         break;
1004:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1005:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       case HAL_ADC_INJ_CONVERSION_COMPLETE_CB_ID :
1006:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         hadc->InjectedConvCpltCallback = pCallback;
1007:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         break;
ARM GAS  /tmp/ccEuGJBQ.s 			page 157


1008:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1009:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       case HAL_ADC_INJ_QUEUE_OVEFLOW_CB_ID :
1010:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         hadc->InjectedQueueOverflowCallback = pCallback;
1011:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         break;
1012:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1013:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       case HAL_ADC_LEVEL_OUT_OF_WINDOW_2_CB_ID :
1014:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         hadc->LevelOutOfWindow2Callback = pCallback;
1015:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         break;
1016:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1017:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       case HAL_ADC_LEVEL_OUT_OF_WINDOW_3_CB_ID :
1018:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         hadc->LevelOutOfWindow3Callback = pCallback;
1019:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         break;
1020:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1021:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       case HAL_ADC_END_OF_SAMPLING_CB_ID :
1022:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         hadc->EndOfSamplingCallback = pCallback;
1023:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         break;
1024:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1025:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       case HAL_ADC_MSPINIT_CB_ID :
1026:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         hadc->MspInitCallback = pCallback;
1027:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         break;
1028:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1029:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       case HAL_ADC_MSPDEINIT_CB_ID :
1030:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         hadc->MspDeInitCallback = pCallback;
1031:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         break;
1032:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1033:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       default :
1034:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* Update the error code */
1035:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         hadc->ErrorCode |= HAL_ADC_ERROR_INVALID_CALLBACK;
1036:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1037:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* Return error status */
1038:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         status = HAL_ERROR;
1039:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         break;
1040:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
1041:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
1042:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   else if (HAL_ADC_STATE_RESET == hadc->State)
1043:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
1044:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     switch (CallbackID)
1045:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
1046:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       case HAL_ADC_MSPINIT_CB_ID :
1047:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         hadc->MspInitCallback = pCallback;
1048:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         break;
1049:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1050:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       case HAL_ADC_MSPDEINIT_CB_ID :
1051:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         hadc->MspDeInitCallback = pCallback;
1052:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         break;
1053:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1054:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       default :
1055:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* Update the error code */
1056:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         hadc->ErrorCode |= HAL_ADC_ERROR_INVALID_CALLBACK;
1057:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1058:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* Return error status */
1059:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         status = HAL_ERROR;
1060:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         break;
1061:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
1062:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
1063:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   else
1064:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
ARM GAS  /tmp/ccEuGJBQ.s 			page 158


1065:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Update the error code */
1066:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     hadc->ErrorCode |= HAL_ADC_ERROR_INVALID_CALLBACK;
1067:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1068:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Return error status */
1069:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     status =  HAL_ERROR;
1070:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
1071:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1072:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   return status;
1073:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** }
1074:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1075:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** /**
1076:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @brief  Unregister a ADC Callback
1077:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         ADC callback is redirected to the weak predefined callback
1078:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @param  hadc Pointer to a ADC_HandleTypeDef structure that contains
1079:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *                the configuration information for the specified ADC.
1080:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @param  CallbackID ID of the callback to be unregistered
1081:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         This parameter can be one of the following values:
1082:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_CONVERSION_COMPLETE_CB_ID      ADC conversion complete callback ID
1083:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_CONVERSION_HALF_CB_ID          ADC conversion DMA half-transfer call
1084:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_LEVEL_OUT_OF_WINDOW_1_CB_ID    ADC analog watchdog 1 callback ID
1085:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_ERROR_CB_ID                    ADC error callback ID
1086:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_INJ_CONVERSION_COMPLETE_CB_ID  ADC group injected conversion complet
1087:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_INJ_QUEUE_OVEFLOW_CB_ID        ADC group injected context queue over
1088:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_LEVEL_OUT_OF_WINDOW_2_CB_ID    ADC analog watchdog 2 callback ID
1089:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_LEVEL_OUT_OF_WINDOW_3_CB_ID    ADC analog watchdog 3 callback ID
1090:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_END_OF_SAMPLING_CB_ID          ADC end of sampling callback ID
1091:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_MSPINIT_CB_ID                  ADC Msp Init callback ID
1092:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_MSPDEINIT_CB_ID                ADC Msp DeInit callback ID
1093:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_MSPINIT_CB_ID MspInit callback ID
1094:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_MSPDEINIT_CB_ID MspDeInit callback ID
1095:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @retval HAL status
1096:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   */
1097:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_UnRegisterCallback(ADC_HandleTypeDef *hadc, HAL_ADC_CallbackIDTypeDef Cal
1098:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** {
1099:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   HAL_StatusTypeDef status = HAL_OK;
1100:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1101:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   if ((hadc->State & HAL_ADC_STATE_READY) != 0UL)
1102:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
1103:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     switch (CallbackID)
1104:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
1105:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       case HAL_ADC_CONVERSION_COMPLETE_CB_ID :
1106:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         hadc->ConvCpltCallback = HAL_ADC_ConvCpltCallback;
1107:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         break;
1108:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1109:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       case HAL_ADC_CONVERSION_HALF_CB_ID :
1110:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         hadc->ConvHalfCpltCallback = HAL_ADC_ConvHalfCpltCallback;
1111:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         break;
1112:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1113:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       case HAL_ADC_LEVEL_OUT_OF_WINDOW_1_CB_ID :
1114:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         hadc->LevelOutOfWindowCallback = HAL_ADC_LevelOutOfWindowCallback;
1115:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         break;
1116:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1117:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       case HAL_ADC_ERROR_CB_ID :
1118:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         hadc->ErrorCallback = HAL_ADC_ErrorCallback;
1119:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         break;
1120:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1121:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       case HAL_ADC_INJ_CONVERSION_COMPLETE_CB_ID :
ARM GAS  /tmp/ccEuGJBQ.s 			page 159


1122:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         hadc->InjectedConvCpltCallback = HAL_ADCEx_InjectedConvCpltCallback;
1123:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         break;
1124:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1125:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       case HAL_ADC_INJ_QUEUE_OVEFLOW_CB_ID :
1126:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         hadc->InjectedQueueOverflowCallback = HAL_ADCEx_InjectedQueueOverflowCallback;
1127:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         break;
1128:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1129:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       case HAL_ADC_LEVEL_OUT_OF_WINDOW_2_CB_ID :
1130:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         hadc->LevelOutOfWindow2Callback = HAL_ADCEx_LevelOutOfWindow2Callback;
1131:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         break;
1132:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1133:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       case HAL_ADC_LEVEL_OUT_OF_WINDOW_3_CB_ID :
1134:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         hadc->LevelOutOfWindow3Callback = HAL_ADCEx_LevelOutOfWindow3Callback;
1135:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         break;
1136:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1137:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       case HAL_ADC_END_OF_SAMPLING_CB_ID :
1138:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         hadc->EndOfSamplingCallback = HAL_ADCEx_EndOfSamplingCallback;
1139:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         break;
1140:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1141:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       case HAL_ADC_MSPINIT_CB_ID :
1142:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         hadc->MspInitCallback = HAL_ADC_MspInit; /* Legacy weak MspInit              */
1143:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         break;
1144:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1145:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       case HAL_ADC_MSPDEINIT_CB_ID :
1146:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         hadc->MspDeInitCallback = HAL_ADC_MspDeInit; /* Legacy weak MspDeInit            */
1147:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         break;
1148:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1149:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       default :
1150:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* Update the error code */
1151:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         hadc->ErrorCode |= HAL_ADC_ERROR_INVALID_CALLBACK;
1152:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1153:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* Return error status */
1154:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         status =  HAL_ERROR;
1155:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         break;
1156:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
1157:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
1158:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   else if (HAL_ADC_STATE_RESET == hadc->State)
1159:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
1160:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     switch (CallbackID)
1161:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
1162:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       case HAL_ADC_MSPINIT_CB_ID :
1163:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         hadc->MspInitCallback = HAL_ADC_MspInit;                   /* Legacy weak MspInit          
1164:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         break;
1165:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1166:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       case HAL_ADC_MSPDEINIT_CB_ID :
1167:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         hadc->MspDeInitCallback = HAL_ADC_MspDeInit;               /* Legacy weak MspDeInit        
1168:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         break;
1169:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1170:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       default :
1171:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* Update the error code */
1172:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         hadc->ErrorCode |= HAL_ADC_ERROR_INVALID_CALLBACK;
1173:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1174:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* Return error status */
1175:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         status =  HAL_ERROR;
1176:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         break;
1177:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
1178:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
ARM GAS  /tmp/ccEuGJBQ.s 			page 160


1179:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   else
1180:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
1181:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Update the error code */
1182:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     hadc->ErrorCode |= HAL_ADC_ERROR_INVALID_CALLBACK;
1183:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1184:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Return error status */
1185:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     status =  HAL_ERROR;
1186:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
1187:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1188:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   return status;
1189:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** }
1190:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1191:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
1192:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1193:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** /**
1194:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @}
1195:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   */
1196:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1197:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** /** @defgroup ADC_Exported_Functions_Group2 ADC Input and Output operation functions
1198:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @brief    ADC IO operation functions
1199:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *
1200:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** @verbatim
1201:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****  ===============================================================================
1202:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                       ##### IO operation functions #####
1203:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****  ===============================================================================
1204:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     [..]  This section provides functions allowing to:
1205:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       (+) Start conversion of regular group.
1206:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       (+) Stop conversion of regular group.
1207:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       (+) Poll for conversion complete on regular group.
1208:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       (+) Poll for conversion event.
1209:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       (+) Get result of regular channel conversion.
1210:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       (+) Start conversion of regular group and enable interruptions.
1211:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       (+) Stop conversion of regular group and disable interruptions.
1212:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       (+) Handle ADC interrupt request
1213:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       (+) Start conversion of regular group and enable DMA transfer.
1214:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       (+) Stop conversion of regular group and disable ADC DMA transfer.
1215:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** @endverbatim
1216:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @{
1217:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   */
1218:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1219:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** /**
1220:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @brief  Enable ADC, start conversion of regular group.
1221:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @note   Interruptions enabled in this function: None.
1222:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @note   Case of multimode enabled (when multimode feature is available):
1223:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *           if ADC is Slave, ADC is enabled but conversion is not started,
1224:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *           if ADC is master, ADC is enabled and multimode conversion is started.
1225:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @param hadc ADC handle
1226:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @retval HAL status
1227:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   */
1228:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Start(ADC_HandleTypeDef *hadc)
1229:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** {
1230:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
1231:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #if defined(ADC_MULTIMODE_SUPPORT)
1232:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   const ADC_TypeDef *tmpADC_Master;
1233:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t tmp_multimode_config = LL_ADC_GetMultimode(__LL_ADC_COMMON_INSTANCE(hadc->Instance));
1234:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #endif
1235:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
ARM GAS  /tmp/ccEuGJBQ.s 			page 161


1236:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Check the parameters */
1237:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
1238:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1239:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Perform ADC enable and conversion start if no conversion is on going */
1240:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   if (LL_ADC_REG_IsConversionOngoing(hadc->Instance) == 0UL)
1241:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
1242:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Process locked */
1243:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     __HAL_LOCK(hadc);
1244:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1245:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Enable the ADC peripheral */
1246:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     tmp_hal_status = ADC_Enable(hadc);
1247:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1248:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Start conversion if ADC is effectively enabled */
1249:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     if (tmp_hal_status == HAL_OK)
1250:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
1251:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Set ADC state                                                        */
1252:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* - Clear state bitfield related to regular group conversion results   */
1253:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* - Set state bitfield related to regular operation                    */
1254:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       ADC_STATE_CLR_SET(hadc->State,
1255:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                         HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR | HAL_A
1256:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                         HAL_ADC_STATE_REG_BUSY);
1257:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1258:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #if defined(ADC_MULTIMODE_SUPPORT)
1259:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Reset HAL_ADC_STATE_MULTIMODE_SLAVE bit
1260:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         - if ADC instance is master or if multimode feature is not available
1261:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         - if multimode setting is disabled (ADC instance slave in independent mode) */
1262:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       if ((__LL_ADC_MULTI_INSTANCE_MASTER(hadc->Instance) == hadc->Instance)
1263:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
1264:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****          )
1265:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
1266:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         CLEAR_BIT(hadc->State, HAL_ADC_STATE_MULTIMODE_SLAVE);
1267:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
1268:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #endif
1269:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1270:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Set ADC error code */
1271:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Check if a conversion is on going on ADC group injected */
1272:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       if (HAL_IS_BIT_SET(hadc->State, HAL_ADC_STATE_INJ_BUSY))
1273:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
1274:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* Reset ADC error code fields related to regular conversions only */
1275:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         CLEAR_BIT(hadc->ErrorCode, (HAL_ADC_ERROR_OVR | HAL_ADC_ERROR_DMA));
1276:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
1277:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       else
1278:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
1279:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* Reset all ADC error code fields */
1280:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         ADC_CLEAR_ERRORCODE(hadc);
1281:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
1282:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1283:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Clear ADC group regular conversion flag and overrun flag               */
1284:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* (To ensure of no unknown state from potential previous ADC operations) */
1285:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_EOC | ADC_FLAG_EOS | ADC_FLAG_OVR));
1286:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1287:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Process unlocked */
1288:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Unlock before starting ADC conversions: in case of potential         */
1289:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* interruption, to let the process to ADC IRQ Handler.                 */
1290:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       __HAL_UNLOCK(hadc);
1291:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1292:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Enable conversion of regular group.                                  */
ARM GAS  /tmp/ccEuGJBQ.s 			page 162


1293:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* If software start has been selected, conversion starts immediately.  */
1294:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* If external trigger has been selected, conversion will start at next */
1295:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* trigger event.                                                       */
1296:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Case of multimode enabled (when multimode feature is available):     */
1297:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /*  - if ADC is slave and dual regular conversions are enabled, ADC is  */
1298:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /*    enabled only (conversion is not started),                         */
1299:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /*  - if ADC is master, ADC is enabled and conversion is started.       */
1300:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #if defined(ADC_MULTIMODE_SUPPORT)
1301:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       if ((__LL_ADC_MULTI_INSTANCE_MASTER(hadc->Instance) == hadc->Instance)
1302:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
1303:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_DUAL_INJ_SIMULT)
1304:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_DUAL_INJ_ALTERN)
1305:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****          )
1306:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
1307:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* ADC instance is not a multimode slave instance with multimode regular conversions enable
1308:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         if (READ_BIT(hadc->Instance->CFGR, ADC_CFGR_JAUTO) != 0UL)
1309:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
1310:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_EOC, HAL_ADC_STATE_INJ_BUSY);
1311:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         }
1312:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1313:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* Start ADC group regular conversion */
1314:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         LL_ADC_REG_StartConversion(hadc->Instance);
1315:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
1316:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       else
1317:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
1318:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* ADC instance is a multimode slave instance with multimode regular conversions enabled */
1319:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_MULTIMODE_SLAVE);
1320:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* if Master ADC JAUTO bit is set, update Slave State in setting
1321:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****            HAL_ADC_STATE_INJ_BUSY bit and in resetting HAL_ADC_STATE_INJ_EOC bit */
1322:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         tmpADC_Master = __LL_ADC_MULTI_INSTANCE_MASTER(hadc->Instance);
1323:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         if (READ_BIT(tmpADC_Master->CFGR, ADC_CFGR_JAUTO) != 0UL)
1324:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
1325:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_EOC, HAL_ADC_STATE_INJ_BUSY);
1326:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         }
1327:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1328:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
1329:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #else
1330:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       if (READ_BIT(hadc->Instance->CFGR, ADC_CFGR_JAUTO) != 0UL)
1331:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
1332:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_EOC, HAL_ADC_STATE_INJ_BUSY);
1333:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
1334:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1335:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Start ADC group regular conversion */
1336:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       LL_ADC_REG_StartConversion(hadc->Instance);
1337:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #endif
1338:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
1339:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     else
1340:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
1341:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Process unlocked */
1342:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       __HAL_UNLOCK(hadc);
1343:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
1344:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
1345:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   else
1346:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
1347:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     tmp_hal_status = HAL_BUSY;
1348:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
1349:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
ARM GAS  /tmp/ccEuGJBQ.s 			page 163


1350:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Return function status */
1351:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   return tmp_hal_status;
1352:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** }
1353:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1354:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** /**
1355:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @brief  Stop ADC conversion of regular group (and injected channels in
1356:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         case of auto_injection mode), disable ADC peripheral.
1357:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @note:  ADC peripheral disable is forcing stop of potential
1358:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         conversion on injected group. If injected group is under use, it
1359:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         should be preliminarily stopped using HAL_ADCEx_InjectedStop function.
1360:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @param hadc ADC handle
1361:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @retval HAL status.
1362:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   */
1363:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Stop(ADC_HandleTypeDef *hadc)
1364:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** {
1365:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
1366:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1367:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Check the parameters */
1368:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
1369:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1370:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Process locked */
1371:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   __HAL_LOCK(hadc);
1372:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1373:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* 1. Stop potential conversion on going, on ADC groups regular and injected */
1374:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   tmp_hal_status = ADC_ConversionStop(hadc, ADC_REGULAR_INJECTED_GROUP);
1375:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1376:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Disable ADC peripheral if conversions are effectively stopped */
1377:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   if (tmp_hal_status == HAL_OK)
1378:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
1379:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* 2. Disable the ADC peripheral */
1380:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     tmp_hal_status = ADC_Disable(hadc);
1381:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1382:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Check if ADC is effectively disabled */
1383:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     if (tmp_hal_status == HAL_OK)
1384:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
1385:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Set ADC state */
1386:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       ADC_STATE_CLR_SET(hadc->State,
1387:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                         HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
1388:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                         HAL_ADC_STATE_READY);
1389:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
1390:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
1391:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1392:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Process unlocked */
1393:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   __HAL_UNLOCK(hadc);
1394:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1395:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Return function status */
1396:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   return tmp_hal_status;
1397:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** }
1398:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1399:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** /**
1400:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @brief  Wait for regular group conversion to be completed.
1401:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @note   ADC conversion flags EOS (end of sequence) and EOC (end of
1402:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         conversion) are cleared by this function, with an exception:
1403:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         if low power feature "LowPowerAutoWait" is enabled, flags are
1404:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         not cleared to not interfere with this feature until data register
1405:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         is read using function HAL_ADC_GetValue().
1406:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @note   This function cannot be used in a particular setup: ADC configured
ARM GAS  /tmp/ccEuGJBQ.s 			page 164


1407:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         in DMA mode and polling for end of each conversion (ADC init
1408:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         parameter "EOCSelection" set to ADC_EOC_SINGLE_CONV).
1409:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         In this case, DMA resets the flag EOC and polling cannot be
1410:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         performed on each conversion. Nevertheless, polling can still
1411:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         be performed on the complete sequence (ADC init
1412:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         parameter "EOCSelection" set to ADC_EOC_SEQ_CONV).
1413:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @param hadc ADC handle
1414:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @param Timeout Timeout value in millisecond.
1415:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @retval HAL status
1416:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   */
1417:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_PollForConversion(ADC_HandleTypeDef *hadc, uint32_t Timeout)
1418:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** {
 655              		.loc 1 1418 1 is_stmt 1 view -0
 656              		.cfi_startproc
 657              		@ args = 0, pretend = 0, frame = 0
 658              		@ frame_needed = 0, uses_anonymous_args = 0
 659              		.loc 1 1418 1 is_stmt 0 view .LVU202
 660 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 661              	.LCFI4:
 662              		.cfi_def_cfa_offset 24
 663              		.cfi_offset 4, -24
 664              		.cfi_offset 5, -20
 665              		.cfi_offset 6, -16
 666              		.cfi_offset 7, -12
 667              		.cfi_offset 8, -8
 668              		.cfi_offset 14, -4
 669 0004 0446     		mov	r4, r0
 670 0006 0E46     		mov	r6, r1
1419:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t tickstart;
 671              		.loc 1 1419 3 is_stmt 1 view .LVU203
1420:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t tmp_Flag_End;
 672              		.loc 1 1420 3 view .LVU204
1421:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t tmp_cfgr;
 673              		.loc 1 1421 3 view .LVU205
1422:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #if defined(ADC_MULTIMODE_SUPPORT)
1423:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   const ADC_TypeDef *tmpADC_Master;
 674              		.loc 1 1423 3 view .LVU206
1424:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t tmp_multimode_config = LL_ADC_GetMultimode(__LL_ADC_COMMON_INSTANCE(hadc->Instance));
 675              		.loc 1 1424 3 view .LVU207
 676              	.LVL48:
 677              	.LBB358:
 678              	.LBI358:
6385:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 679              		.loc 2 6385 26 view .LVU208
 680              	.LBB359:
6387:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 681              		.loc 2 6387 3 view .LVU209
6387:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 682              		.loc 2 6387 21 is_stmt 0 view .LVU210
 683 0008 424B     		ldr	r3, .L60
 684 000a 9F68     		ldr	r7, [r3, #8]
6387:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 685              		.loc 2 6387 10 view .LVU211
 686 000c 07F01F07 		and	r7, r7, #31
 687              	.LVL49:
6387:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 688              		.loc 2 6387 10 view .LVU212
ARM GAS  /tmp/ccEuGJBQ.s 			page 165


 689              	.LBE359:
 690              	.LBE358:
1425:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #endif
1426:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1427:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Check the parameters */
1428:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 691              		.loc 1 1428 3 is_stmt 1 view .LVU213
1429:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1430:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* If end of conversion selected to end of sequence conversions */
1431:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   if (hadc->Init.EOCSelection == ADC_EOC_SEQ_CONV)
 692              		.loc 1 1431 3 view .LVU214
 693              		.loc 1 1431 17 is_stmt 0 view .LVU215
 694 0010 8569     		ldr	r5, [r0, #24]
 695              		.loc 1 1431 6 view .LVU216
 696 0012 082D     		cmp	r5, #8
 697 0014 14D0     		beq	.L36
1432:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
1433:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     tmp_Flag_End = ADC_FLAG_EOS;
1434:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
1435:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* If end of conversion selected to end of unitary conversion */
1436:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   else /* ADC_EOC_SINGLE_CONV */
1437:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
1438:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Verification that ADC configuration is compliant with polling for      */
1439:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* each conversion:                                                       */
1440:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Particular case is ADC configured in DMA mode and ADC sequencer with   */
1441:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* several ranks and polling for end of each conversion.                  */
1442:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* For code simplicity sake, this particular case is generalized to       */
1443:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* ADC configured in DMA mode and and polling for end of each conversion. */
1444:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #if defined(ADC_MULTIMODE_SUPPORT)
1445:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     if ((tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 698              		.loc 1 1445 5 is_stmt 1 view .LVU217
 699 0016 092F     		cmp	r7, #9
 700 0018 05D8     		bhi	.L37
 701 001a 40F22123 		movw	r3, #545
 702 001e FB40     		lsrs	r3, r3, r7
 703 0020 13F0010F 		tst	r3, #1
 704 0024 06D1     		bne	.L54
 705              	.L37:
1446:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         || (tmp_multimode_config == LL_ADC_MULTI_DUAL_INJ_SIMULT)
1447:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         || (tmp_multimode_config == LL_ADC_MULTI_DUAL_INJ_ALTERN)
1448:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****        )
1449:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
1450:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Check ADC DMA mode in independent mode on ADC group regular */
1451:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       if (READ_BIT(hadc->Instance->CFGR, ADC_CFGR_DMAEN) != 0UL)
1452:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
1453:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
1454:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         return HAL_ERROR;
1455:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
1456:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       else
1457:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
1458:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         tmp_Flag_End = (ADC_FLAG_EOC);
1459:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
1460:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
1461:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     else
1462:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
1463:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Check ADC DMA mode in multimode on ADC group regular */
1464:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       if (LL_ADC_GetMultiDMATransfer(__LL_ADC_COMMON_INSTANCE(hadc->Instance)) != LL_ADC_MULTI_REG_
ARM GAS  /tmp/ccEuGJBQ.s 			page 166


 706              		.loc 1 1464 7 view .LVU218
 707              	.LVL50:
 708              	.LBB360:
 709              	.LBI360:
6482:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 710              		.loc 2 6482 26 view .LVU219
 711              	.LBB361:
6484:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 712              		.loc 2 6484 3 view .LVU220
6484:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 713              		.loc 2 6484 21 is_stmt 0 view .LVU221
 714 0026 3B4B     		ldr	r3, .L60
 715 0028 9B68     		ldr	r3, [r3, #8]
 716              	.LVL51:
6484:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 717              		.loc 2 6484 21 view .LVU222
 718              	.LBE361:
 719              	.LBE360:
 720              		.loc 1 1464 10 view .LVU223
 721 002a 13F4604F 		tst	r3, #57344
 722 002e 2CD1     		bne	.L55
1465:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
1466:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
1467:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         return HAL_ERROR;
1468:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
1469:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       else
1470:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
1471:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         tmp_Flag_End = (ADC_FLAG_EOC);
 723              		.loc 1 1471 22 view .LVU224
 724 0030 0425     		movs	r5, #4
 725 0032 05E0     		b	.L36
 726              	.L54:
1451:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 727              		.loc 1 1451 7 is_stmt 1 view .LVU225
1451:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 728              		.loc 1 1451 11 is_stmt 0 view .LVU226
 729 0034 0368     		ldr	r3, [r0]
 730 0036 DB68     		ldr	r3, [r3, #12]
1451:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 731              		.loc 1 1451 10 view .LVU227
 732 0038 13F0010F 		tst	r3, #1
 733 003c 1FD1     		bne	.L56
1458:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
 734              		.loc 1 1458 22 view .LVU228
 735 003e 0425     		movs	r5, #4
 736              	.L36:
 737              	.LVL52:
1472:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
1473:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
1474:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #else
1475:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Check ADC DMA mode */
1476:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     if (READ_BIT(hadc->Instance->CFGR, ADC_CFGR_DMAEN) != 0UL)
1477:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
1478:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
1479:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       return HAL_ERROR;
1480:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
1481:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     else
ARM GAS  /tmp/ccEuGJBQ.s 			page 167


1482:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
1483:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       tmp_Flag_End = (ADC_FLAG_EOC);
1484:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
1485:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #endif
1486:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
1487:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1488:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Get tick count */
1489:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   tickstart = HAL_GetTick();
 738              		.loc 1 1489 3 is_stmt 1 view .LVU229
 739              		.loc 1 1489 15 is_stmt 0 view .LVU230
 740 0040 FFF7FEFF 		bl	HAL_GetTick
 741              	.LVL53:
 742              		.loc 1 1489 15 view .LVU231
 743 0044 8046     		mov	r8, r0
 744              	.LVL54:
1490:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1491:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Wait until End of unitary conversion or sequence conversions flag is raised */
1492:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   while ((hadc->Instance->ISR & tmp_Flag_End) == 0UL)
 745              		.loc 1 1492 3 is_stmt 1 view .LVU232
 746              	.L40:
 747              		.loc 1 1492 47 view .LVU233
 748              		.loc 1 1492 15 is_stmt 0 view .LVU234
 749 0046 2368     		ldr	r3, [r4]
 750              		.loc 1 1492 25 view .LVU235
 751 0048 1A68     		ldr	r2, [r3]
 752              		.loc 1 1492 47 view .LVU236
 753 004a 2A42     		tst	r2, r5
 754 004c 23D1     		bne	.L57
1493:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
1494:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Check if timeout is disabled (set to infinite wait) */
1495:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     if (Timeout != HAL_MAX_DELAY)
 755              		.loc 1 1495 5 is_stmt 1 view .LVU237
 756              		.loc 1 1495 8 is_stmt 0 view .LVU238
 757 004e B6F1FF3F 		cmp	r6, #-1
 758 0052 F8D0     		beq	.L40
1496:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
1497:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0UL))
 759              		.loc 1 1497 7 is_stmt 1 view .LVU239
 760              		.loc 1 1497 13 is_stmt 0 view .LVU240
 761 0054 FFF7FEFF 		bl	HAL_GetTick
 762              	.LVL55:
 763              		.loc 1 1497 27 view .LVU241
 764 0058 A0EB0800 		sub	r0, r0, r8
 765              		.loc 1 1497 10 view .LVU242
 766 005c B042     		cmp	r0, r6
 767 005e 01D8     		bhi	.L41
 768              		.loc 1 1497 51 discriminator 1 view .LVU243
 769 0060 002E     		cmp	r6, #0
 770 0062 F0D1     		bne	.L40
 771              	.L41:
1498:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
1499:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* New check to avoid false timeout detection in case of preemption */
1500:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         if ((hadc->Instance->ISR & tmp_Flag_End) == 0UL)
 772              		.loc 1 1500 9 is_stmt 1 view .LVU244
 773              		.loc 1 1500 18 is_stmt 0 view .LVU245
 774 0064 2368     		ldr	r3, [r4]
 775              		.loc 1 1500 28 view .LVU246
ARM GAS  /tmp/ccEuGJBQ.s 			page 168


 776 0066 1B68     		ldr	r3, [r3]
 777              		.loc 1 1500 12 view .LVU247
 778 0068 2B42     		tst	r3, r5
 779 006a ECD1     		bne	.L40
1501:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
1502:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           /* Update ADC state machine to timeout */
1503:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_TIMEOUT);
 780              		.loc 1 1503 11 is_stmt 1 view .LVU248
 781 006c E36D     		ldr	r3, [r4, #92]
 782 006e 43F00403 		orr	r3, r3, #4
 783 0072 E365     		str	r3, [r4, #92]
1504:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1505:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           /* Process unlocked */
1506:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           __HAL_UNLOCK(hadc);
 784              		.loc 1 1506 11 view .LVU249
 785              		.loc 1 1506 11 view .LVU250
 786 0074 0023     		movs	r3, #0
 787 0076 84F85830 		strb	r3, [r4, #88]
 788              		.loc 1 1506 11 view .LVU251
1507:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1508:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           return HAL_TIMEOUT;
 789              		.loc 1 1508 11 view .LVU252
 790              		.loc 1 1508 18 is_stmt 0 view .LVU253
 791 007a 0320     		movs	r0, #3
 792 007c 45E0     		b	.L38
 793              	.LVL56:
 794              	.L56:
1453:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         return HAL_ERROR;
 795              		.loc 1 1453 9 is_stmt 1 view .LVU254
 796 007e C36D     		ldr	r3, [r0, #92]
 797 0080 43F02003 		orr	r3, r3, #32
 798 0084 C365     		str	r3, [r0, #92]
1454:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
 799              		.loc 1 1454 9 view .LVU255
1454:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
 800              		.loc 1 1454 16 is_stmt 0 view .LVU256
 801 0086 0120     		movs	r0, #1
 802              	.LVL57:
1454:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
 803              		.loc 1 1454 16 view .LVU257
 804 0088 3FE0     		b	.L38
 805              	.LVL58:
 806              	.L55:
1466:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         return HAL_ERROR;
 807              		.loc 1 1466 9 is_stmt 1 view .LVU258
 808 008a E36D     		ldr	r3, [r4, #92]
 809 008c 43F02003 		orr	r3, r3, #32
 810 0090 E365     		str	r3, [r4, #92]
1467:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
 811              		.loc 1 1467 9 view .LVU259
1467:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
 812              		.loc 1 1467 16 is_stmt 0 view .LVU260
 813 0092 0120     		movs	r0, #1
 814              	.LVL59:
1467:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
 815              		.loc 1 1467 16 view .LVU261
 816 0094 39E0     		b	.L38
ARM GAS  /tmp/ccEuGJBQ.s 			page 169


 817              	.LVL60:
 818              	.L57:
1509:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         }
1510:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
1511:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
1512:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
1513:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1514:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Update ADC state machine */
1515:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOC);
 819              		.loc 1 1515 3 is_stmt 1 view .LVU262
 820 0096 E26D     		ldr	r2, [r4, #92]
 821 0098 42F40072 		orr	r2, r2, #512
 822 009c E265     		str	r2, [r4, #92]
1516:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1517:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Determine whether any further conversion upcoming on group regular       */
1518:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* by external trigger, continuous mode or scan sequence on going.          */
1519:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   if ((LL_ADC_REG_IsTriggerSourceSWStart(hadc->Instance) != 0UL)
 823              		.loc 1 1519 3 view .LVU263
 824              	.LVL61:
 825              	.LBB362:
 826              	.LBI362:
3748:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 827              		.loc 2 3748 26 view .LVU264
 828              	.LBB363:
3750:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 829              		.loc 2 3750 3 view .LVU265
3750:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 830              		.loc 2 3750 12 is_stmt 0 view .LVU266
 831 009e DA68     		ldr	r2, [r3, #12]
3750:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 832              		.loc 2 3750 103 view .LVU267
 833 00a0 12F4406F 		tst	r2, #3072
 834 00a4 11D1     		bne	.L43
 835              	.LVL62:
3750:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 836              		.loc 2 3750 103 view .LVU268
 837              	.LBE363:
 838              	.LBE362:
1520:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       && (hadc->Init.ContinuousConvMode == DISABLE)
 839              		.loc 1 1520 21 view .LVU269
 840 00a6 627F     		ldrb	r2, [r4, #29]	@ zero_extendqisi2
 841              		.loc 1 1520 7 view .LVU270
 842 00a8 7AB9     		cbnz	r2, .L43
1521:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****      )
1522:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
1523:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Check whether end of sequence is reached */
1524:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     if (__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_EOS))
 843              		.loc 1 1524 5 is_stmt 1 view .LVU271
 844              		.loc 1 1524 9 is_stmt 0 view .LVU272
 845 00aa 1A68     		ldr	r2, [r3]
 846              		.loc 1 1524 8 view .LVU273
 847 00ac 12F0080F 		tst	r2, #8
 848 00b0 0BD0     		beq	.L43
1525:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
1526:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Set ADC state */
1527:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       CLEAR_BIT(hadc->State, HAL_ADC_STATE_REG_BUSY);
 849              		.loc 1 1527 7 is_stmt 1 view .LVU274
ARM GAS  /tmp/ccEuGJBQ.s 			page 170


 850 00b2 E26D     		ldr	r2, [r4, #92]
 851 00b4 22F48072 		bic	r2, r2, #256
 852 00b8 E265     		str	r2, [r4, #92]
1528:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1529:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       if ((hadc->State & HAL_ADC_STATE_INJ_BUSY) == 0UL)
 853              		.loc 1 1529 7 view .LVU275
 854              		.loc 1 1529 16 is_stmt 0 view .LVU276
 855 00ba E26D     		ldr	r2, [r4, #92]
 856              		.loc 1 1529 10 view .LVU277
 857 00bc 12F4805F 		tst	r2, #4096
 858 00c0 03D1     		bne	.L43
1530:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
1531:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_READY);
 859              		.loc 1 1531 9 is_stmt 1 view .LVU278
 860 00c2 E26D     		ldr	r2, [r4, #92]
 861 00c4 42F00102 		orr	r2, r2, #1
 862 00c8 E265     		str	r2, [r4, #92]
 863              	.L43:
1532:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
1533:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
1534:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
1535:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1536:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Get relevant register CFGR in ADC instance of ADC master or slave        */
1537:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* in function of multimode state (for devices with multimode               */
1538:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* available).                                                              */
1539:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #if defined(ADC_MULTIMODE_SUPPORT)
1540:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   if ((__LL_ADC_MULTI_INSTANCE_MASTER(hadc->Instance) == hadc->Instance)
 864              		.loc 1 1540 3 view .LVU279
 865              		.loc 1 1540 8 is_stmt 0 view .LVU280
 866 00ca 134A     		ldr	r2, .L60+4
 867 00cc 9342     		cmp	r3, r2
 868 00ce 0CD0     		beq	.L58
 869 00d0 1A46     		mov	r2, r3
 870              	.L44:
 871              		.loc 1 1540 6 discriminator 4 view .LVU281
 872 00d2 9342     		cmp	r3, r2
 873 00d4 0CD0     		beq	.L45
 874 00d6 092F     		cmp	r7, #9
 875 00d8 05D8     		bhi	.L46
 876 00da 40F22121 		movw	r1, #545
 877 00de F940     		lsrs	r1, r1, r7
 878 00e0 11F0010F 		tst	r1, #1
 879 00e4 04D1     		bne	.L45
 880              	.L46:
1541:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
1542:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       || (tmp_multimode_config == LL_ADC_MULTI_DUAL_INJ_SIMULT)
1543:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       || (tmp_multimode_config == LL_ADC_MULTI_DUAL_INJ_ALTERN)
1544:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****      )
1545:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
1546:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Retrieve handle ADC CFGR register */
1547:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     tmp_cfgr = READ_REG(hadc->Instance->CFGR);
1548:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
1549:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   else
1550:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
1551:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Retrieve Master ADC CFGR register */
1552:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     tmpADC_Master = __LL_ADC_MULTI_INSTANCE_MASTER(hadc->Instance);
 881              		.loc 1 1552 5 is_stmt 1 discriminator 4 view .LVU282
ARM GAS  /tmp/ccEuGJBQ.s 			page 171


 882              	.LVL63:
1553:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     tmp_cfgr = READ_REG(tmpADC_Master->CFGR);
 883              		.loc 1 1553 5 discriminator 4 view .LVU283
 884              		.loc 1 1553 14 is_stmt 0 discriminator 4 view .LVU284
 885 00e6 D268     		ldr	r2, [r2, #12]
 886              	.LVL64:
 887              		.loc 1 1553 14 discriminator 4 view .LVU285
 888 00e8 03E0     		b	.L47
 889              	.LVL65:
 890              	.L58:
1540:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 891              		.loc 1 1540 8 view .LVU286
 892 00ea 4FF0A042 		mov	r2, #1342177280
 893 00ee F0E7     		b	.L44
 894              	.L45:
1547:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
 895              		.loc 1 1547 5 is_stmt 1 view .LVU287
1547:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
 896              		.loc 1 1547 14 is_stmt 0 view .LVU288
 897 00f0 DA68     		ldr	r2, [r3, #12]
 898              	.LVL66:
 899              	.L47:
1554:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
1555:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #else
1556:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Retrieve handle ADC CFGR register */
1557:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   tmp_cfgr = READ_REG(hadc->Instance->CFGR);
1558:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #endif
1559:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1560:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Clear polled flag */
1561:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   if (tmp_Flag_End == ADC_FLAG_EOS)
 900              		.loc 1 1561 3 is_stmt 1 view .LVU289
 901              		.loc 1 1561 6 is_stmt 0 view .LVU290
 902 00f2 082D     		cmp	r5, #8
 903 00f4 06D0     		beq	.L59
1562:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
1563:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_EOS);
1564:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
1565:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   else
1566:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
1567:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Clear end of conversion EOC flag of regular group if low power feature */
1568:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* "LowPowerAutoWait " is disabled, to not interfere with this feature    */
1569:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* until data register is read using function HAL_ADC_GetValue().         */
1570:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     if (READ_BIT(tmp_cfgr, ADC_CFGR_AUTDLY) == 0UL)
 904              		.loc 1 1570 5 is_stmt 1 view .LVU291
 905              		.loc 1 1570 8 is_stmt 0 view .LVU292
 906 00f6 12F4804F 		tst	r2, #16384
 907 00fa 08D1     		bne	.L52
1571:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
1572:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_EOC | ADC_FLAG_EOS));
 908              		.loc 1 1572 7 is_stmt 1 view .LVU293
 909 00fc 0C22     		movs	r2, #12
 910              	.LVL67:
 911              		.loc 1 1572 7 is_stmt 0 view .LVU294
 912 00fe 1A60     		str	r2, [r3]
1573:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
1574:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
1575:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
ARM GAS  /tmp/ccEuGJBQ.s 			page 172


1576:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Return function status */
1577:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   return HAL_OK;
 913              		.loc 1 1577 10 view .LVU295
 914 0100 0020     		movs	r0, #0
 915 0102 02E0     		b	.L38
 916              	.LVL68:
 917              	.L59:
1563:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
 918              		.loc 1 1563 5 is_stmt 1 view .LVU296
 919 0104 0822     		movs	r2, #8
 920              	.LVL69:
1563:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
 921              		.loc 1 1563 5 is_stmt 0 view .LVU297
 922 0106 1A60     		str	r2, [r3]
 923              		.loc 1 1577 10 view .LVU298
 924 0108 0020     		movs	r0, #0
 925              	.LVL70:
 926              	.L38:
1578:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** }
 927              		.loc 1 1578 1 view .LVU299
 928 010a BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 929              	.LVL71:
 930              	.L52:
1577:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** }
 931              		.loc 1 1577 10 view .LVU300
 932 010e 0020     		movs	r0, #0
 933 0110 FBE7     		b	.L38
 934              	.L61:
 935 0112 00BF     		.align	2
 936              	.L60:
 937 0114 00030050 		.word	1342178048
 938 0118 00010050 		.word	1342177536
 939              		.cfi_endproc
 940              	.LFE335:
 942              		.section	.text.HAL_ADC_PollForEvent,"ax",%progbits
 943              		.align	1
 944              		.global	HAL_ADC_PollForEvent
 945              		.syntax unified
 946              		.thumb
 947              		.thumb_func
 949              	HAL_ADC_PollForEvent:
 950              	.LVL72:
 951              	.LFB336:
1579:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1580:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** /**
1581:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @brief  Poll for ADC event.
1582:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @param hadc ADC handle
1583:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @param EventType the ADC event type.
1584:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *          This parameter can be one of the following values:
1585:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *            @arg @ref ADC_EOSMP_EVENT  ADC End of Sampling event
1586:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *            @arg @ref ADC_AWD1_EVENT   ADC Analog watchdog 1 event (main analog watchdog, presen
1587:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *            @arg @ref ADC_AWD2_EVENT   ADC Analog watchdog 2 event (additional analog watchdog, 
1588:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *            @arg @ref ADC_AWD3_EVENT   ADC Analog watchdog 3 event (additional analog watchdog, 
1589:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *            @arg @ref ADC_OVR_EVENT    ADC Overrun event
1590:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *            @arg @ref ADC_JQOVF_EVENT  ADC Injected context queue overflow event
1591:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @param Timeout Timeout value in millisecond.
1592:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @note   The relevant flag is cleared if found to be set, except for ADC_FLAG_OVR.
ARM GAS  /tmp/ccEuGJBQ.s 			page 173


1593:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         Indeed, the latter is reset only if hadc->Init.Overrun field is set
1594:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         to ADC_OVR_DATA_OVERWRITTEN. Otherwise, data register may be potentially overwritten
1595:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         by a new converted data as soon as OVR is cleared.
1596:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         To reset OVR flag once the preserved data is retrieved, the user can resort
1597:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         to macro __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_OVR);
1598:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @retval HAL status
1599:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   */
1600:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_PollForEvent(ADC_HandleTypeDef *hadc, uint32_t EventType, uint32_t Timeou
1601:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** {
 952              		.loc 1 1601 1 is_stmt 1 view -0
 953              		.cfi_startproc
 954              		@ args = 0, pretend = 0, frame = 0
 955              		@ frame_needed = 0, uses_anonymous_args = 0
 956              		.loc 1 1601 1 is_stmt 0 view .LVU302
 957 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 958              	.LCFI5:
 959              		.cfi_def_cfa_offset 24
 960              		.cfi_offset 4, -24
 961              		.cfi_offset 5, -20
 962              		.cfi_offset 6, -16
 963              		.cfi_offset 7, -12
 964              		.cfi_offset 8, -8
 965              		.cfi_offset 14, -4
 966 0004 0646     		mov	r6, r0
 967 0006 0D46     		mov	r5, r1
 968 0008 1746     		mov	r7, r2
1602:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t tickstart;
 969              		.loc 1 1602 3 is_stmt 1 view .LVU303
1603:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1604:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Check the parameters */
1605:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 970              		.loc 1 1605 3 view .LVU304
1606:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   assert_param(IS_ADC_EVENT_TYPE(EventType));
 971              		.loc 1 1606 3 view .LVU305
1607:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1608:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Get tick count */
1609:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   tickstart = HAL_GetTick();
 972              		.loc 1 1609 3 view .LVU306
 973              		.loc 1 1609 15 is_stmt 0 view .LVU307
 974 000a FFF7FEFF 		bl	HAL_GetTick
 975              	.LVL73:
 976              		.loc 1 1609 15 view .LVU308
 977 000e 8046     		mov	r8, r0
 978              	.LVL74:
1610:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1611:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Check selected event flag */
1612:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   while (__HAL_ADC_GET_FLAG(hadc, EventType) == 0UL)
 979              		.loc 1 1612 3 is_stmt 1 view .LVU309
 980              	.L64:
 981              		.loc 1 1612 46 view .LVU310
 982              		.loc 1 1612 10 is_stmt 0 view .LVU311
 983 0010 3468     		ldr	r4, [r6]
 984 0012 2368     		ldr	r3, [r4]
 985              		.loc 1 1612 46 view .LVU312
 986 0014 35EA0303 		bics	r3, r5, r3
 987 0018 18D0     		beq	.L77
1613:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
ARM GAS  /tmp/ccEuGJBQ.s 			page 174


1614:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Check if timeout is disabled (set to infinite wait) */
1615:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     if (Timeout != HAL_MAX_DELAY)
 988              		.loc 1 1615 5 is_stmt 1 view .LVU313
 989              		.loc 1 1615 8 is_stmt 0 view .LVU314
 990 001a B7F1FF3F 		cmp	r7, #-1
 991 001e F7D0     		beq	.L64
1616:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
1617:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0UL))
 992              		.loc 1 1617 7 is_stmt 1 view .LVU315
 993              		.loc 1 1617 13 is_stmt 0 view .LVU316
 994 0020 FFF7FEFF 		bl	HAL_GetTick
 995              	.LVL75:
 996              		.loc 1 1617 27 view .LVU317
 997 0024 A0EB0800 		sub	r0, r0, r8
 998              		.loc 1 1617 10 view .LVU318
 999 0028 B842     		cmp	r0, r7
 1000 002a 01D8     		bhi	.L65
 1001              		.loc 1 1617 51 discriminator 1 view .LVU319
 1002 002c 002F     		cmp	r7, #0
 1003 002e EFD1     		bne	.L64
 1004              	.L65:
1618:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
1619:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* New check to avoid false timeout detection in case of preemption */
1620:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         if (__HAL_ADC_GET_FLAG(hadc, EventType) == 0UL)
 1005              		.loc 1 1620 9 is_stmt 1 view .LVU320
 1006              		.loc 1 1620 13 is_stmt 0 view .LVU321
 1007 0030 3368     		ldr	r3, [r6]
 1008 0032 1B68     		ldr	r3, [r3]
 1009              		.loc 1 1620 12 view .LVU322
 1010 0034 35EA0303 		bics	r3, r5, r3
 1011 0038 EAD0     		beq	.L64
1621:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
1622:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           /* Update ADC state machine to timeout */
1623:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_TIMEOUT);
 1012              		.loc 1 1623 11 is_stmt 1 view .LVU323
 1013 003a F36D     		ldr	r3, [r6, #92]
 1014 003c 43F00403 		orr	r3, r3, #4
 1015 0040 F365     		str	r3, [r6, #92]
1624:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1625:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           /* Process unlocked */
1626:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           __HAL_UNLOCK(hadc);
 1016              		.loc 1 1626 11 view .LVU324
 1017              		.loc 1 1626 11 view .LVU325
 1018 0042 0023     		movs	r3, #0
 1019 0044 86F85830 		strb	r3, [r6, #88]
 1020              		.loc 1 1626 11 view .LVU326
1627:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1628:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           return HAL_TIMEOUT;
 1021              		.loc 1 1628 11 view .LVU327
 1022              		.loc 1 1628 18 is_stmt 0 view .LVU328
 1023 0048 0320     		movs	r0, #3
 1024 004a 29E0     		b	.L66
 1025              	.L77:
1629:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         }
1630:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
1631:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
1632:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
ARM GAS  /tmp/ccEuGJBQ.s 			page 175


1633:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1634:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   switch (EventType)
 1026              		.loc 1 1634 3 is_stmt 1 view .LVU329
 1027 004c B5F5807F 		cmp	r5, #256
 1028 0050 28D0     		beq	.L68
 1029 0052 0BD8     		bhi	.L69
 1030 0054 022D     		cmp	r5, #2
 1031 0056 1CD0     		beq	.L70
 1032 0058 802D     		cmp	r5, #128
 1033 005a 35D1     		bne	.L72
1635:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
1636:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* End Of Sampling event */
1637:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     case ADC_EOSMP_EVENT:
1638:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Set ADC state */
1639:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOSMP);
1640:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1641:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Clear the End Of Sampling flag */
1642:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_EOSMP);
1643:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1644:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       break;
1645:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1646:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Analog watchdog (level out of window) event */
1647:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Note: In case of several analog watchdog enabled, if needed to know      */
1648:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* which one triggered and on which ADCx, test ADC state of analog watchdog */
1649:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* flags HAL_ADC_STATE_AWD1/2/3 using function "HAL_ADC_GetState()".        */
1650:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* For example:                                                             */
1651:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /*  " if ((HAL_ADC_GetState(hadc1) & HAL_ADC_STATE_AWD1) != 0UL) "          */
1652:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /*  " if ((HAL_ADC_GetState(hadc1) & HAL_ADC_STATE_AWD2) != 0UL) "          */
1653:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /*  " if ((HAL_ADC_GetState(hadc1) & HAL_ADC_STATE_AWD3) != 0UL) "          */
1654:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1655:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Check analog watchdog 1 flag */
1656:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     case ADC_AWD_EVENT:
1657:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Set ADC state */
1658:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_AWD1);
 1034              		.loc 1 1658 7 view .LVU330
 1035 005c F36D     		ldr	r3, [r6, #92]
 1036 005e 43F48033 		orr	r3, r3, #65536
 1037 0062 F365     		str	r3, [r6, #92]
1659:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1660:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Clear ADC analog watchdog flag */
1661:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_AWD1);
 1038              		.loc 1 1661 7 view .LVU331
 1039 0064 8023     		movs	r3, #128
 1040 0066 2360     		str	r3, [r4]
1662:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1663:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       break;
 1041              		.loc 1 1663 7 view .LVU332
1664:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1665:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Check analog watchdog 2 flag */
1666:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     case ADC_AWD2_EVENT:
1667:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Set ADC state */
1668:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_AWD2);
1669:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1670:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Clear ADC analog watchdog flag */
1671:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_AWD2);
1672:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1673:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       break;
ARM GAS  /tmp/ccEuGJBQ.s 			page 176


1674:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1675:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Check analog watchdog 3 flag */
1676:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     case ADC_AWD3_EVENT:
1677:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Set ADC state */
1678:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_AWD3);
1679:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1680:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Clear ADC analog watchdog flag */
1681:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_AWD3);
1682:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1683:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       break;
1684:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1685:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Injected context queue overflow event */
1686:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     case ADC_JQOVF_EVENT:
1687:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Set ADC state */
1688:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_INJ_JQOVF);
1689:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1690:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Set ADC error code to Injected context queue overflow */
1691:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_JQOVF);
1692:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1693:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Clear ADC Injected context queue overflow flag */
1694:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_JQOVF);
1695:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1696:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       break;
1697:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1698:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Overrun event */
1699:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     default: /* Case ADC_OVR_EVENT */
1700:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* If overrun is set to overwrite previous data, overrun event is not     */
1701:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* considered as an error.                                                */
1702:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* (cf ref manual "Managing conversions without using the DMA and without */
1703:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* overrun ")                                                             */
1704:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       if (hadc->Init.Overrun == ADC_OVR_DATA_PRESERVED)
1705:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
1706:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* Set ADC state */
1707:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_REG_OVR);
1708:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1709:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* Set ADC error code to overrun */
1710:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_OVR);
1711:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
1712:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       else
1713:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
1714:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* Clear ADC Overrun flag only if Overrun is set to ADC_OVR_DATA_OVERWRITTEN
1715:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****            otherwise, data register is potentially overwritten by new converted data as soon
1716:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****            as OVR is cleared. */
1717:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_OVR);
1718:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
1719:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       break;
1720:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
1721:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1722:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Return function status */
1723:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   return HAL_OK;
 1042              		.loc 1 1723 10 is_stmt 0 view .LVU333
 1043 0068 0020     		movs	r0, #0
1663:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 1044              		.loc 1 1663 7 view .LVU334
 1045 006a 19E0     		b	.L66
 1046              	.L69:
1634:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
ARM GAS  /tmp/ccEuGJBQ.s 			page 177


 1047              		.loc 1 1634 3 view .LVU335
 1048 006c B5F5007F 		cmp	r5, #512
 1049 0070 21D0     		beq	.L73
 1050 0072 B5F5806F 		cmp	r5, #1024
 1051 0076 27D1     		bne	.L72
1688:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 1052              		.loc 1 1688 7 is_stmt 1 view .LVU336
 1053 0078 F36D     		ldr	r3, [r6, #92]
 1054 007a 43F48043 		orr	r3, r3, #16384
 1055 007e F365     		str	r3, [r6, #92]
1691:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 1056              		.loc 1 1691 7 view .LVU337
 1057 0080 336E     		ldr	r3, [r6, #96]
 1058 0082 43F00803 		orr	r3, r3, #8
 1059 0086 3366     		str	r3, [r6, #96]
1694:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 1060              		.loc 1 1694 7 view .LVU338
 1061 0088 4FF48063 		mov	r3, #1024
 1062 008c 2360     		str	r3, [r4]
1696:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 1063              		.loc 1 1696 7 view .LVU339
 1064              		.loc 1 1723 10 is_stmt 0 view .LVU340
 1065 008e 0020     		movs	r0, #0
1696:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 1066              		.loc 1 1696 7 view .LVU341
 1067 0090 06E0     		b	.L66
 1068              	.L70:
1639:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 1069              		.loc 1 1639 7 is_stmt 1 view .LVU342
 1070 0092 F36D     		ldr	r3, [r6, #92]
 1071 0094 43F40063 		orr	r3, r3, #2048
 1072 0098 F365     		str	r3, [r6, #92]
1642:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 1073              		.loc 1 1642 7 view .LVU343
 1074 009a 0223     		movs	r3, #2
 1075 009c 2360     		str	r3, [r4]
1644:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 1076              		.loc 1 1644 7 view .LVU344
 1077              		.loc 1 1723 10 is_stmt 0 view .LVU345
 1078 009e 0020     		movs	r0, #0
 1079              	.L66:
1724:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** }
 1080              		.loc 1 1724 1 view .LVU346
 1081 00a0 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1082              	.LVL76:
 1083              	.L68:
1668:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 1084              		.loc 1 1668 7 is_stmt 1 view .LVU347
 1085 00a4 F36D     		ldr	r3, [r6, #92]
 1086 00a6 43F40033 		orr	r3, r3, #131072
 1087 00aa F365     		str	r3, [r6, #92]
1671:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 1088              		.loc 1 1671 7 view .LVU348
 1089 00ac 4FF48073 		mov	r3, #256
 1090 00b0 2360     		str	r3, [r4]
1673:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 1091              		.loc 1 1673 7 view .LVU349
ARM GAS  /tmp/ccEuGJBQ.s 			page 178


1723:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** }
 1092              		.loc 1 1723 10 is_stmt 0 view .LVU350
 1093 00b2 0020     		movs	r0, #0
1673:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 1094              		.loc 1 1673 7 view .LVU351
 1095 00b4 F4E7     		b	.L66
 1096              	.L73:
1678:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 1097              		.loc 1 1678 7 is_stmt 1 view .LVU352
 1098 00b6 F36D     		ldr	r3, [r6, #92]
 1099 00b8 43F48023 		orr	r3, r3, #262144
 1100 00bc F365     		str	r3, [r6, #92]
1681:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 1101              		.loc 1 1681 7 view .LVU353
 1102 00be 4FF40073 		mov	r3, #512
 1103 00c2 2360     		str	r3, [r4]
1683:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 1104              		.loc 1 1683 7 view .LVU354
1723:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** }
 1105              		.loc 1 1723 10 is_stmt 0 view .LVU355
 1106 00c4 0020     		movs	r0, #0
1683:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 1107              		.loc 1 1683 7 view .LVU356
 1108 00c6 EBE7     		b	.L66
 1109              	.L72:
1704:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 1110              		.loc 1 1704 7 is_stmt 1 view .LVU357
1704:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 1111              		.loc 1 1704 21 is_stmt 0 view .LVU358
 1112 00c8 F36B     		ldr	r3, [r6, #60]
1704:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 1113              		.loc 1 1704 10 view .LVU359
 1114 00ca 4BB9     		cbnz	r3, .L75
1707:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 1115              		.loc 1 1707 9 is_stmt 1 view .LVU360
 1116 00cc F36D     		ldr	r3, [r6, #92]
 1117 00ce 43F48063 		orr	r3, r3, #1024
 1118 00d2 F365     		str	r3, [r6, #92]
1710:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
 1119              		.loc 1 1710 9 view .LVU361
 1120 00d4 336E     		ldr	r3, [r6, #96]
 1121 00d6 43F00203 		orr	r3, r3, #2
 1122 00da 3366     		str	r3, [r6, #96]
1723:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** }
 1123              		.loc 1 1723 10 is_stmt 0 view .LVU362
 1124 00dc 0020     		movs	r0, #0
 1125 00de DFE7     		b	.L66
 1126              	.L75:
1717:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
 1127              		.loc 1 1717 9 is_stmt 1 view .LVU363
 1128 00e0 1023     		movs	r3, #16
 1129 00e2 2360     		str	r3, [r4]
1723:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** }
 1130              		.loc 1 1723 10 is_stmt 0 view .LVU364
 1131 00e4 0020     		movs	r0, #0
 1132 00e6 DBE7     		b	.L66
 1133              		.cfi_endproc
ARM GAS  /tmp/ccEuGJBQ.s 			page 179


 1134              	.LFE336:
 1136              		.section	.text.HAL_ADC_GetValue,"ax",%progbits
 1137              		.align	1
 1138              		.global	HAL_ADC_GetValue
 1139              		.syntax unified
 1140              		.thumb
 1141              		.thumb_func
 1143              	HAL_ADC_GetValue:
 1144              	.LVL77:
 1145              	.LFB341:
1725:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1726:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** /**
1727:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @brief  Enable ADC, start conversion of regular group with interruption.
1728:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @note   Interruptions enabled in this function according to initialization
1729:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         setting : EOC (end of conversion), EOS (end of sequence),
1730:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         OVR overrun.
1731:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         Each of these interruptions has its dedicated callback function.
1732:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @note   Case of multimode enabled (when multimode feature is available):
1733:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         HAL_ADC_Start_IT() must be called for ADC Slave first, then for
1734:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         ADC Master.
1735:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         For ADC Slave, ADC is enabled only (conversion is not started).
1736:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         For ADC Master, ADC is enabled and multimode conversion is started.
1737:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @note   To guarantee a proper reset of all interruptions once all the needed
1738:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         conversions are obtained, HAL_ADC_Stop_IT() must be called to ensure
1739:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         a correct stop of the IT-based conversions.
1740:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @note   By default, HAL_ADC_Start_IT() does not enable the End Of Sampling
1741:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         interruption. If required (e.g. in case of oversampling with trigger
1742:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         mode), the user must:
1743:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *          1. first clear the EOSMP flag if set with macro __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_EO
1744:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *          2. then enable the EOSMP interrupt with macro __HAL_ADC_ENABLE_IT(hadc, ADC_IT_EOSMP)
1745:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *          before calling HAL_ADC_Start_IT().
1746:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @param hadc ADC handle
1747:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @retval HAL status
1748:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   */
1749:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Start_IT(ADC_HandleTypeDef *hadc)
1750:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** {
1751:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
1752:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #if defined(ADC_MULTIMODE_SUPPORT)
1753:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   const ADC_TypeDef *tmpADC_Master;
1754:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t tmp_multimode_config = LL_ADC_GetMultimode(__LL_ADC_COMMON_INSTANCE(hadc->Instance));
1755:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #endif
1756:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1757:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Check the parameters */
1758:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
1759:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1760:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Perform ADC enable and conversion start if no conversion is on going */
1761:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   if (LL_ADC_REG_IsConversionOngoing(hadc->Instance) == 0UL)
1762:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
1763:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Process locked */
1764:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     __HAL_LOCK(hadc);
1765:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1766:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Enable the ADC peripheral */
1767:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     tmp_hal_status = ADC_Enable(hadc);
1768:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1769:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Start conversion if ADC is effectively enabled */
1770:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     if (tmp_hal_status == HAL_OK)
1771:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
ARM GAS  /tmp/ccEuGJBQ.s 			page 180


1772:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Set ADC state                                                        */
1773:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* - Clear state bitfield related to regular group conversion results   */
1774:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* - Set state bitfield related to regular operation                    */
1775:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       ADC_STATE_CLR_SET(hadc->State,
1776:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                         HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR | HAL_A
1777:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                         HAL_ADC_STATE_REG_BUSY);
1778:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1779:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #if defined(ADC_MULTIMODE_SUPPORT)
1780:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Reset HAL_ADC_STATE_MULTIMODE_SLAVE bit
1781:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         - if ADC instance is master or if multimode feature is not available
1782:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         - if multimode setting is disabled (ADC instance slave in independent mode) */
1783:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       if ((__LL_ADC_MULTI_INSTANCE_MASTER(hadc->Instance) == hadc->Instance)
1784:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
1785:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****          )
1786:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
1787:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         CLEAR_BIT(hadc->State, HAL_ADC_STATE_MULTIMODE_SLAVE);
1788:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
1789:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #endif
1790:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1791:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Set ADC error code */
1792:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Check if a conversion is on going on ADC group injected */
1793:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       if ((hadc->State & HAL_ADC_STATE_INJ_BUSY) != 0UL)
1794:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
1795:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* Reset ADC error code fields related to regular conversions only */
1796:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         CLEAR_BIT(hadc->ErrorCode, (HAL_ADC_ERROR_OVR | HAL_ADC_ERROR_DMA));
1797:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
1798:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       else
1799:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
1800:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* Reset all ADC error code fields */
1801:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         ADC_CLEAR_ERRORCODE(hadc);
1802:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
1803:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1804:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Clear ADC group regular conversion flag and overrun flag               */
1805:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* (To ensure of no unknown state from potential previous ADC operations) */
1806:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_EOC | ADC_FLAG_EOS | ADC_FLAG_OVR));
1807:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1808:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Process unlocked */
1809:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Unlock before starting ADC conversions: in case of potential         */
1810:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* interruption, to let the process to ADC IRQ Handler.                 */
1811:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       __HAL_UNLOCK(hadc);
1812:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1813:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Disable all interruptions before enabling the desired ones */
1814:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       __HAL_ADC_DISABLE_IT(hadc, (ADC_IT_EOC | ADC_IT_EOS | ADC_IT_OVR));
1815:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1816:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Enable ADC end of conversion interrupt */
1817:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       switch (hadc->Init.EOCSelection)
1818:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
1819:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         case ADC_EOC_SEQ_CONV:
1820:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           __HAL_ADC_ENABLE_IT(hadc, ADC_IT_EOS);
1821:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           break;
1822:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* case ADC_EOC_SINGLE_CONV */
1823:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         default:
1824:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           __HAL_ADC_ENABLE_IT(hadc, ADC_IT_EOC);
1825:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           break;
1826:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
1827:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1828:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Enable ADC overrun interrupt */
ARM GAS  /tmp/ccEuGJBQ.s 			page 181


1829:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* If hadc->Init.Overrun is set to ADC_OVR_DATA_PRESERVED, only then is
1830:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****          ADC_IT_OVR enabled; otherwise data overwrite is considered as normal
1831:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****          behavior and no CPU time is lost for a non-processed interruption */
1832:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       if (hadc->Init.Overrun == ADC_OVR_DATA_PRESERVED)
1833:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
1834:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         __HAL_ADC_ENABLE_IT(hadc, ADC_IT_OVR);
1835:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
1836:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1837:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Enable conversion of regular group.                                  */
1838:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* If software start has been selected, conversion starts immediately.  */
1839:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* If external trigger has been selected, conversion will start at next */
1840:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* trigger event.                                                       */
1841:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Case of multimode enabled (when multimode feature is available):     */
1842:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /*  - if ADC is slave and dual regular conversions are enabled, ADC is  */
1843:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /*    enabled only (conversion is not started),                         */
1844:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /*  - if ADC is master, ADC is enabled and conversion is started.       */
1845:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #if defined(ADC_MULTIMODE_SUPPORT)
1846:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       if ((__LL_ADC_MULTI_INSTANCE_MASTER(hadc->Instance) == hadc->Instance)
1847:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
1848:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_DUAL_INJ_SIMULT)
1849:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_DUAL_INJ_ALTERN)
1850:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****          )
1851:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
1852:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* ADC instance is not a multimode slave instance with multimode regular conversions enable
1853:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         if (READ_BIT(hadc->Instance->CFGR, ADC_CFGR_JAUTO) != 0UL)
1854:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
1855:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_EOC, HAL_ADC_STATE_INJ_BUSY);
1856:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1857:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           /* Enable as well injected interruptions in case
1858:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****            HAL_ADCEx_InjectedStart_IT() has not been called beforehand. This
1859:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****            allows to start regular and injected conversions when JAUTO is
1860:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****            set with a single call to HAL_ADC_Start_IT() */
1861:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           switch (hadc->Init.EOCSelection)
1862:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           {
1863:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             case ADC_EOC_SEQ_CONV:
1864:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****               __HAL_ADC_DISABLE_IT(hadc, ADC_IT_JEOC);
1865:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****               __HAL_ADC_ENABLE_IT(hadc, ADC_IT_JEOS);
1866:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****               break;
1867:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             /* case ADC_EOC_SINGLE_CONV */
1868:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             default:
1869:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****               __HAL_ADC_DISABLE_IT(hadc, ADC_IT_JEOS);
1870:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****               __HAL_ADC_ENABLE_IT(hadc, ADC_IT_JEOC);
1871:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****               break;
1872:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           }
1873:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         }
1874:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1875:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* Start ADC group regular conversion */
1876:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         LL_ADC_REG_StartConversion(hadc->Instance);
1877:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
1878:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       else
1879:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
1880:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* ADC instance is a multimode slave instance with multimode regular conversions enabled */
1881:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_MULTIMODE_SLAVE);
1882:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* if Master ADC JAUTO bit is set, Slave injected interruptions
1883:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****            are enabled nevertheless (for same reason as above) */
1884:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         tmpADC_Master = __LL_ADC_MULTI_INSTANCE_MASTER(hadc->Instance);
1885:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         if (READ_BIT(tmpADC_Master->CFGR, ADC_CFGR_JAUTO) != 0UL)
ARM GAS  /tmp/ccEuGJBQ.s 			page 182


1886:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
1887:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           /* First, update Slave State in setting HAL_ADC_STATE_INJ_BUSY bit
1888:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****              and in resetting HAL_ADC_STATE_INJ_EOC bit */
1889:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_EOC, HAL_ADC_STATE_INJ_BUSY);
1890:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           /* Next, set Slave injected interruptions */
1891:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           switch (hadc->Init.EOCSelection)
1892:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           {
1893:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             case ADC_EOC_SEQ_CONV:
1894:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****               __HAL_ADC_DISABLE_IT(hadc, ADC_IT_JEOC);
1895:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****               __HAL_ADC_ENABLE_IT(hadc, ADC_IT_JEOS);
1896:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****               break;
1897:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             /* case ADC_EOC_SINGLE_CONV */
1898:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             default:
1899:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****               __HAL_ADC_DISABLE_IT(hadc, ADC_IT_JEOS);
1900:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****               __HAL_ADC_ENABLE_IT(hadc, ADC_IT_JEOC);
1901:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****               break;
1902:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           }
1903:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         }
1904:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
1905:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #else
1906:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* ADC instance is not a multimode slave instance with multimode regular conversions enabled 
1907:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       if (READ_BIT(hadc->Instance->CFGR, ADC_CFGR_JAUTO) != 0UL)
1908:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
1909:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_EOC, HAL_ADC_STATE_INJ_BUSY);
1910:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1911:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* Enable as well injected interruptions in case
1912:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****          HAL_ADCEx_InjectedStart_IT() has not been called beforehand. This
1913:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****          allows to start regular and injected conversions when JAUTO is
1914:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****          set with a single call to HAL_ADC_Start_IT() */
1915:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         switch (hadc->Init.EOCSelection)
1916:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
1917:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           case ADC_EOC_SEQ_CONV:
1918:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             __HAL_ADC_DISABLE_IT(hadc, ADC_IT_JEOC);
1919:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             __HAL_ADC_ENABLE_IT(hadc, ADC_IT_JEOS);
1920:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             break;
1921:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           /* case ADC_EOC_SINGLE_CONV */
1922:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           default:
1923:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             __HAL_ADC_DISABLE_IT(hadc, ADC_IT_JEOS);
1924:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             __HAL_ADC_ENABLE_IT(hadc, ADC_IT_JEOC);
1925:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             break;
1926:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         }
1927:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
1928:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1929:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Start ADC group regular conversion */
1930:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       LL_ADC_REG_StartConversion(hadc->Instance);
1931:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #endif
1932:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
1933:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     else
1934:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
1935:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Process unlocked */
1936:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       __HAL_UNLOCK(hadc);
1937:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
1938:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1939:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
1940:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   else
1941:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
1942:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     tmp_hal_status = HAL_BUSY;
ARM GAS  /tmp/ccEuGJBQ.s 			page 183


1943:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
1944:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1945:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Return function status */
1946:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   return tmp_hal_status;
1947:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** }
1948:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1949:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** /**
1950:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @brief  Stop ADC conversion of regular group (and injected group in
1951:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         case of auto_injection mode), disable interrution of
1952:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         end-of-conversion, disable ADC peripheral.
1953:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @param hadc ADC handle
1954:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @retval HAL status.
1955:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   */
1956:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Stop_IT(ADC_HandleTypeDef *hadc)
1957:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** {
1958:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
1959:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1960:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Check the parameters */
1961:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
1962:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1963:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Process locked */
1964:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   __HAL_LOCK(hadc);
1965:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1966:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* 1. Stop potential conversion on going, on ADC groups regular and injected */
1967:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   tmp_hal_status = ADC_ConversionStop(hadc, ADC_REGULAR_INJECTED_GROUP);
1968:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1969:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Disable ADC peripheral if conversions are effectively stopped */
1970:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   if (tmp_hal_status == HAL_OK)
1971:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
1972:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Disable ADC end of conversion interrupt for regular group */
1973:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Disable ADC overrun interrupt */
1974:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     __HAL_ADC_DISABLE_IT(hadc, (ADC_IT_EOC | ADC_IT_EOS | ADC_IT_OVR));
1975:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1976:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* 2. Disable the ADC peripheral */
1977:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     tmp_hal_status = ADC_Disable(hadc);
1978:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1979:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Check if ADC is effectively disabled */
1980:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     if (tmp_hal_status == HAL_OK)
1981:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
1982:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Set ADC state */
1983:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       ADC_STATE_CLR_SET(hadc->State,
1984:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                         HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
1985:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                         HAL_ADC_STATE_READY);
1986:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
1987:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
1988:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1989:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Process unlocked */
1990:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   __HAL_UNLOCK(hadc);
1991:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1992:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Return function status */
1993:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   return tmp_hal_status;
1994:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** }
1995:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
1996:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** /**
1997:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @brief  Enable ADC, start conversion of regular group and transfer result through DMA.
1998:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @note   Interruptions enabled in this function:
1999:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         overrun (if applicable), DMA half transfer, DMA transfer complete.
ARM GAS  /tmp/ccEuGJBQ.s 			page 184


2000:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         Each of these interruptions has its dedicated callback function.
2001:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @note   Case of multimode enabled (when multimode feature is available): HAL_ADC_Start_DMA()
2002:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         is designed for single-ADC mode only. For multimode, the dedicated
2003:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         HAL_ADCEx_MultiModeStart_DMA() function must be used.
2004:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @param hadc ADC handle
2005:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @param pData Destination Buffer address.
2006:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @param Length Number of data to be transferred from ADC peripheral to memory
2007:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @retval HAL status.
2008:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   */
2009:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Start_DMA(ADC_HandleTypeDef *hadc, uint32_t *pData, uint32_t Length)
2010:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** {
2011:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
2012:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #if defined(ADC_MULTIMODE_SUPPORT)
2013:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t tmp_multimode_config = LL_ADC_GetMultimode(__LL_ADC_COMMON_INSTANCE(hadc->Instance));
2014:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #endif
2015:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2016:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Check the parameters */
2017:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
2018:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2019:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Perform ADC enable and conversion start if no conversion is on going */
2020:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   if (LL_ADC_REG_IsConversionOngoing(hadc->Instance) == 0UL)
2021:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
2022:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Process locked */
2023:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     __HAL_LOCK(hadc);
2024:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2025:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #if defined(ADC_MULTIMODE_SUPPORT)
2026:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Ensure that multimode regular conversions are not enabled.   */
2027:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Otherwise, dedicated API HAL_ADCEx_MultiModeStart_DMA() must be used.  */
2028:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     if ((tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
2029:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         || (tmp_multimode_config == LL_ADC_MULTI_DUAL_INJ_SIMULT)
2030:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         || (tmp_multimode_config == LL_ADC_MULTI_DUAL_INJ_ALTERN)
2031:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****        )
2032:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #endif
2033:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
2034:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Enable the ADC peripheral */
2035:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       tmp_hal_status = ADC_Enable(hadc);
2036:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2037:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Start conversion if ADC is effectively enabled */
2038:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       if (tmp_hal_status == HAL_OK)
2039:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
2040:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* Set ADC state                                                        */
2041:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* - Clear state bitfield related to regular group conversion results   */
2042:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* - Set state bitfield related to regular operation                    */
2043:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         ADC_STATE_CLR_SET(hadc->State,
2044:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                           HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR | HAL
2045:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                           HAL_ADC_STATE_REG_BUSY);
2046:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2047:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #if defined(ADC_MULTIMODE_SUPPORT)
2048:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* Reset HAL_ADC_STATE_MULTIMODE_SLAVE bit
2049:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           - if ADC instance is master or if multimode feature is not available
2050:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           - if multimode setting is disabled (ADC instance slave in independent mode) */
2051:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         if ((__LL_ADC_MULTI_INSTANCE_MASTER(hadc->Instance) == hadc->Instance)
2052:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
2053:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****            )
2054:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
2055:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           CLEAR_BIT(hadc->State, HAL_ADC_STATE_MULTIMODE_SLAVE);
2056:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         }
ARM GAS  /tmp/ccEuGJBQ.s 			page 185


2057:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #endif
2058:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2059:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* Check if a conversion is on going on ADC group injected */
2060:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         if ((hadc->State & HAL_ADC_STATE_INJ_BUSY) != 0UL)
2061:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
2062:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           /* Reset ADC error code fields related to regular conversions only */
2063:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           CLEAR_BIT(hadc->ErrorCode, (HAL_ADC_ERROR_OVR | HAL_ADC_ERROR_DMA));
2064:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         }
2065:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         else
2066:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
2067:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           /* Reset all ADC error code fields */
2068:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           ADC_CLEAR_ERRORCODE(hadc);
2069:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         }
2070:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2071:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* Set the DMA transfer complete callback */
2072:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         hadc->DMA_Handle->XferCpltCallback = ADC_DMAConvCplt;
2073:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2074:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* Set the DMA half transfer complete callback */
2075:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         hadc->DMA_Handle->XferHalfCpltCallback = ADC_DMAHalfConvCplt;
2076:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2077:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* Set the DMA error callback */
2078:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         hadc->DMA_Handle->XferErrorCallback = ADC_DMAError;
2079:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2080:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2081:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* Manage ADC and DMA start: ADC overrun interruption, DMA start,     */
2082:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* ADC start (in case of SW start):                                   */
2083:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2084:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* Clear regular group conversion flag and overrun flag               */
2085:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* (To ensure of no unknown state from potential previous ADC         */
2086:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* operations)                                                        */
2087:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_EOC | ADC_FLAG_EOS | ADC_FLAG_OVR));
2088:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2089:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* Process unlocked */
2090:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* Unlock before starting ADC conversions: in case of potential         */
2091:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* interruption, to let the process to ADC IRQ Handler.                 */
2092:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         __HAL_UNLOCK(hadc);
2093:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2094:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* With DMA, overrun event is always considered as an error even if
2095:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****            hadc->Init.Overrun is set to ADC_OVR_DATA_OVERWRITTEN. Therefore,
2096:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****            ADC_IT_OVR is enabled. */
2097:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         __HAL_ADC_ENABLE_IT(hadc, ADC_IT_OVR);
2098:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2099:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* Enable ADC DMA mode */
2100:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         SET_BIT(hadc->Instance->CFGR, ADC_CFGR_DMAEN);
2101:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2102:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* Start the DMA channel */
2103:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         tmp_hal_status = HAL_DMA_Start_IT(hadc->DMA_Handle, (uint32_t)&hadc->Instance->DR, (uint32_
2104:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2105:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* Enable conversion of regular group.                                  */
2106:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* If software start has been selected, conversion starts immediately.  */
2107:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* If external trigger has been selected, conversion will start at next */
2108:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* trigger event.                                                       */
2109:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* Start ADC group regular conversion */
2110:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         LL_ADC_REG_StartConversion(hadc->Instance);
2111:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
2112:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       else
2113:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
ARM GAS  /tmp/ccEuGJBQ.s 			page 186


2114:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* Process unlocked */
2115:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         __HAL_UNLOCK(hadc);
2116:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
2117:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2118:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
2119:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #if defined(ADC_MULTIMODE_SUPPORT)
2120:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     else
2121:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
2122:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       tmp_hal_status = HAL_ERROR;
2123:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Process unlocked */
2124:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       __HAL_UNLOCK(hadc);
2125:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
2126:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #endif
2127:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
2128:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   else
2129:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
2130:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     tmp_hal_status = HAL_BUSY;
2131:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
2132:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2133:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Return function status */
2134:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   return tmp_hal_status;
2135:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** }
2136:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2137:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** /**
2138:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @brief  Stop ADC conversion of regular group (and injected group in
2139:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         case of auto_injection mode), disable ADC DMA transfer, disable
2140:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         ADC peripheral.
2141:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @note:  ADC peripheral disable is forcing stop of potential
2142:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         conversion on ADC group injected. If ADC group injected is under use, it
2143:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         should be preliminarily stopped using HAL_ADCEx_InjectedStop function.
2144:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @note   Case of multimode enabled (when multimode feature is available):
2145:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         HAL_ADC_Stop_DMA() function is dedicated to single-ADC mode only.
2146:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         For multimode, the dedicated HAL_ADCEx_MultiModeStop_DMA() API must be used.
2147:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @param hadc ADC handle
2148:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @retval HAL status.
2149:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   */
2150:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Stop_DMA(ADC_HandleTypeDef *hadc)
2151:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** {
2152:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
2153:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2154:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Check the parameters */
2155:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
2156:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2157:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Process locked */
2158:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   __HAL_LOCK(hadc);
2159:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2160:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* 1. Stop potential ADC group regular conversion on going */
2161:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   tmp_hal_status = ADC_ConversionStop(hadc, ADC_REGULAR_INJECTED_GROUP);
2162:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2163:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Disable ADC peripheral if conversions are effectively stopped */
2164:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   if (tmp_hal_status == HAL_OK)
2165:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
2166:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Disable ADC DMA (ADC DMA configuration of continuous requests is kept) */
2167:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     CLEAR_BIT(hadc->Instance->CFGR, ADC_CFGR_DMAEN);
2168:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2169:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Disable the DMA channel (in case of DMA in circular mode or stop       */
2170:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* while DMA transfer is on going)                                        */
ARM GAS  /tmp/ccEuGJBQ.s 			page 187


2171:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     if (hadc->DMA_Handle->State == HAL_DMA_STATE_BUSY)
2172:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
2173:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       tmp_hal_status = HAL_DMA_Abort(hadc->DMA_Handle);
2174:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2175:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Check if DMA channel effectively disabled */
2176:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       if (tmp_hal_status != HAL_OK)
2177:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
2178:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* Update ADC state machine to error */
2179:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_DMA);
2180:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
2181:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
2182:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2183:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Disable ADC overrun interrupt */
2184:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     __HAL_ADC_DISABLE_IT(hadc, ADC_IT_OVR);
2185:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2186:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* 2. Disable the ADC peripheral */
2187:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Update "tmp_hal_status" only if DMA channel disabling passed,          */
2188:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* to keep in memory a potential failing status.                          */
2189:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     if (tmp_hal_status == HAL_OK)
2190:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
2191:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       tmp_hal_status = ADC_Disable(hadc);
2192:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
2193:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     else
2194:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
2195:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       (void)ADC_Disable(hadc);
2196:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
2197:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2198:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Check if ADC is effectively disabled */
2199:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     if (tmp_hal_status == HAL_OK)
2200:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
2201:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Set ADC state */
2202:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       ADC_STATE_CLR_SET(hadc->State,
2203:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                         HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
2204:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                         HAL_ADC_STATE_READY);
2205:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
2206:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2207:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
2208:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2209:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Process unlocked */
2210:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   __HAL_UNLOCK(hadc);
2211:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2212:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Return function status */
2213:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   return tmp_hal_status;
2214:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** }
2215:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2216:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** /**
2217:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @brief  Get ADC regular group conversion result.
2218:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @note   Reading register DR automatically clears ADC flag EOC
2219:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         (ADC group regular end of unitary conversion).
2220:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @note   This function does not clear ADC flag EOS
2221:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         (ADC group regular end of sequence conversion).
2222:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         Occurrence of flag EOS rising:
2223:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *          - If sequencer is composed of 1 rank, flag EOS is equivalent
2224:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *            to flag EOC.
2225:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *          - If sequencer is composed of several ranks, during the scan
2226:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *            sequence flag EOC only is raised, at the end of the scan sequence
2227:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *            both flags EOC and EOS are raised.
ARM GAS  /tmp/ccEuGJBQ.s 			page 188


2228:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         To clear this flag, either use function:
2229:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         in programming model IT: @ref HAL_ADC_IRQHandler(), in programming
2230:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         model polling: @ref HAL_ADC_PollForConversion()
2231:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         or @ref __HAL_ADC_CLEAR_FLAG(&hadc, ADC_FLAG_EOS).
2232:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @param hadc ADC handle
2233:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @retval ADC group regular conversion data
2234:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   */
2235:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** uint32_t HAL_ADC_GetValue(ADC_HandleTypeDef *hadc)
2236:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** {
 1146              		.loc 1 2236 1 is_stmt 1 view -0
 1147              		.cfi_startproc
 1148              		@ args = 0, pretend = 0, frame = 0
 1149              		@ frame_needed = 0, uses_anonymous_args = 0
 1150              		@ link register save eliminated.
2237:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Check the parameters */
2238:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 1151              		.loc 1 2238 3 view .LVU366
2239:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2240:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Note: EOC flag is not cleared here by software because automatically     */
2241:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /*       cleared by hardware when reading register DR.                      */
2242:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2243:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Return ADC converted value */
2244:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   return hadc->Instance->DR;
 1152              		.loc 1 2244 3 view .LVU367
 1153              		.loc 1 2244 14 is_stmt 0 view .LVU368
 1154 0000 0368     		ldr	r3, [r0]
 1155              		.loc 1 2244 24 view .LVU369
 1156 0002 186C     		ldr	r0, [r3, #64]
 1157              	.LVL78:
2245:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** }
 1158              		.loc 1 2245 1 view .LVU370
 1159 0004 7047     		bx	lr
 1160              		.cfi_endproc
 1161              	.LFE341:
 1163              		.section	.text.HAL_ADC_StartSampling,"ax",%progbits
 1164              		.align	1
 1165              		.global	HAL_ADC_StartSampling
 1166              		.syntax unified
 1167              		.thumb
 1168              		.thumb_func
 1170              	HAL_ADC_StartSampling:
 1171              	.LVL79:
 1172              	.LFB342:
2246:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2247:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** /**
2248:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @brief  Start ADC conversion sampling phase of regular group
2249:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @note:  This function should only be called to start sampling when
2250:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         - @ref ADC_SAMPLING_MODE_TRIGGER_CONTROLED sampling
2251:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         mode has been selected
2252:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         - @ref ADC_SOFTWARE_START has been selected as trigger source
2253:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @param hadc ADC handle
2254:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @retval HAL status.
2255:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   */
2256:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_StartSampling(ADC_HandleTypeDef *hadc)
2257:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** {
 1173              		.loc 1 2257 1 is_stmt 1 view -0
 1174              		.cfi_startproc
ARM GAS  /tmp/ccEuGJBQ.s 			page 189


 1175              		@ args = 0, pretend = 0, frame = 0
 1176              		@ frame_needed = 0, uses_anonymous_args = 0
 1177              		@ link register save eliminated.
2258:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Check the parameters */
2259:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 1178              		.loc 1 2259 3 view .LVU372
2260:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2261:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Start sampling */
2262:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   SET_BIT(hadc->Instance->CFGR2, ADC_CFGR2_SWTRIG);
 1179              		.loc 1 2262 3 view .LVU373
 1180 0000 0268     		ldr	r2, [r0]
 1181 0002 1369     		ldr	r3, [r2, #16]
 1182 0004 43F00073 		orr	r3, r3, #33554432
 1183 0008 1361     		str	r3, [r2, #16]
2263:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2264:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Return function status */
2265:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   return HAL_OK;
 1184              		.loc 1 2265 3 view .LVU374
2266:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** }
 1185              		.loc 1 2266 1 is_stmt 0 view .LVU375
 1186 000a 0020     		movs	r0, #0
 1187              	.LVL80:
 1188              		.loc 1 2266 1 view .LVU376
 1189 000c 7047     		bx	lr
 1190              		.cfi_endproc
 1191              	.LFE342:
 1193              		.section	.text.HAL_ADC_StopSampling,"ax",%progbits
 1194              		.align	1
 1195              		.global	HAL_ADC_StopSampling
 1196              		.syntax unified
 1197              		.thumb
 1198              		.thumb_func
 1200              	HAL_ADC_StopSampling:
 1201              	.LVL81:
 1202              	.LFB343:
2267:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2268:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** /**
2269:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @brief  Stop ADC conversion sampling phase of regular group and start conversion
2270:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @note:  This function should only be called to stop sampling when
2271:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         - @ref ADC_SAMPLING_MODE_TRIGGER_CONTROLED sampling
2272:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         mode has been selected
2273:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         - @ref ADC_SOFTWARE_START has been selected as trigger source
2274:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         - after sampling has been started using @ref HAL_ADC_StartSampling.
2275:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @param hadc ADC handle
2276:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @retval HAL status.
2277:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   */
2278:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_StopSampling(ADC_HandleTypeDef *hadc)
2279:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** {
 1203              		.loc 1 2279 1 is_stmt 1 view -0
 1204              		.cfi_startproc
 1205              		@ args = 0, pretend = 0, frame = 0
 1206              		@ frame_needed = 0, uses_anonymous_args = 0
 1207              		@ link register save eliminated.
2280:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Check the parameters */
2281:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 1208              		.loc 1 2281 3 view .LVU378
2282:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
ARM GAS  /tmp/ccEuGJBQ.s 			page 190


2283:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Start sampling */
2284:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->CFGR2, ADC_CFGR2_SWTRIG);
 1209              		.loc 1 2284 3 view .LVU379
 1210 0000 0268     		ldr	r2, [r0]
 1211 0002 1369     		ldr	r3, [r2, #16]
 1212 0004 23F00073 		bic	r3, r3, #33554432
 1213 0008 1361     		str	r3, [r2, #16]
2285:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2286:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Return function status */
2287:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   return HAL_OK;
 1214              		.loc 1 2287 3 view .LVU380
2288:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** }
 1215              		.loc 1 2288 1 is_stmt 0 view .LVU381
 1216 000a 0020     		movs	r0, #0
 1217              	.LVL82:
 1218              		.loc 1 2288 1 view .LVU382
 1219 000c 7047     		bx	lr
 1220              		.cfi_endproc
 1221              	.LFE343:
 1223              		.section	.text.HAL_ADC_ConvCpltCallback,"ax",%progbits
 1224              		.align	1
 1225              		.weak	HAL_ADC_ConvCpltCallback
 1226              		.syntax unified
 1227              		.thumb
 1228              		.thumb_func
 1230              	HAL_ADC_ConvCpltCallback:
 1231              	.LVL83:
 1232              	.LFB345:
2289:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2290:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** /**
2291:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @brief  Handle ADC interrupt request.
2292:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @param hadc ADC handle
2293:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @retval None
2294:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   */
2295:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** void HAL_ADC_IRQHandler(ADC_HandleTypeDef *hadc)
2296:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** {
2297:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t overrun_error = 0UL; /* flag set if overrun occurrence has to be considered as an error 
2298:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t tmp_isr = hadc->Instance->ISR;
2299:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t tmp_ier = hadc->Instance->IER;
2300:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t tmp_adc_inj_is_trigger_source_sw_start;
2301:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t tmp_adc_reg_is_trigger_source_sw_start;
2302:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t tmp_cfgr;
2303:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #if defined(ADC_MULTIMODE_SUPPORT)
2304:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   const ADC_TypeDef *tmpADC_Master;
2305:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t tmp_multimode_config = LL_ADC_GetMultimode(__LL_ADC_COMMON_INSTANCE(hadc->Instance));
2306:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #endif
2307:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2308:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Check the parameters */
2309:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
2310:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   assert_param(IS_ADC_EOC_SELECTION(hadc->Init.EOCSelection));
2311:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2312:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* ========== Check End of Sampling flag for ADC group regular ========== */
2313:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   if (((tmp_isr & ADC_FLAG_EOSMP) == ADC_FLAG_EOSMP) && ((tmp_ier & ADC_IT_EOSMP) == ADC_IT_EOSMP))
2314:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
2315:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Update state machine on end of sampling status if not in error state */
2316:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     if ((hadc->State & HAL_ADC_STATE_ERROR_INTERNAL) == 0UL)
2317:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
ARM GAS  /tmp/ccEuGJBQ.s 			page 191


2318:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Set ADC state */
2319:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOSMP);
2320:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
2321:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2322:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* End Of Sampling callback */
2323:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
2324:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     hadc->EndOfSamplingCallback(hadc);
2325:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #else
2326:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     HAL_ADCEx_EndOfSamplingCallback(hadc);
2327:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
2328:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2329:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Clear regular group conversion flag */
2330:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_EOSMP);
2331:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
2332:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2333:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* ====== Check ADC group regular end of unitary conversion sequence conversions ===== */
2334:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   if ((((tmp_isr & ADC_FLAG_EOC) == ADC_FLAG_EOC) && ((tmp_ier & ADC_IT_EOC) == ADC_IT_EOC)) ||
2335:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       (((tmp_isr & ADC_FLAG_EOS) == ADC_FLAG_EOS) && ((tmp_ier & ADC_IT_EOS) == ADC_IT_EOS)))
2336:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
2337:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Update state machine on conversion status if not in error state */
2338:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     if ((hadc->State & HAL_ADC_STATE_ERROR_INTERNAL) == 0UL)
2339:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
2340:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Set ADC state */
2341:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOC);
2342:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
2343:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2344:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Determine whether any further conversion upcoming on group regular     */
2345:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* by external trigger, continuous mode or scan sequence on going         */
2346:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* to disable interruption.                                               */
2347:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     if (LL_ADC_REG_IsTriggerSourceSWStart(hadc->Instance) != 0UL)
2348:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
2349:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Get relevant register CFGR in ADC instance of ADC master or slave    */
2350:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* in function of multimode state (for devices with multimode           */
2351:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* available).                                                          */
2352:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #if defined(ADC_MULTIMODE_SUPPORT)
2353:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       if ((__LL_ADC_MULTI_INSTANCE_MASTER(hadc->Instance) == hadc->Instance)
2354:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
2355:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_DUAL_INJ_SIMULT)
2356:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_DUAL_INJ_ALTERN)
2357:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****          )
2358:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
2359:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* check CONT bit directly in handle ADC CFGR register */
2360:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         tmp_cfgr = READ_REG(hadc->Instance->CFGR);
2361:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
2362:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       else
2363:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
2364:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* else need to check Master ADC CONT bit */
2365:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         tmpADC_Master = __LL_ADC_MULTI_INSTANCE_MASTER(hadc->Instance);
2366:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         tmp_cfgr = READ_REG(tmpADC_Master->CFGR);
2367:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
2368:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #else
2369:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       tmp_cfgr = READ_REG(hadc->Instance->CFGR);
2370:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #endif
2371:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2372:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Carry on if continuous mode is disabled */
2373:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       if (READ_BIT(tmp_cfgr, ADC_CFGR_CONT) != ADC_CFGR_CONT)
2374:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
ARM GAS  /tmp/ccEuGJBQ.s 			page 192


2375:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* If End of Sequence is reached, disable interrupts */
2376:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         if (__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_EOS))
2377:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
2378:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           /* Allowed to modify bits ADC_IT_EOC/ADC_IT_EOS only if bit         */
2379:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           /* ADSTART==0 (no conversion on going)                              */
2380:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           if (LL_ADC_REG_IsConversionOngoing(hadc->Instance) == 0UL)
2381:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           {
2382:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             /* Disable ADC end of sequence conversion interrupt */
2383:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             /* Note: Overrun interrupt was enabled with EOC interrupt in      */
2384:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             /* HAL_Start_IT(), but is not disabled here because can be used   */
2385:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             /* by overrun IRQ process below.                                  */
2386:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             __HAL_ADC_DISABLE_IT(hadc, ADC_IT_EOC | ADC_IT_EOS);
2387:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2388:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             /* Set ADC state */
2389:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             CLEAR_BIT(hadc->State, HAL_ADC_STATE_REG_BUSY);
2390:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2391:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             if ((hadc->State & HAL_ADC_STATE_INJ_BUSY) == 0UL)
2392:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             {
2393:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****               SET_BIT(hadc->State, HAL_ADC_STATE_READY);
2394:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             }
2395:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           }
2396:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           else
2397:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           {
2398:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             /* Change ADC state to error state */
2399:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
2400:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2401:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             /* Set ADC error code to ADC peripheral internal error */
2402:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
2403:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           }
2404:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         }
2405:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
2406:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
2407:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2408:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Conversion complete callback */
2409:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Note: Into callback function "HAL_ADC_ConvCpltCallback()",             */
2410:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /*       to determine if conversion has been triggered from EOC or EOS,   */
2411:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /*       possibility to use:                                              */
2412:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /*        " if ( __HAL_ADC_GET_FLAG(&hadc, ADC_FLAG_EOS)) "               */
2413:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
2414:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     hadc->ConvCpltCallback(hadc);
2415:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #else
2416:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     HAL_ADC_ConvCpltCallback(hadc);
2417:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
2418:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2419:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Clear regular group conversion flag */
2420:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Note: in case of overrun set to ADC_OVR_DATA_PRESERVED, end of         */
2421:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /*       conversion flags clear induces the release of the preserved data.*/
2422:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /*       Therefore, if the preserved data value is needed, it must be     */
2423:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /*       read preliminarily into HAL_ADC_ConvCpltCallback().              */
2424:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_EOC | ADC_FLAG_EOS));
2425:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
2426:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2427:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* ====== Check ADC group injected end of unitary conversion sequence conversions ===== */
2428:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   if ((((tmp_isr & ADC_FLAG_JEOC) == ADC_FLAG_JEOC) && ((tmp_ier & ADC_IT_JEOC) == ADC_IT_JEOC)) ||
2429:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       (((tmp_isr & ADC_FLAG_JEOS) == ADC_FLAG_JEOS) && ((tmp_ier & ADC_IT_JEOS) == ADC_IT_JEOS)))
2430:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
2431:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Update state machine on conversion status if not in error state */
ARM GAS  /tmp/ccEuGJBQ.s 			page 193


2432:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     if ((hadc->State & HAL_ADC_STATE_ERROR_INTERNAL) == 0UL)
2433:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
2434:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Set ADC state */
2435:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_INJ_EOC);
2436:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
2437:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2438:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Retrieve ADC configuration */
2439:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     tmp_adc_inj_is_trigger_source_sw_start = LL_ADC_INJ_IsTriggerSourceSWStart(hadc->Instance);
2440:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     tmp_adc_reg_is_trigger_source_sw_start = LL_ADC_REG_IsTriggerSourceSWStart(hadc->Instance);
2441:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Get relevant register CFGR in ADC instance of ADC master or slave  */
2442:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* in function of multimode state (for devices with multimode         */
2443:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* available).                                                        */
2444:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #if defined(ADC_MULTIMODE_SUPPORT)
2445:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     if ((__LL_ADC_MULTI_INSTANCE_MASTER(hadc->Instance) == hadc->Instance)
2446:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
2447:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         || (tmp_multimode_config == LL_ADC_MULTI_DUAL_REG_SIMULT)
2448:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         || (tmp_multimode_config == LL_ADC_MULTI_DUAL_REG_INTERL)
2449:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****        )
2450:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
2451:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       tmp_cfgr = READ_REG(hadc->Instance->CFGR);
2452:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
2453:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     else
2454:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
2455:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       tmpADC_Master = __LL_ADC_MULTI_INSTANCE_MASTER(hadc->Instance);
2456:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       tmp_cfgr = READ_REG(tmpADC_Master->CFGR);
2457:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
2458:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #else
2459:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     tmp_cfgr = READ_REG(hadc->Instance->CFGR);
2460:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #endif
2461:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2462:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Disable interruption if no further conversion upcoming by injected     */
2463:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* external trigger or by automatic injected conversion with regular      */
2464:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* group having no further conversion upcoming (same conditions as        */
2465:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* regular group interruption disabling above),                           */
2466:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* and if injected scan sequence is completed.                            */
2467:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     if (tmp_adc_inj_is_trigger_source_sw_start != 0UL)
2468:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
2469:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       if ((READ_BIT(tmp_cfgr, ADC_CFGR_JAUTO) == 0UL) ||
2470:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           ((tmp_adc_reg_is_trigger_source_sw_start != 0UL) &&
2471:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****            (READ_BIT(tmp_cfgr, ADC_CFGR_CONT) == 0UL)))
2472:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
2473:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* If End of Sequence is reached, disable interrupts */
2474:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         if (__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_JEOS))
2475:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
2476:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           /* Particular case if injected contexts queue is enabled:             */
2477:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           /* when the last context has been fully processed, JSQR is reset      */
2478:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           /* by the hardware. Even if no injected conversion is planned to come */
2479:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           /* (queue empty, triggers are ignored), it can start again            */
2480:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           /* immediately after setting a new context (JADSTART is still set).   */
2481:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           /* Therefore, state of HAL ADC injected group is kept to busy.        */
2482:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           if (READ_BIT(tmp_cfgr, ADC_CFGR_JQM) == 0UL)
2483:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           {
2484:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             /* Allowed to modify bits ADC_IT_JEOC/ADC_IT_JEOS only if bit       */
2485:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             /* JADSTART==0 (no conversion on going)                             */
2486:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             if (LL_ADC_INJ_IsConversionOngoing(hadc->Instance) == 0UL)
2487:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             {
2488:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****               /* Disable ADC end of sequence conversion interrupt  */
ARM GAS  /tmp/ccEuGJBQ.s 			page 194


2489:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****               __HAL_ADC_DISABLE_IT(hadc, ADC_IT_JEOC | ADC_IT_JEOS);
2490:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2491:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****               /* Set ADC state */
2492:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****               CLEAR_BIT(hadc->State, HAL_ADC_STATE_INJ_BUSY);
2493:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2494:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****               if ((hadc->State & HAL_ADC_STATE_REG_BUSY) == 0UL)
2495:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****               {
2496:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                 SET_BIT(hadc->State, HAL_ADC_STATE_READY);
2497:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****               }
2498:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             }
2499:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             else
2500:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             {
2501:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****               /* Update ADC state machine to error */
2502:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****               SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
2503:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2504:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****               /* Set ADC error code to ADC peripheral internal error */
2505:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****               SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
2506:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             }
2507:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           }
2508:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         }
2509:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
2510:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
2511:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2512:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Injected Conversion complete callback */
2513:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Note:  HAL_ADCEx_InjectedConvCpltCallback can resort to
2514:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****               if (__HAL_ADC_GET_FLAG(&hadc, ADC_FLAG_JEOS)) or
2515:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****               if (__HAL_ADC_GET_FLAG(&hadc, ADC_FLAG_JEOC)) to determine whether
2516:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****               interruption has been triggered by end of conversion or end of
2517:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****               sequence.    */
2518:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
2519:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     hadc->InjectedConvCpltCallback(hadc);
2520:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #else
2521:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     HAL_ADCEx_InjectedConvCpltCallback(hadc);
2522:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
2523:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2524:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Clear injected group conversion flag */
2525:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_JEOC | ADC_FLAG_JEOS);
2526:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
2527:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2528:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* ========== Check Analog watchdog 1 flag ========== */
2529:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   if (((tmp_isr & ADC_FLAG_AWD1) == ADC_FLAG_AWD1) && ((tmp_ier & ADC_IT_AWD1) == ADC_IT_AWD1))
2530:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
2531:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Set ADC state */
2532:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_AWD1);
2533:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2534:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Level out of window 1 callback */
2535:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
2536:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     hadc->LevelOutOfWindowCallback(hadc);
2537:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #else
2538:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     HAL_ADC_LevelOutOfWindowCallback(hadc);
2539:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
2540:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2541:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Clear ADC analog watchdog flag */
2542:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_AWD1);
2543:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
2544:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2545:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* ========== Check analog watchdog 2 flag ========== */
ARM GAS  /tmp/ccEuGJBQ.s 			page 195


2546:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   if (((tmp_isr & ADC_FLAG_AWD2) == ADC_FLAG_AWD2) && ((tmp_ier & ADC_IT_AWD2) == ADC_IT_AWD2))
2547:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
2548:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Set ADC state */
2549:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_AWD2);
2550:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2551:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Level out of window 2 callback */
2552:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
2553:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     hadc->LevelOutOfWindow2Callback(hadc);
2554:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #else
2555:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     HAL_ADCEx_LevelOutOfWindow2Callback(hadc);
2556:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
2557:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2558:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Clear ADC analog watchdog flag */
2559:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_AWD2);
2560:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
2561:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2562:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* ========== Check analog watchdog 3 flag ========== */
2563:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   if (((tmp_isr & ADC_FLAG_AWD3) == ADC_FLAG_AWD3) && ((tmp_ier & ADC_IT_AWD3) == ADC_IT_AWD3))
2564:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
2565:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Set ADC state */
2566:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_AWD3);
2567:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2568:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Level out of window 3 callback */
2569:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
2570:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     hadc->LevelOutOfWindow3Callback(hadc);
2571:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #else
2572:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     HAL_ADCEx_LevelOutOfWindow3Callback(hadc);
2573:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
2574:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2575:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Clear ADC analog watchdog flag */
2576:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_AWD3);
2577:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
2578:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2579:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* ========== Check Overrun flag ========== */
2580:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   if (((tmp_isr & ADC_FLAG_OVR) == ADC_FLAG_OVR) && ((tmp_ier & ADC_IT_OVR) == ADC_IT_OVR))
2581:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
2582:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* If overrun is set to overwrite previous data (default setting),        */
2583:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* overrun event is not considered as an error.                           */
2584:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* (cf ref manual "Managing conversions without using the DMA and without */
2585:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* overrun ")                                                             */
2586:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Exception for usage with DMA overrun event always considered as an     */
2587:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* error.                                                                 */
2588:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     if (hadc->Init.Overrun == ADC_OVR_DATA_PRESERVED)
2589:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
2590:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       overrun_error = 1UL;
2591:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
2592:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     else
2593:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
2594:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Check DMA configuration */
2595:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #if defined(ADC_MULTIMODE_SUPPORT)
2596:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       if (tmp_multimode_config != LL_ADC_MULTI_INDEPENDENT)
2597:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
2598:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* Multimode (when feature is available) is enabled,
2599:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****            Common Control Register MDMA bits must be checked. */
2600:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         if (LL_ADC_GetMultiDMATransfer(__LL_ADC_COMMON_INSTANCE(hadc->Instance)) != LL_ADC_MULTI_RE
2601:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
2602:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           overrun_error = 1UL;
ARM GAS  /tmp/ccEuGJBQ.s 			page 196


2603:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         }
2604:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
2605:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       else
2606:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #endif
2607:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
2608:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* Multimode not set or feature not available or ADC independent */
2609:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         if ((hadc->Instance->CFGR & ADC_CFGR_DMAEN) != 0UL)
2610:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
2611:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           overrun_error = 1UL;
2612:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         }
2613:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
2614:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
2615:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2616:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     if (overrun_error == 1UL)
2617:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
2618:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Change ADC state to error state */
2619:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_REG_OVR);
2620:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2621:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Set ADC error code to overrun */
2622:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_OVR);
2623:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2624:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Error callback */
2625:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Note: In case of overrun, ADC conversion data is preserved until     */
2626:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /*       flag OVR is reset.                                             */
2627:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /*       Therefore, old ADC conversion data can be retrieved in         */
2628:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /*       function "HAL_ADC_ErrorCallback()".                            */
2629:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
2630:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       hadc->ErrorCallback(hadc);
2631:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #else
2632:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       HAL_ADC_ErrorCallback(hadc);
2633:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
2634:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
2635:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2636:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Clear ADC overrun flag */
2637:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_OVR);
2638:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
2639:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2640:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* ========== Check Injected context queue overflow flag ========== */
2641:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   if (((tmp_isr & ADC_FLAG_JQOVF) == ADC_FLAG_JQOVF) && ((tmp_ier & ADC_IT_JQOVF) == ADC_IT_JQOVF))
2642:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
2643:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Change ADC state to overrun state */
2644:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_INJ_JQOVF);
2645:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2646:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Set ADC error code to Injected context queue overflow */
2647:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_JQOVF);
2648:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2649:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Clear the Injected context queue overflow flag */
2650:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_JQOVF);
2651:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2652:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Injected context queue overflow callback */
2653:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
2654:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     hadc->InjectedQueueOverflowCallback(hadc);
2655:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #else
2656:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     HAL_ADCEx_InjectedQueueOverflowCallback(hadc);
2657:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
2658:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
2659:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
ARM GAS  /tmp/ccEuGJBQ.s 			page 197


2660:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** }
2661:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2662:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** /**
2663:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @brief  Conversion complete callback in non-blocking mode.
2664:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @param hadc ADC handle
2665:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @retval None
2666:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   */
2667:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** __weak void HAL_ADC_ConvCpltCallback(ADC_HandleTypeDef *hadc)
2668:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** {
 1233              		.loc 1 2668 1 is_stmt 1 view -0
 1234              		.cfi_startproc
 1235              		@ args = 0, pretend = 0, frame = 0
 1236              		@ frame_needed = 0, uses_anonymous_args = 0
 1237              		@ link register save eliminated.
2669:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
2670:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   UNUSED(hadc);
 1238              		.loc 1 2670 3 view .LVU384
2671:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2672:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* NOTE : This function should not be modified. When the callback is needed,
2673:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             function HAL_ADC_ConvCpltCallback must be implemented in the user file.
2674:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****    */
2675:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** }
 1239              		.loc 1 2675 1 is_stmt 0 view .LVU385
 1240 0000 7047     		bx	lr
 1241              		.cfi_endproc
 1242              	.LFE345:
 1244              		.section	.text.HAL_ADC_ConvHalfCpltCallback,"ax",%progbits
 1245              		.align	1
 1246              		.weak	HAL_ADC_ConvHalfCpltCallback
 1247              		.syntax unified
 1248              		.thumb
 1249              		.thumb_func
 1251              	HAL_ADC_ConvHalfCpltCallback:
 1252              	.LVL84:
 1253              	.LFB346:
2676:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2677:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** /**
2678:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @brief  Conversion DMA half-transfer callback in non-blocking mode.
2679:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @param hadc ADC handle
2680:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @retval None
2681:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   */
2682:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** __weak void HAL_ADC_ConvHalfCpltCallback(ADC_HandleTypeDef *hadc)
2683:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** {
 1254              		.loc 1 2683 1 is_stmt 1 view -0
 1255              		.cfi_startproc
 1256              		@ args = 0, pretend = 0, frame = 0
 1257              		@ frame_needed = 0, uses_anonymous_args = 0
 1258              		@ link register save eliminated.
2684:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
2685:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   UNUSED(hadc);
 1259              		.loc 1 2685 3 view .LVU387
2686:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2687:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* NOTE : This function should not be modified. When the callback is needed,
2688:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             function HAL_ADC_ConvHalfCpltCallback must be implemented in the user file.
2689:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   */
2690:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** }
 1260              		.loc 1 2690 1 is_stmt 0 view .LVU388
ARM GAS  /tmp/ccEuGJBQ.s 			page 198


 1261 0000 7047     		bx	lr
 1262              		.cfi_endproc
 1263              	.LFE346:
 1265              		.section	.text.ADC_DMAHalfConvCplt,"ax",%progbits
 1266              		.align	1
 1267              		.global	ADC_DMAHalfConvCplt
 1268              		.syntax unified
 1269              		.thumb
 1270              		.thumb_func
 1272              	ADC_DMAHalfConvCplt:
 1273              	.LVL85:
 1274              	.LFB357:
2691:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2692:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** /**
2693:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @brief  Analog watchdog 1 callback in non-blocking mode.
2694:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @param hadc ADC handle
2695:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @retval None
2696:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   */
2697:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** __weak void HAL_ADC_LevelOutOfWindowCallback(ADC_HandleTypeDef *hadc)
2698:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** {
2699:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
2700:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   UNUSED(hadc);
2701:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2702:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* NOTE : This function should not be modified. When the callback is needed,
2703:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             function HAL_ADC_LevelOutOfWindowCallback must be implemented in the user file.
2704:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   */
2705:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** }
2706:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2707:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** /**
2708:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @brief  ADC error callback in non-blocking mode
2709:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         (ADC conversion with interruption or transfer by DMA).
2710:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @note   In case of error due to overrun when using ADC with DMA transfer
2711:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         (HAL ADC handle parameter "ErrorCode" to state "HAL_ADC_ERROR_OVR"):
2712:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         - Reinitialize the DMA using function "HAL_ADC_Stop_DMA()".
2713:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         - If needed, restart a new ADC conversion using function
2714:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *           "HAL_ADC_Start_DMA()"
2715:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *           (this function is also clearing overrun flag)
2716:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @param hadc ADC handle
2717:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @retval None
2718:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   */
2719:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** __weak void HAL_ADC_ErrorCallback(ADC_HandleTypeDef *hadc)
2720:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** {
2721:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
2722:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   UNUSED(hadc);
2723:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2724:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* NOTE : This function should not be modified. When the callback is needed,
2725:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             function HAL_ADC_ErrorCallback must be implemented in the user file.
2726:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   */
2727:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** }
2728:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2729:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** /**
2730:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @}
2731:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   */
2732:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2733:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** /** @defgroup ADC_Exported_Functions_Group3 Peripheral Control functions
2734:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @brief    Peripheral Control functions
2735:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *
ARM GAS  /tmp/ccEuGJBQ.s 			page 199


2736:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** @verbatim
2737:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****  ===============================================================================
2738:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****              ##### Peripheral Control functions #####
2739:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****  ===============================================================================
2740:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     [..]  This section provides functions allowing to:
2741:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       (+) Configure channels on regular group
2742:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       (+) Configure the analog watchdog
2743:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2744:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** @endverbatim
2745:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @{
2746:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   */
2747:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2748:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** /**
2749:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @brief  Configure a channel to be assigned to ADC group regular.
2750:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @note   In case of usage of internal measurement channels:
2751:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         Vbat/VrefInt/TempSensor.
2752:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         These internal paths can be disabled using function
2753:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         HAL_ADC_DeInit().
2754:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @note   Possibility to update parameters on the fly:
2755:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         This function initializes channel into ADC group regular,
2756:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         following calls to this function can be used to reconfigure
2757:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         some parameters of structure "ADC_ChannelConfTypeDef" on the fly,
2758:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         without resetting the ADC.
2759:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         The setting of these parameters is conditioned to ADC state:
2760:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         Refer to comments of structure "ADC_ChannelConfTypeDef".
2761:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @param hadc ADC handle
2762:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @param sConfig Structure of ADC channel assigned to ADC group regular.
2763:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @retval HAL status
2764:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   */
2765:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_ConfigChannel(ADC_HandleTypeDef *hadc, ADC_ChannelConfTypeDef *sConfig)
2766:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** {
2767:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
2768:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t tmpOffsetShifted;
2769:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t tmp_config_internal_channel;
2770:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   __IO uint32_t wait_loop_index = 0UL;
2771:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t tmp_adc_is_conversion_on_going_regular;
2772:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t tmp_adc_is_conversion_on_going_injected;
2773:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2774:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Check the parameters */
2775:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
2776:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   assert_param(IS_ADC_REGULAR_RANK(sConfig->Rank));
2777:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   assert_param(IS_ADC_SAMPLE_TIME(sConfig->SamplingTime));
2778:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   assert_param(IS_ADC_SINGLE_DIFFERENTIAL(sConfig->SingleDiff));
2779:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   assert_param(IS_ADC_OFFSET_NUMBER(sConfig->OffsetNumber));
2780:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   assert_param(IS_ADC_RANGE(ADC_GET_RESOLUTION(hadc), sConfig->Offset));
2781:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2782:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* if ROVSE is set, the value of the OFFSETy_EN bit in ADCx_OFRy register is
2783:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****      ignored (considered as reset) */
2784:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   assert_param(!((sConfig->OffsetNumber != ADC_OFFSET_NONE) && (hadc->Init.OversamplingMode == ENAB
2785:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2786:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Verification of channel number */
2787:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   if (sConfig->SingleDiff != ADC_DIFFERENTIAL_ENDED)
2788:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
2789:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     assert_param(IS_ADC_CHANNEL(hadc, sConfig->Channel));
2790:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
2791:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   else
2792:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
ARM GAS  /tmp/ccEuGJBQ.s 			page 200


2793:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     assert_param(IS_ADC_DIFF_CHANNEL(hadc, sConfig->Channel));
2794:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
2795:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2796:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Process locked */
2797:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   __HAL_LOCK(hadc);
2798:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2799:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Parameters update conditioned to ADC state:                              */
2800:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Parameters that can be updated when ADC is disabled or enabled without   */
2801:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* conversion on going on regular group:                                    */
2802:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /*  - Channel number                                                        */
2803:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /*  - Channel rank                                                          */
2804:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   if (LL_ADC_REG_IsConversionOngoing(hadc->Instance) == 0UL)
2805:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
2806:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Set ADC group regular sequence: channel on the selected scan sequence rank */
2807:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     LL_ADC_REG_SetSequencerRanks(hadc->Instance, sConfig->Rank, sConfig->Channel);
2808:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2809:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Parameters update conditioned to ADC state:                              */
2810:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Parameters that can be updated when ADC is disabled or enabled without   */
2811:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* conversion on going on regular group:                                    */
2812:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /*  - Channel sampling time                                                 */
2813:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /*  - Channel offset                                                        */
2814:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     tmp_adc_is_conversion_on_going_regular = LL_ADC_REG_IsConversionOngoing(hadc->Instance);
2815:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     tmp_adc_is_conversion_on_going_injected = LL_ADC_INJ_IsConversionOngoing(hadc->Instance);
2816:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     if ((tmp_adc_is_conversion_on_going_regular == 0UL)
2817:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         && (tmp_adc_is_conversion_on_going_injected == 0UL)
2818:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****        )
2819:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
2820:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Manage specific case of sampling time 3.5 cycles replacing 2.5 cyles */
2821:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       if (sConfig->SamplingTime == ADC_SAMPLETIME_3CYCLES_5)
2822:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
2823:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* Set sampling time of the selected ADC channel */
2824:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         LL_ADC_SetChannelSamplingTime(hadc->Instance, sConfig->Channel, LL_ADC_SAMPLINGTIME_2CYCLES
2825:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2826:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* Set ADC sampling time common configuration */
2827:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         LL_ADC_SetSamplingTimeCommonConfig(hadc->Instance, LL_ADC_SAMPLINGTIME_COMMON_3C5_REPL_2C5)
2828:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
2829:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       else
2830:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
2831:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* Set sampling time of the selected ADC channel */
2832:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         LL_ADC_SetChannelSamplingTime(hadc->Instance, sConfig->Channel, sConfig->SamplingTime);
2833:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2834:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* Set ADC sampling time common configuration */
2835:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         LL_ADC_SetSamplingTimeCommonConfig(hadc->Instance, LL_ADC_SAMPLINGTIME_COMMON_DEFAULT);
2836:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
2837:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2838:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Configure the offset: offset enable/disable, channel, offset value */
2839:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2840:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Shift the offset with respect to the selected ADC resolution. */
2841:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Offset has to be left-aligned on bit 11, the LSB (right bits) are set to 0 */
2842:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       tmpOffsetShifted = ADC_OFFSET_SHIFT_RESOLUTION(hadc, (uint32_t)sConfig->Offset);
2843:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2844:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       if (sConfig->OffsetNumber != ADC_OFFSET_NONE)
2845:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
2846:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* Set ADC selected offset number */
2847:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         LL_ADC_SetOffset(hadc->Instance, sConfig->OffsetNumber, sConfig->Channel, tmpOffsetShifted)
2848:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2849:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         assert_param(IS_ADC_OFFSET_SIGN(sConfig->OffsetSign));
ARM GAS  /tmp/ccEuGJBQ.s 			page 201


2850:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         assert_param(IS_FUNCTIONAL_STATE(sConfig->OffsetSaturation));
2851:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* Set ADC selected offset sign & saturation */
2852:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         LL_ADC_SetOffsetSign(hadc->Instance, sConfig->OffsetNumber, sConfig->OffsetSign);
2853:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         LL_ADC_SetOffsetSaturation(hadc->Instance, sConfig->OffsetNumber, (sConfig->OffsetSaturatio
2854:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
2855:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       else
2856:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
2857:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* Scan each offset register to check if the selected channel is targeted. */
2858:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* If this is the case, the corresponding offset number is disabled.       */
2859:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         if (__LL_ADC_CHANNEL_TO_DECIMAL_NB(LL_ADC_GetOffsetChannel(hadc->Instance, LL_ADC_OFFSET_1)
2860:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             == __LL_ADC_CHANNEL_TO_DECIMAL_NB(sConfig->Channel))
2861:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
2862:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           LL_ADC_SetOffsetState(hadc->Instance, LL_ADC_OFFSET_1, LL_ADC_OFFSET_DISABLE);
2863:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         }
2864:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         if (__LL_ADC_CHANNEL_TO_DECIMAL_NB(LL_ADC_GetOffsetChannel(hadc->Instance, LL_ADC_OFFSET_2)
2865:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             == __LL_ADC_CHANNEL_TO_DECIMAL_NB(sConfig->Channel))
2866:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
2867:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           LL_ADC_SetOffsetState(hadc->Instance, LL_ADC_OFFSET_2, LL_ADC_OFFSET_DISABLE);
2868:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         }
2869:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         if (__LL_ADC_CHANNEL_TO_DECIMAL_NB(LL_ADC_GetOffsetChannel(hadc->Instance, LL_ADC_OFFSET_3)
2870:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             == __LL_ADC_CHANNEL_TO_DECIMAL_NB(sConfig->Channel))
2871:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
2872:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           LL_ADC_SetOffsetState(hadc->Instance, LL_ADC_OFFSET_3, LL_ADC_OFFSET_DISABLE);
2873:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         }
2874:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         if (__LL_ADC_CHANNEL_TO_DECIMAL_NB(LL_ADC_GetOffsetChannel(hadc->Instance, LL_ADC_OFFSET_4)
2875:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             == __LL_ADC_CHANNEL_TO_DECIMAL_NB(sConfig->Channel))
2876:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
2877:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           LL_ADC_SetOffsetState(hadc->Instance, LL_ADC_OFFSET_4, LL_ADC_OFFSET_DISABLE);
2878:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         }
2879:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
2880:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
2881:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2882:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Parameters update conditioned to ADC state:                              */
2883:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Parameters that can be updated only when ADC is disabled:                */
2884:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /*  - Single or differential mode                                           */
2885:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     if (LL_ADC_IsEnabled(hadc->Instance) == 0UL)
2886:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
2887:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Set mode single-ended or differential input of the selected ADC channel */
2888:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       LL_ADC_SetChannelSingleDiff(hadc->Instance, sConfig->Channel, sConfig->SingleDiff);
2889:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2890:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Configuration of differential mode */
2891:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       if (sConfig->SingleDiff == ADC_DIFFERENTIAL_ENDED)
2892:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
2893:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* Set sampling time of the selected ADC channel */
2894:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* Note: ADC channel number masked with value "0x1F" to ensure shift value within 32 bits r
2895:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         LL_ADC_SetChannelSamplingTime(hadc->Instance,
2896:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                                       (uint32_t)(__LL_ADC_DECIMAL_NB_TO_CHANNEL((__LL_ADC_CHANNEL_T
2897:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                                       sConfig->SamplingTime);
2898:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
2899:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2900:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
2901:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2902:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Management of internal measurement channels: Vbat/VrefInt/TempSensor.  */
2903:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* If internal channel selected, enable dedicated internal buffers and    */
2904:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* paths.                                                                 */
2905:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Note: these internal measurement paths can be disabled using           */
2906:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* HAL_ADC_DeInit().                                                      */
ARM GAS  /tmp/ccEuGJBQ.s 			page 202


2907:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2908:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     if (__LL_ADC_IS_CHANNEL_INTERNAL(sConfig->Channel))
2909:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
2910:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       tmp_config_internal_channel = LL_ADC_GetCommonPathInternalCh(__LL_ADC_COMMON_INSTANCE(hadc->I
2911:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2912:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* If the requested internal measurement path has already been enabled, */
2913:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* bypass the configuration processing.                                 */
2914:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       if (((sConfig->Channel == ADC_CHANNEL_TEMPSENSOR_ADC1) || (sConfig->Channel == ADC_CHANNEL_TE
2915:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           && ((tmp_config_internal_channel & LL_ADC_PATH_INTERNAL_TEMPSENSOR) == 0UL))
2916:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
2917:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         if (ADC_TEMPERATURE_SENSOR_INSTANCE(hadc))
2918:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
2919:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           LL_ADC_SetCommonPathInternalCh(__LL_ADC_COMMON_INSTANCE(hadc->Instance),
2920:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                                          LL_ADC_PATH_INTERNAL_TEMPSENSOR | tmp_config_internal_chan
2921:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2922:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           /* Delay for temperature sensor stabilization time */
2923:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           /* Wait loop initialization and execution */
2924:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           /* Note: Variable divided by 2 to compensate partially              */
2925:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           /*       CPU processing cycles, scaling in us split to not          */
2926:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           /*       exceed 32 bits register capacity and handle low frequency. */
2927:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           wait_loop_index = ((LL_ADC_DELAY_TEMPSENSOR_STAB_US / 10UL) * ((SystemCoreClock / (100000
2928:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           while (wait_loop_index != 0UL)
2929:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           {
2930:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             wait_loop_index--;
2931:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           }
2932:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         }
2933:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
2934:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       else if ((sConfig->Channel == ADC_CHANNEL_VBAT) && ((tmp_config_internal_channel & LL_ADC_PAT
2935:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
2936:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         if (ADC_BATTERY_VOLTAGE_INSTANCE(hadc))
2937:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
2938:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           LL_ADC_SetCommonPathInternalCh(__LL_ADC_COMMON_INSTANCE(hadc->Instance),
2939:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                                          LL_ADC_PATH_INTERNAL_VBAT | tmp_config_internal_channel);
2940:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         }
2941:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
2942:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       else if ((sConfig->Channel == ADC_CHANNEL_VREFINT)
2943:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                && ((tmp_config_internal_channel & LL_ADC_PATH_INTERNAL_VREFINT) == 0UL))
2944:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
2945:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         if (ADC_VREFINT_INSTANCE(hadc))
2946:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
2947:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           LL_ADC_SetCommonPathInternalCh(__LL_ADC_COMMON_INSTANCE(hadc->Instance),
2948:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                                          LL_ADC_PATH_INTERNAL_VREFINT | tmp_config_internal_channel
2949:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         }
2950:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
2951:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       else
2952:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
2953:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* nothing to do */
2954:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
2955:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
2956:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
2957:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2958:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* If a conversion is on going on regular group, no update on regular       */
2959:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* channel could be done on neither of the channel configuration structure  */
2960:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* parameters.                                                              */
2961:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   else
2962:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
2963:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Update ADC state machine to error */
ARM GAS  /tmp/ccEuGJBQ.s 			page 203


2964:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
2965:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2966:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     tmp_hal_status = HAL_ERROR;
2967:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
2968:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2969:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Process unlocked */
2970:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   __HAL_UNLOCK(hadc);
2971:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2972:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Return function status */
2973:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   return tmp_hal_status;
2974:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** }
2975:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
2976:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** /**
2977:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @brief  Configure the analog watchdog.
2978:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @note   Possibility to update parameters on the fly:
2979:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         This function initializes the selected analog watchdog, successive
2980:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         calls to this function can be used to reconfigure some parameters
2981:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         of structure "ADC_AnalogWDGConfTypeDef" on the fly, without resetting
2982:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         the ADC.
2983:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         The setting of these parameters is conditioned to ADC state.
2984:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         For parameters constraints, see comments of structure
2985:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         "ADC_AnalogWDGConfTypeDef".
2986:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @note   On this STM32 series, analog watchdog thresholds can be modified
2987:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         while ADC conversion is on going.
2988:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         In this case, some constraints must be taken into account:
2989:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         the programmed threshold values are effective from the next
2990:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         ADC EOC (end of unitary conversion).
2991:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         Considering that registers write delay may happen due to
2992:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         bus activity, this might cause an uncertainty on the
2993:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         effective timing of the new programmed threshold values.
2994:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @param hadc ADC handle
2995:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @param AnalogWDGConfig Structure of ADC analog watchdog configuration
2996:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @retval HAL status
2997:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   */
2998:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_AnalogWDGConfig(ADC_HandleTypeDef *hadc, ADC_AnalogWDGConfTypeDef *Analog
2999:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** {
3000:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
3001:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t tmpAWDHighThresholdShifted;
3002:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t tmpAWDLowThresholdShifted;
3003:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t tmp_adc_is_conversion_on_going_regular;
3004:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t tmp_adc_is_conversion_on_going_injected;
3005:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3006:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Check the parameters */
3007:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
3008:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   assert_param(IS_ADC_ANALOG_WATCHDOG_NUMBER(AnalogWDGConfig->WatchdogNumber));
3009:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   assert_param(IS_ADC_ANALOG_WATCHDOG_MODE(AnalogWDGConfig->WatchdogMode));
3010:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   assert_param(IS_ADC_ANALOG_WATCHDOG_FILTERING_MODE(AnalogWDGConfig->FilteringConfig));
3011:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(AnalogWDGConfig->ITMode));
3012:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3013:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   if ((AnalogWDGConfig->WatchdogMode == ADC_ANALOGWATCHDOG_SINGLE_REG)     ||
3014:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       (AnalogWDGConfig->WatchdogMode == ADC_ANALOGWATCHDOG_SINGLE_INJEC)   ||
3015:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       (AnalogWDGConfig->WatchdogMode == ADC_ANALOGWATCHDOG_SINGLE_REGINJEC))
3016:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
3017:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     assert_param(IS_ADC_CHANNEL(hadc, AnalogWDGConfig->Channel));
3018:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
3019:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3020:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Verify thresholds range */
ARM GAS  /tmp/ccEuGJBQ.s 			page 204


3021:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   if (hadc->Init.OversamplingMode == ENABLE)
3022:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
3023:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Case of oversampling enabled: depending on ratio and shift configuration,
3024:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****        analog watchdog thresholds can be higher than ADC resolution.
3025:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****        Verify if thresholds are within maximum thresholds range. */
3026:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     assert_param(IS_ADC_RANGE(ADC_RESOLUTION_12B, AnalogWDGConfig->HighThreshold));
3027:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     assert_param(IS_ADC_RANGE(ADC_RESOLUTION_12B, AnalogWDGConfig->LowThreshold));
3028:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
3029:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   else
3030:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
3031:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Verify if thresholds are within the selected ADC resolution */
3032:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     assert_param(IS_ADC_RANGE(ADC_GET_RESOLUTION(hadc), AnalogWDGConfig->HighThreshold));
3033:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     assert_param(IS_ADC_RANGE(ADC_GET_RESOLUTION(hadc), AnalogWDGConfig->LowThreshold));
3034:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
3035:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3036:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Process locked */
3037:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   __HAL_LOCK(hadc);
3038:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3039:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Parameters update conditioned to ADC state:                              */
3040:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Parameters that can be updated when ADC is disabled or enabled without   */
3041:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* conversion on going on ADC groups regular and injected:                  */
3042:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /*  - Analog watchdog channels                                              */
3043:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   tmp_adc_is_conversion_on_going_regular = LL_ADC_REG_IsConversionOngoing(hadc->Instance);
3044:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   tmp_adc_is_conversion_on_going_injected = LL_ADC_INJ_IsConversionOngoing(hadc->Instance);
3045:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   if ((tmp_adc_is_conversion_on_going_regular == 0UL)
3046:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       && (tmp_adc_is_conversion_on_going_injected == 0UL)
3047:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****      )
3048:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
3049:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Analog watchdog configuration */
3050:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     if (AnalogWDGConfig->WatchdogNumber == ADC_ANALOGWATCHDOG_1)
3051:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
3052:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Configuration of analog watchdog:                                    */
3053:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /*  - Set the analog watchdog enable mode: one or overall group of      */
3054:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /*    channels, on groups regular and-or injected.                      */
3055:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       switch (AnalogWDGConfig->WatchdogMode)
3056:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
3057:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         case ADC_ANALOGWATCHDOG_SINGLE_REG:
3058:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           LL_ADC_SetAnalogWDMonitChannels(hadc->Instance, LL_ADC_AWD1, __LL_ADC_ANALOGWD_CHANNEL_GR
3059:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                                           LL_ADC_GROUP_REGULAR));
3060:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           break;
3061:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3062:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         case ADC_ANALOGWATCHDOG_SINGLE_INJEC:
3063:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           LL_ADC_SetAnalogWDMonitChannels(hadc->Instance, LL_ADC_AWD1, __LL_ADC_ANALOGWD_CHANNEL_GR
3064:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                                           LL_ADC_GROUP_INJECTED));
3065:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           break;
3066:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3067:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         case ADC_ANALOGWATCHDOG_SINGLE_REGINJEC:
3068:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           LL_ADC_SetAnalogWDMonitChannels(hadc->Instance, LL_ADC_AWD1, __LL_ADC_ANALOGWD_CHANNEL_GR
3069:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                                           LL_ADC_GROUP_REGULAR_INJECTED));
3070:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           break;
3071:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3072:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         case ADC_ANALOGWATCHDOG_ALL_REG:
3073:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           LL_ADC_SetAnalogWDMonitChannels(hadc->Instance, LL_ADC_AWD1, LL_ADC_AWD_ALL_CHANNELS_REG)
3074:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           break;
3075:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3076:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         case ADC_ANALOGWATCHDOG_ALL_INJEC:
3077:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           LL_ADC_SetAnalogWDMonitChannels(hadc->Instance, LL_ADC_AWD1, LL_ADC_AWD_ALL_CHANNELS_INJ)
ARM GAS  /tmp/ccEuGJBQ.s 			page 205


3078:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           break;
3079:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3080:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         case ADC_ANALOGWATCHDOG_ALL_REGINJEC:
3081:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           LL_ADC_SetAnalogWDMonitChannels(hadc->Instance, LL_ADC_AWD1, LL_ADC_AWD_ALL_CHANNELS_REG_
3082:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           break;
3083:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3084:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         default: /* ADC_ANALOGWATCHDOG_NONE */
3085:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           LL_ADC_SetAnalogWDMonitChannels(hadc->Instance, LL_ADC_AWD1, LL_ADC_AWD_DISABLE);
3086:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           break;
3087:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
3088:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3089:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Set the filtering configuration */
3090:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       MODIFY_REG(hadc->Instance->TR1,
3091:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                  ADC_TR1_AWDFILT,
3092:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                  AnalogWDGConfig->FilteringConfig);
3093:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3094:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Update state, clear previous result related to AWD1 */
3095:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       CLEAR_BIT(hadc->State, HAL_ADC_STATE_AWD1);
3096:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3097:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Clear flag ADC analog watchdog */
3098:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Note: Flag cleared Clear the ADC Analog watchdog flag to be ready  */
3099:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* to use for HAL_ADC_IRQHandler() or HAL_ADC_PollForEvent()          */
3100:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* (in case left enabled by previous ADC operations).                 */
3101:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       LL_ADC_ClearFlag_AWD1(hadc->Instance);
3102:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3103:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Configure ADC analog watchdog interrupt */
3104:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       if (AnalogWDGConfig->ITMode == ENABLE)
3105:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
3106:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         LL_ADC_EnableIT_AWD1(hadc->Instance);
3107:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
3108:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       else
3109:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
3110:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         LL_ADC_DisableIT_AWD1(hadc->Instance);
3111:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
3112:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
3113:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Case of ADC_ANALOGWATCHDOG_2 or ADC_ANALOGWATCHDOG_3 */
3114:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     else
3115:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
3116:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       switch (AnalogWDGConfig->WatchdogMode)
3117:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
3118:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         case ADC_ANALOGWATCHDOG_SINGLE_REG:
3119:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         case ADC_ANALOGWATCHDOG_SINGLE_INJEC:
3120:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         case ADC_ANALOGWATCHDOG_SINGLE_REGINJEC:
3121:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           /* Update AWD by bitfield to keep the possibility to monitor        */
3122:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           /* several channels by successive calls of this function.           */
3123:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           if (AnalogWDGConfig->WatchdogNumber == ADC_ANALOGWATCHDOG_2)
3124:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           {
3125:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             SET_BIT(hadc->Instance->AWD2CR, (1UL << (__LL_ADC_CHANNEL_TO_DECIMAL_NB(AnalogWDGConfig
3126:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           }
3127:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           else
3128:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           {
3129:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             SET_BIT(hadc->Instance->AWD3CR, (1UL << (__LL_ADC_CHANNEL_TO_DECIMAL_NB(AnalogWDGConfig
3130:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           }
3131:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           break;
3132:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3133:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         case ADC_ANALOGWATCHDOG_ALL_REG:
3134:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         case ADC_ANALOGWATCHDOG_ALL_INJEC:
ARM GAS  /tmp/ccEuGJBQ.s 			page 206


3135:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         case ADC_ANALOGWATCHDOG_ALL_REGINJEC:
3136:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           LL_ADC_SetAnalogWDMonitChannels(hadc->Instance, AnalogWDGConfig->WatchdogNumber, LL_ADC_A
3137:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           break;
3138:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3139:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         default: /* ADC_ANALOGWATCHDOG_NONE */
3140:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           LL_ADC_SetAnalogWDMonitChannels(hadc->Instance, AnalogWDGConfig->WatchdogNumber, LL_ADC_A
3141:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           break;
3142:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
3143:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3144:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       if (AnalogWDGConfig->WatchdogNumber == ADC_ANALOGWATCHDOG_2)
3145:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
3146:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* Update state, clear previous result related to AWD2 */
3147:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         CLEAR_BIT(hadc->State, HAL_ADC_STATE_AWD2);
3148:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3149:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* Clear flag ADC analog watchdog */
3150:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* Note: Flag cleared Clear the ADC Analog watchdog flag to be ready  */
3151:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* to use for HAL_ADC_IRQHandler() or HAL_ADC_PollForEvent()          */
3152:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* (in case left enabled by previous ADC operations).                 */
3153:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         LL_ADC_ClearFlag_AWD2(hadc->Instance);
3154:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3155:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* Configure ADC analog watchdog interrupt */
3156:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         if (AnalogWDGConfig->ITMode == ENABLE)
3157:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
3158:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           LL_ADC_EnableIT_AWD2(hadc->Instance);
3159:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         }
3160:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         else
3161:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
3162:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           LL_ADC_DisableIT_AWD2(hadc->Instance);
3163:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         }
3164:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
3165:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* (AnalogWDGConfig->WatchdogNumber == ADC_ANALOGWATCHDOG_3) */
3166:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       else
3167:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
3168:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* Update state, clear previous result related to AWD3 */
3169:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         CLEAR_BIT(hadc->State, HAL_ADC_STATE_AWD3);
3170:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3171:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* Clear flag ADC analog watchdog */
3172:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* Note: Flag cleared Clear the ADC Analog watchdog flag to be ready  */
3173:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* to use for HAL_ADC_IRQHandler() or HAL_ADC_PollForEvent()          */
3174:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* (in case left enabled by previous ADC operations).                 */
3175:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         LL_ADC_ClearFlag_AWD3(hadc->Instance);
3176:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3177:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* Configure ADC analog watchdog interrupt */
3178:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         if (AnalogWDGConfig->ITMode == ENABLE)
3179:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
3180:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           LL_ADC_EnableIT_AWD3(hadc->Instance);
3181:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         }
3182:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         else
3183:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
3184:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           LL_ADC_DisableIT_AWD3(hadc->Instance);
3185:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         }
3186:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
3187:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
3188:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3189:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
3190:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3191:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Analog watchdog thresholds configuration */
ARM GAS  /tmp/ccEuGJBQ.s 			page 207


3192:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   if (AnalogWDGConfig->WatchdogNumber == ADC_ANALOGWATCHDOG_1)
3193:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
3194:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Shift the offset with respect to the selected ADC resolution:        */
3195:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Thresholds have to be left-aligned on bit 11, the LSB (right bits)   */
3196:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* are set to 0.                                                        */
3197:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     tmpAWDHighThresholdShifted = ADC_AWD1THRESHOLD_SHIFT_RESOLUTION(hadc, AnalogWDGConfig->HighThre
3198:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     tmpAWDLowThresholdShifted  = ADC_AWD1THRESHOLD_SHIFT_RESOLUTION(hadc, AnalogWDGConfig->LowThres
3199:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
3200:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Case of ADC_ANALOGWATCHDOG_2 and ADC_ANALOGWATCHDOG_3 */
3201:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   else
3202:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
3203:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Shift the offset with respect to the selected ADC resolution:        */
3204:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Thresholds have to be left-aligned on bit 7, the LSB (right bits)    */
3205:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* are set to 0.                                                        */
3206:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     tmpAWDHighThresholdShifted = ADC_AWD23THRESHOLD_SHIFT_RESOLUTION(hadc, AnalogWDGConfig->HighThr
3207:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     tmpAWDLowThresholdShifted  = ADC_AWD23THRESHOLD_SHIFT_RESOLUTION(hadc, AnalogWDGConfig->LowThre
3208:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
3209:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3210:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Set ADC analog watchdog thresholds value of both thresholds high and low */
3211:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   LL_ADC_ConfigAnalogWDThresholds(hadc->Instance, AnalogWDGConfig->WatchdogNumber, tmpAWDHighThresh
3212:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                                   tmpAWDLowThresholdShifted);
3213:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3214:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Process unlocked */
3215:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   __HAL_UNLOCK(hadc);
3216:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3217:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Return function status */
3218:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   return tmp_hal_status;
3219:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** }
3220:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3221:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3222:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** /**
3223:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @}
3224:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   */
3225:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3226:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** /** @defgroup ADC_Exported_Functions_Group4 Peripheral State functions
3227:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *  @brief    ADC Peripheral State functions
3228:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *
3229:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** @verbatim
3230:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****  ===============================================================================
3231:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             ##### Peripheral state and errors functions #####
3232:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****  ===============================================================================
3233:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     [..]
3234:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     This subsection provides functions to get in run-time the status of the
3235:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     peripheral.
3236:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       (+) Check the ADC state
3237:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       (+) Check the ADC error code
3238:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3239:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** @endverbatim
3240:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @{
3241:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   */
3242:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3243:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** /**
3244:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @brief  Return the ADC handle state.
3245:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @note   ADC state machine is managed by bitfields, ADC status must be
3246:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         compared with states bits.
3247:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         For example:
3248:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *           " if ((HAL_ADC_GetState(hadc1) & HAL_ADC_STATE_REG_BUSY) != 0UL) "
ARM GAS  /tmp/ccEuGJBQ.s 			page 208


3249:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *           " if ((HAL_ADC_GetState(hadc1) & HAL_ADC_STATE_AWD1) != 0UL) "
3250:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @param hadc ADC handle
3251:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @retval ADC handle state (bitfield on 32 bits)
3252:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   */
3253:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** uint32_t HAL_ADC_GetState(ADC_HandleTypeDef *hadc)
3254:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** {
3255:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Check the parameters */
3256:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
3257:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3258:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Return ADC handle state */
3259:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   return hadc->State;
3260:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** }
3261:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3262:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** /**
3263:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @brief  Return the ADC error code.
3264:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @param hadc ADC handle
3265:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @retval ADC error code (bitfield on 32 bits)
3266:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   */
3267:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** uint32_t HAL_ADC_GetError(ADC_HandleTypeDef *hadc)
3268:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** {
3269:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Check the parameters */
3270:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
3271:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3272:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   return hadc->ErrorCode;
3273:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** }
3274:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3275:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** /**
3276:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @}
3277:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   */
3278:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3279:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** /**
3280:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @}
3281:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   */
3282:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3283:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** /** @defgroup ADC_Private_Functions ADC Private Functions
3284:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @{
3285:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   */
3286:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3287:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** /**
3288:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @brief  Stop ADC conversion.
3289:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @param hadc ADC handle
3290:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @param ConversionGroup ADC group regular and/or injected.
3291:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *          This parameter can be one of the following values:
3292:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *            @arg @ref ADC_REGULAR_GROUP           ADC regular conversion type.
3293:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *            @arg @ref ADC_INJECTED_GROUP          ADC injected conversion type.
3294:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *            @arg @ref ADC_REGULAR_INJECTED_GROUP  ADC regular and injected conversion type.
3295:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @retval HAL status.
3296:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   */
3297:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** HAL_StatusTypeDef ADC_ConversionStop(ADC_HandleTypeDef *hadc, uint32_t ConversionGroup)
3298:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** {
3299:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t tickstart;
3300:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t Conversion_Timeout_CPU_cycles = 0UL;
3301:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t conversion_group_reassigned = ConversionGroup;
3302:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t tmp_ADC_CR_ADSTART_JADSTART;
3303:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t tmp_adc_is_conversion_on_going_regular;
3304:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t tmp_adc_is_conversion_on_going_injected;
3305:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
ARM GAS  /tmp/ccEuGJBQ.s 			page 209


3306:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Check the parameters */
3307:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
3308:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   assert_param(IS_ADC_CONVERSION_GROUP(ConversionGroup));
3309:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3310:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Verification if ADC is not already stopped (on regular and injected      */
3311:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* groups) to bypass this function if not needed.                           */
3312:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   tmp_adc_is_conversion_on_going_regular = LL_ADC_REG_IsConversionOngoing(hadc->Instance);
3313:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   tmp_adc_is_conversion_on_going_injected = LL_ADC_INJ_IsConversionOngoing(hadc->Instance);
3314:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   if ((tmp_adc_is_conversion_on_going_regular != 0UL)
3315:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       || (tmp_adc_is_conversion_on_going_injected != 0UL)
3316:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****      )
3317:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
3318:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Particular case of continuous auto-injection mode combined with        */
3319:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* auto-delay mode.                                                       */
3320:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* In auto-injection mode, regular group stop ADC_CR_ADSTP is used (not   */
3321:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* injected group stop ADC_CR_JADSTP).                                    */
3322:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Procedure to be followed: Wait until JEOS=1, clear JEOS, set ADSTP=1   */
3323:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* (see reference manual).                                                */
3324:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     if (((hadc->Instance->CFGR & ADC_CFGR_JAUTO) != 0UL)
3325:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         && (hadc->Init.ContinuousConvMode == ENABLE)
3326:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         && (hadc->Init.LowPowerAutoWait == ENABLE)
3327:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****        )
3328:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
3329:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Use stop of regular group */
3330:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       conversion_group_reassigned = ADC_REGULAR_GROUP;
3331:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3332:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Wait until JEOS=1 (maximum Timeout: 4 injected conversions) */
3333:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       while (__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_JEOS) == 0UL)
3334:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
3335:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         if (Conversion_Timeout_CPU_cycles >= (ADC_CONVERSION_TIME_MAX_CPU_CYCLES * 4UL))
3336:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
3337:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           /* Update ADC state machine to error */
3338:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
3339:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3340:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           /* Set ADC error code to ADC peripheral internal error */
3341:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
3342:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3343:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           return HAL_ERROR;
3344:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         }
3345:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         Conversion_Timeout_CPU_cycles ++;
3346:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
3347:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3348:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Clear JEOS */
3349:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_JEOS);
3350:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
3351:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3352:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Stop potential conversion on going on ADC group regular */
3353:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     if (conversion_group_reassigned != ADC_INJECTED_GROUP)
3354:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
3355:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Software is allowed to set ADSTP only when ADSTART=1 and ADDIS=0 */
3356:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       if (LL_ADC_REG_IsConversionOngoing(hadc->Instance) != 0UL)
3357:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
3358:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         if (LL_ADC_IsDisableOngoing(hadc->Instance) == 0UL)
3359:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
3360:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           /* Stop ADC group regular conversion */
3361:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           LL_ADC_REG_StopConversion(hadc->Instance);
3362:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         }
ARM GAS  /tmp/ccEuGJBQ.s 			page 210


3363:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
3364:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
3365:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3366:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Stop potential conversion on going on ADC group injected */
3367:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     if (conversion_group_reassigned != ADC_REGULAR_GROUP)
3368:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
3369:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Software is allowed to set JADSTP only when JADSTART=1 and ADDIS=0 */
3370:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       if (LL_ADC_INJ_IsConversionOngoing(hadc->Instance) != 0UL)
3371:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
3372:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         if (LL_ADC_IsDisableOngoing(hadc->Instance) == 0UL)
3373:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
3374:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           /* Stop ADC group injected conversion */
3375:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           LL_ADC_INJ_StopConversion(hadc->Instance);
3376:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         }
3377:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
3378:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
3379:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3380:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Selection of start and stop bits with respect to the regular or injected group */
3381:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     switch (conversion_group_reassigned)
3382:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
3383:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       case ADC_REGULAR_INJECTED_GROUP:
3384:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         tmp_ADC_CR_ADSTART_JADSTART = (ADC_CR_ADSTART | ADC_CR_JADSTART);
3385:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         break;
3386:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       case ADC_INJECTED_GROUP:
3387:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         tmp_ADC_CR_ADSTART_JADSTART = ADC_CR_JADSTART;
3388:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         break;
3389:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Case ADC_REGULAR_GROUP only*/
3390:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       default:
3391:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         tmp_ADC_CR_ADSTART_JADSTART = ADC_CR_ADSTART;
3392:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         break;
3393:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
3394:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3395:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Wait for conversion effectively stopped */
3396:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     tickstart = HAL_GetTick();
3397:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3398:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     while ((hadc->Instance->CR & tmp_ADC_CR_ADSTART_JADSTART) != 0UL)
3399:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
3400:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       if ((HAL_GetTick() - tickstart) > ADC_STOP_CONVERSION_TIMEOUT)
3401:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
3402:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* New check to avoid false timeout detection in case of preemption */
3403:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         if ((hadc->Instance->CR & tmp_ADC_CR_ADSTART_JADSTART) != 0UL)
3404:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
3405:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           /* Update ADC state machine to error */
3406:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
3407:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3408:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           /* Set ADC error code to ADC peripheral internal error */
3409:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
3410:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3411:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           return HAL_ERROR;
3412:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         }
3413:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
3414:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
3415:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3416:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
3417:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3418:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Return HAL status */
3419:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   return HAL_OK;
ARM GAS  /tmp/ccEuGJBQ.s 			page 211


3420:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** }
3421:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3422:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** /**
3423:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @brief  Enable the selected ADC.
3424:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @note   Prerequisite condition to use this function: ADC must be disabled
3425:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         and voltage regulator must be enabled (done into HAL_ADC_Init()).
3426:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @param hadc ADC handle
3427:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @retval HAL status.
3428:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   */
3429:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** HAL_StatusTypeDef ADC_Enable(ADC_HandleTypeDef *hadc)
3430:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** {
3431:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t tickstart;
3432:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3433:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* ADC enable and wait for ADC ready (in case of ADC is disabled or         */
3434:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* enabling phase not yet completed: flag ADC ready not yet set).           */
3435:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Timeout implemented to not be stuck if ADC cannot be enabled (possible   */
3436:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* causes: ADC clock not running, ...).                                     */
3437:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   if (LL_ADC_IsEnabled(hadc->Instance) == 0UL)
3438:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
3439:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Check if conditions to enable the ADC are fulfilled */
3440:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     if ((hadc->Instance->CR & (ADC_CR_ADCAL | ADC_CR_JADSTP | ADC_CR_ADSTP | ADC_CR_JADSTART | ADC_
3441:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                                | ADC_CR_ADDIS | ADC_CR_ADEN)) != 0UL)
3442:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
3443:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Update ADC state machine to error */
3444:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
3445:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3446:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Set ADC error code to ADC peripheral internal error */
3447:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
3448:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3449:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       return HAL_ERROR;
3450:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
3451:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3452:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Enable the ADC peripheral */
3453:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     LL_ADC_Enable(hadc->Instance);
3454:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3455:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Wait for ADC effectively enabled */
3456:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     tickstart = HAL_GetTick();
3457:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3458:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     while (__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_RDY) == 0UL)
3459:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
3460:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /*  If ADEN bit is set less than 4 ADC clock cycles after the ADCAL bit
3461:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           has been cleared (after a calibration), ADEN bit is reset by the
3462:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           calibration logic.
3463:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           The workaround is to continue setting ADEN until ADRDY is becomes 1.
3464:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           Additionally, ADC_ENABLE_TIMEOUT is defined to encompass this
3465:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           4 ADC clock cycle duration */
3466:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Note: Test of ADC enabled required due to hardware constraint to     */
3467:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /*       not enable ADC if already enabled.                             */
3468:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       if (LL_ADC_IsEnabled(hadc->Instance) == 0UL)
3469:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
3470:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         LL_ADC_Enable(hadc->Instance);
3471:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
3472:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3473:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       if ((HAL_GetTick() - tickstart) > ADC_ENABLE_TIMEOUT)
3474:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
3475:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* New check to avoid false timeout detection in case of preemption */
3476:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         if (__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_RDY) == 0UL)
ARM GAS  /tmp/ccEuGJBQ.s 			page 212


3477:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
3478:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           /* Update ADC state machine to error */
3479:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
3480:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3481:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           /* Set ADC error code to ADC peripheral internal error */
3482:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
3483:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3484:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           return HAL_ERROR;
3485:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         }
3486:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
3487:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
3488:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
3489:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3490:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Return HAL status */
3491:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   return HAL_OK;
3492:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** }
3493:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3494:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** /**
3495:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @brief  Disable the selected ADC.
3496:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @note   Prerequisite condition to use this function: ADC conversions must be
3497:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   *         stopped.
3498:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @param hadc ADC handle
3499:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @retval HAL status.
3500:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   */
3501:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** HAL_StatusTypeDef ADC_Disable(ADC_HandleTypeDef *hadc)
3502:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** {
3503:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t tickstart;
3504:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   const uint32_t tmp_adc_is_disable_on_going = LL_ADC_IsDisableOngoing(hadc->Instance);
3505:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3506:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Verification if ADC is not already disabled:                             */
3507:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Note: forbidden to disable ADC (set bit ADC_CR_ADDIS) if ADC is already  */
3508:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /*       disabled.                                                          */
3509:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   if ((LL_ADC_IsEnabled(hadc->Instance) != 0UL)
3510:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       && (tmp_adc_is_disable_on_going == 0UL)
3511:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****      )
3512:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
3513:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Check if conditions to disable the ADC are fulfilled */
3514:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     if ((hadc->Instance->CR & (ADC_CR_JADSTART | ADC_CR_ADSTART | ADC_CR_ADEN)) == ADC_CR_ADEN)
3515:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
3516:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Disable the ADC peripheral */
3517:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       LL_ADC_Disable(hadc->Instance);
3518:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_EOSMP | ADC_FLAG_RDY));
3519:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
3520:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     else
3521:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
3522:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Update ADC state machine to error */
3523:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
3524:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3525:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Set ADC error code to ADC peripheral internal error */
3526:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
3527:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3528:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       return HAL_ERROR;
3529:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
3530:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3531:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Wait for ADC effectively disabled */
3532:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Get tick count */
3533:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     tickstart = HAL_GetTick();
ARM GAS  /tmp/ccEuGJBQ.s 			page 213


3534:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3535:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     while ((hadc->Instance->CR & ADC_CR_ADEN) != 0UL)
3536:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
3537:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       if ((HAL_GetTick() - tickstart) > ADC_DISABLE_TIMEOUT)
3538:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
3539:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* New check to avoid false timeout detection in case of preemption */
3540:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         if ((hadc->Instance->CR & ADC_CR_ADEN) != 0UL)
3541:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
3542:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           /* Update ADC state machine to error */
3543:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
3544:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3545:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           /* Set ADC error code to ADC peripheral internal error */
3546:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
3547:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3548:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           return HAL_ERROR;
3549:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         }
3550:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
3551:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
3552:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
3553:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3554:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Return HAL status */
3555:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   return HAL_OK;
3556:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** }
3557:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3558:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** /**
3559:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @brief  DMA transfer complete callback.
3560:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @param hdma pointer to DMA handle.
3561:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @retval None
3562:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   */
3563:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** void ADC_DMAConvCplt(DMA_HandleTypeDef *hdma)
3564:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** {
3565:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Retrieve ADC handle corresponding to current DMA handle */
3566:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   ADC_HandleTypeDef *hadc = (ADC_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
3567:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3568:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Update state machine on conversion status if not in error state */
3569:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   if ((hadc->State & (HAL_ADC_STATE_ERROR_INTERNAL | HAL_ADC_STATE_ERROR_DMA)) == 0UL)
3570:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
3571:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Set ADC state */
3572:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOC);
3573:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3574:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Determine whether any further conversion upcoming on group regular     */
3575:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* by external trigger, continuous mode or scan sequence on going         */
3576:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* to disable interruption.                                               */
3577:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Is it the end of the regular sequence ? */
3578:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     if ((hadc->Instance->ISR & ADC_FLAG_EOS) != 0UL)
3579:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
3580:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Are conversions software-triggered ? */
3581:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       if (LL_ADC_REG_IsTriggerSourceSWStart(hadc->Instance) != 0UL)
3582:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
3583:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* Is CONT bit set ? */
3584:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         if (READ_BIT(hadc->Instance->CFGR, ADC_CFGR_CONT) == 0UL)
3585:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
3586:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           /* CONT bit is not set, no more conversions expected */
3587:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           CLEAR_BIT(hadc->State, HAL_ADC_STATE_REG_BUSY);
3588:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           if ((hadc->State & HAL_ADC_STATE_INJ_BUSY) == 0UL)
3589:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           {
3590:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             SET_BIT(hadc->State, HAL_ADC_STATE_READY);
ARM GAS  /tmp/ccEuGJBQ.s 			page 214


3591:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           }
3592:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         }
3593:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
3594:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
3595:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     else
3596:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
3597:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* DMA End of Transfer interrupt was triggered but conversions sequence
3598:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****          is not over. If DMACFG is set to 0, conversions are stopped. */
3599:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       if (READ_BIT(hadc->Instance->CFGR, ADC_CFGR_DMACFG) == 0UL)
3600:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
3601:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* DMACFG bit is not set, conversions are stopped. */
3602:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         CLEAR_BIT(hadc->State, HAL_ADC_STATE_REG_BUSY);
3603:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         if ((hadc->State & HAL_ADC_STATE_INJ_BUSY) == 0UL)
3604:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
3605:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_READY);
3606:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         }
3607:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
3608:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
3609:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3610:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Conversion complete callback */
3611:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
3612:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     hadc->ConvCpltCallback(hadc);
3613:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #else
3614:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     HAL_ADC_ConvCpltCallback(hadc);
3615:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
3616:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
3617:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   else /* DMA and-or internal error occurred */
3618:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
3619:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     if ((hadc->State & HAL_ADC_STATE_ERROR_INTERNAL) != 0UL)
3620:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
3621:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Call HAL ADC Error Callback function */
3622:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
3623:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       hadc->ErrorCallback(hadc);
3624:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #else
3625:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       HAL_ADC_ErrorCallback(hadc);
3626:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
3627:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
3628:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     else
3629:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
3630:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Call ADC DMA error callback */
3631:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       hadc->DMA_Handle->XferErrorCallback(hdma);
3632:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
3633:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
3634:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** }
3635:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3636:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** /**
3637:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @brief  DMA half transfer complete callback.
3638:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @param hdma pointer to DMA handle.
3639:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @retval None
3640:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   */
3641:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** void ADC_DMAHalfConvCplt(DMA_HandleTypeDef *hdma)
3642:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** {
 1275              		.loc 1 3642 1 is_stmt 1 view -0
 1276              		.cfi_startproc
 1277              		@ args = 0, pretend = 0, frame = 0
 1278              		@ frame_needed = 0, uses_anonymous_args = 0
 1279              		.loc 1 3642 1 is_stmt 0 view .LVU390
ARM GAS  /tmp/ccEuGJBQ.s 			page 215


 1280 0000 08B5     		push	{r3, lr}
 1281              	.LCFI6:
 1282              		.cfi_def_cfa_offset 8
 1283              		.cfi_offset 3, -8
 1284              		.cfi_offset 14, -4
3643:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Retrieve ADC handle corresponding to current DMA handle */
3644:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   ADC_HandleTypeDef *hadc = (ADC_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 1285              		.loc 1 3644 3 is_stmt 1 view .LVU391
 1286              	.LVL86:
3645:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3646:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Half conversion callback */
3647:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
3648:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   hadc->ConvHalfCpltCallback(hadc);
3649:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #else
3650:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   HAL_ADC_ConvHalfCpltCallback(hadc);
 1287              		.loc 1 3650 3 view .LVU392
 1288 0002 806A     		ldr	r0, [r0, #40]
 1289              	.LVL87:
 1290              		.loc 1 3650 3 is_stmt 0 view .LVU393
 1291 0004 FFF7FEFF 		bl	HAL_ADC_ConvHalfCpltCallback
 1292              	.LVL88:
3651:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
3652:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** }
 1293              		.loc 1 3652 1 view .LVU394
 1294 0008 08BD     		pop	{r3, pc}
 1295              		.cfi_endproc
 1296              	.LFE357:
 1298              		.section	.text.HAL_ADC_LevelOutOfWindowCallback,"ax",%progbits
 1299              		.align	1
 1300              		.weak	HAL_ADC_LevelOutOfWindowCallback
 1301              		.syntax unified
 1302              		.thumb
 1303              		.thumb_func
 1305              	HAL_ADC_LevelOutOfWindowCallback:
 1306              	.LVL89:
 1307              	.LFB347:
2698:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
 1308              		.loc 1 2698 1 is_stmt 1 view -0
 1309              		.cfi_startproc
 1310              		@ args = 0, pretend = 0, frame = 0
 1311              		@ frame_needed = 0, uses_anonymous_args = 0
 1312              		@ link register save eliminated.
2700:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 1313              		.loc 1 2700 3 view .LVU396
2705:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 1314              		.loc 1 2705 1 is_stmt 0 view .LVU397
 1315 0000 7047     		bx	lr
 1316              		.cfi_endproc
 1317              	.LFE347:
 1319              		.section	.text.HAL_ADC_ErrorCallback,"ax",%progbits
 1320              		.align	1
 1321              		.weak	HAL_ADC_ErrorCallback
 1322              		.syntax unified
 1323              		.thumb
 1324              		.thumb_func
 1326              	HAL_ADC_ErrorCallback:
 1327              	.LVL90:
ARM GAS  /tmp/ccEuGJBQ.s 			page 216


 1328              	.LFB348:
2720:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
 1329              		.loc 1 2720 1 is_stmt 1 view -0
 1330              		.cfi_startproc
 1331              		@ args = 0, pretend = 0, frame = 0
 1332              		@ frame_needed = 0, uses_anonymous_args = 0
 1333              		@ link register save eliminated.
2722:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 1334              		.loc 1 2722 3 view .LVU399
2727:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 1335              		.loc 1 2727 1 is_stmt 0 view .LVU400
 1336 0000 7047     		bx	lr
 1337              		.cfi_endproc
 1338              	.LFE348:
 1340              		.section	.text.HAL_ADC_IRQHandler,"ax",%progbits
 1341              		.align	1
 1342              		.global	HAL_ADC_IRQHandler
 1343              		.syntax unified
 1344              		.thumb
 1345              		.thumb_func
 1347              	HAL_ADC_IRQHandler:
 1348              	.LVL91:
 1349              	.LFB344:
2296:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t overrun_error = 0UL; /* flag set if overrun occurrence has to be considered as an error 
 1350              		.loc 1 2296 1 is_stmt 1 view -0
 1351              		.cfi_startproc
 1352              		@ args = 0, pretend = 0, frame = 0
 1353              		@ frame_needed = 0, uses_anonymous_args = 0
2296:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t overrun_error = 0UL; /* flag set if overrun occurrence has to be considered as an error 
 1354              		.loc 1 2296 1 is_stmt 0 view .LVU402
 1355 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1356              	.LCFI7:
 1357              		.cfi_def_cfa_offset 24
 1358              		.cfi_offset 3, -24
 1359              		.cfi_offset 4, -20
 1360              		.cfi_offset 5, -16
 1361              		.cfi_offset 6, -12
 1362              		.cfi_offset 7, -8
 1363              		.cfi_offset 14, -4
 1364 0002 0446     		mov	r4, r0
2297:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t tmp_isr = hadc->Instance->ISR;
 1365              		.loc 1 2297 3 is_stmt 1 view .LVU403
 1366              	.LVL92:
2298:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t tmp_ier = hadc->Instance->IER;
 1367              		.loc 1 2298 3 view .LVU404
2298:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t tmp_ier = hadc->Instance->IER;
 1368              		.loc 1 2298 26 is_stmt 0 view .LVU405
 1369 0004 0368     		ldr	r3, [r0]
2298:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t tmp_ier = hadc->Instance->IER;
 1370              		.loc 1 2298 12 view .LVU406
 1371 0006 1F68     		ldr	r7, [r3]
 1372              	.LVL93:
2299:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t tmp_adc_inj_is_trigger_source_sw_start;
 1373              		.loc 1 2299 3 is_stmt 1 view .LVU407
2299:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t tmp_adc_inj_is_trigger_source_sw_start;
 1374              		.loc 1 2299 12 is_stmt 0 view .LVU408
 1375 0008 5D68     		ldr	r5, [r3, #4]
ARM GAS  /tmp/ccEuGJBQ.s 			page 217


 1376              	.LVL94:
2300:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t tmp_adc_reg_is_trigger_source_sw_start;
 1377              		.loc 1 2300 3 is_stmt 1 view .LVU409
2301:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t tmp_cfgr;
 1378              		.loc 1 2301 3 view .LVU410
2302:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #if defined(ADC_MULTIMODE_SUPPORT)
 1379              		.loc 1 2302 3 view .LVU411
2304:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t tmp_multimode_config = LL_ADC_GetMultimode(__LL_ADC_COMMON_INSTANCE(hadc->Instance));
 1380              		.loc 1 2304 3 view .LVU412
2305:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #endif
 1381              		.loc 1 2305 3 view .LVU413
 1382              	.LBB364:
 1383              	.LBI364:
6385:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 1384              		.loc 2 6385 26 view .LVU414
 1385              	.LBB365:
6387:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 1386              		.loc 2 6387 3 view .LVU415
6387:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 1387              		.loc 2 6387 21 is_stmt 0 view .LVU416
 1388 000a 9A4B     		ldr	r3, .L134
 1389 000c 9E68     		ldr	r6, [r3, #8]
6387:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 1390              		.loc 2 6387 10 view .LVU417
 1391 000e 06F01F06 		and	r6, r6, #31
 1392              	.LVL95:
6387:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 1393              		.loc 2 6387 10 view .LVU418
 1394              	.LBE365:
 1395              	.LBE364:
2309:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   assert_param(IS_ADC_EOC_SELECTION(hadc->Init.EOCSelection));
 1396              		.loc 1 2309 3 is_stmt 1 view .LVU419
2310:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 1397              		.loc 1 2310 3 view .LVU420
2313:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
 1398              		.loc 1 2313 3 view .LVU421
2313:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
 1399              		.loc 1 2313 6 is_stmt 0 view .LVU422
 1400 0012 17F0020F 		tst	r7, #2
 1401 0016 10D0     		beq	.L88
2313:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
 1402              		.loc 1 2313 54 discriminator 1 view .LVU423
 1403 0018 15F0020F 		tst	r5, #2
 1404 001c 0DD0     		beq	.L88
2316:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 1405              		.loc 1 2316 5 is_stmt 1 view .LVU424
2316:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 1406              		.loc 1 2316 14 is_stmt 0 view .LVU425
 1407 001e C36D     		ldr	r3, [r0, #92]
2316:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 1408              		.loc 1 2316 8 view .LVU426
 1409 0020 13F0100F 		tst	r3, #16
 1410 0024 03D1     		bne	.L89
2319:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
 1411              		.loc 1 2319 7 is_stmt 1 view .LVU427
 1412 0026 C36D     		ldr	r3, [r0, #92]
 1413 0028 43F40063 		orr	r3, r3, #2048
ARM GAS  /tmp/ccEuGJBQ.s 			page 218


 1414 002c C365     		str	r3, [r0, #92]
 1415              	.L89:
2326:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 1416              		.loc 1 2326 5 view .LVU428
 1417 002e 2046     		mov	r0, r4
 1418              	.LVL96:
2326:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 1419              		.loc 1 2326 5 is_stmt 0 view .LVU429
 1420 0030 FFF7FEFF 		bl	HAL_ADCEx_EndOfSamplingCallback
 1421              	.LVL97:
2330:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
 1422              		.loc 1 2330 5 is_stmt 1 view .LVU430
 1423 0034 2368     		ldr	r3, [r4]
 1424 0036 0222     		movs	r2, #2
 1425 0038 1A60     		str	r2, [r3]
 1426              	.L88:
2334:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       (((tmp_isr & ADC_FLAG_EOS) == ADC_FLAG_EOS) && ((tmp_ier & ADC_IT_EOS) == ADC_IT_EOS)))
 1427              		.loc 1 2334 3 view .LVU431
2334:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       (((tmp_isr & ADC_FLAG_EOS) == ADC_FLAG_EOS) && ((tmp_ier & ADC_IT_EOS) == ADC_IT_EOS)))
 1428              		.loc 1 2334 6 is_stmt 0 view .LVU432
 1429 003a 17F0040F 		tst	r7, #4
 1430 003e 02D0     		beq	.L90
2334:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       (((tmp_isr & ADC_FLAG_EOS) == ADC_FLAG_EOS) && ((tmp_ier & ADC_IT_EOS) == ADC_IT_EOS)))
 1431              		.loc 1 2334 51 discriminator 1 view .LVU433
 1432 0040 15F0040F 		tst	r5, #4
 1433 0044 05D1     		bne	.L91
 1434              	.L90:
2334:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       (((tmp_isr & ADC_FLAG_EOS) == ADC_FLAG_EOS) && ((tmp_ier & ADC_IT_EOS) == ADC_IT_EOS)))
 1435              		.loc 1 2334 94 discriminator 3 view .LVU434
 1436 0046 17F0080F 		tst	r7, #8
 1437 004a 4DD0     		beq	.L92
2335:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
 1438              		.loc 1 2335 51 view .LVU435
 1439 004c 15F0080F 		tst	r5, #8
 1440 0050 4AD0     		beq	.L92
 1441              	.L91:
2338:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 1442              		.loc 1 2338 5 is_stmt 1 view .LVU436
2338:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 1443              		.loc 1 2338 14 is_stmt 0 view .LVU437
 1444 0052 E36D     		ldr	r3, [r4, #92]
2338:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 1445              		.loc 1 2338 8 view .LVU438
 1446 0054 13F0100F 		tst	r3, #16
 1447 0058 03D1     		bne	.L93
2341:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
 1448              		.loc 1 2341 7 is_stmt 1 view .LVU439
 1449 005a E36D     		ldr	r3, [r4, #92]
 1450 005c 43F40073 		orr	r3, r3, #512
 1451 0060 E365     		str	r3, [r4, #92]
 1452              	.L93:
2347:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 1453              		.loc 1 2347 5 view .LVU440
2347:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 1454              		.loc 1 2347 9 is_stmt 0 view .LVU441
 1455 0062 2368     		ldr	r3, [r4]
 1456              	.LVL98:
ARM GAS  /tmp/ccEuGJBQ.s 			page 219


 1457              	.LBB366:
 1458              	.LBI366:
3748:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 1459              		.loc 2 3748 26 is_stmt 1 view .LVU442
 1460              	.LBB367:
3750:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 1461              		.loc 2 3750 3 view .LVU443
3750:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 1462              		.loc 2 3750 12 is_stmt 0 view .LVU444
 1463 0064 DA68     		ldr	r2, [r3, #12]
3750:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 1464              		.loc 2 3750 103 view .LVU445
 1465 0066 12F4406F 		tst	r2, #3072
 1466 006a 37D1     		bne	.L94
 1467              	.LVL99:
3750:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 1468              		.loc 2 3750 103 view .LVU446
 1469              	.LBE367:
 1470              	.LBE366:
2353:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 1471              		.loc 1 2353 7 is_stmt 1 view .LVU447
2353:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 1472              		.loc 1 2353 12 is_stmt 0 view .LVU448
 1473 006c 824A     		ldr	r2, .L134+4
 1474 006e 9342     		cmp	r3, r2
 1475 0070 0CD0     		beq	.L128
 1476 0072 1A46     		mov	r2, r3
 1477              	.L95:
2353:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 1478              		.loc 1 2353 10 discriminator 4 view .LVU449
 1479 0074 9342     		cmp	r3, r2
 1480 0076 0CD0     		beq	.L96
 1481 0078 092E     		cmp	r6, #9
 1482 007a 05D8     		bhi	.L97
 1483 007c 40F22121 		movw	r1, #545
 1484 0080 F140     		lsrs	r1, r1, r6
 1485 0082 11F0010F 		tst	r1, #1
 1486 0086 04D1     		bne	.L96
 1487              	.L97:
2365:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         tmp_cfgr = READ_REG(tmpADC_Master->CFGR);
 1488              		.loc 1 2365 9 is_stmt 1 discriminator 4 view .LVU450
 1489              	.LVL100:
2366:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
 1490              		.loc 1 2366 9 discriminator 4 view .LVU451
2366:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
 1491              		.loc 1 2366 18 is_stmt 0 discriminator 4 view .LVU452
 1492 0088 D268     		ldr	r2, [r2, #12]
 1493              	.LVL101:
2366:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
 1494              		.loc 1 2366 18 discriminator 4 view .LVU453
 1495 008a 03E0     		b	.L98
 1496              	.LVL102:
 1497              	.L128:
2353:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 1498              		.loc 1 2353 12 view .LVU454
 1499 008c 4FF0A042 		mov	r2, #1342177280
 1500 0090 F0E7     		b	.L95
ARM GAS  /tmp/ccEuGJBQ.s 			page 220


 1501              	.L96:
2360:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
 1502              		.loc 1 2360 9 is_stmt 1 view .LVU455
2360:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
 1503              		.loc 1 2360 18 is_stmt 0 view .LVU456
 1504 0092 DA68     		ldr	r2, [r3, #12]
 1505              	.LVL103:
 1506              	.L98:
2373:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 1507              		.loc 1 2373 7 is_stmt 1 view .LVU457
2373:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 1508              		.loc 1 2373 10 is_stmt 0 view .LVU458
 1509 0094 12F4005F 		tst	r2, #8192
 1510 0098 20D1     		bne	.L94
2376:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
 1511              		.loc 1 2376 9 is_stmt 1 view .LVU459
2376:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
 1512              		.loc 1 2376 13 is_stmt 0 view .LVU460
 1513 009a 1A68     		ldr	r2, [r3]
 1514              	.LVL104:
2376:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
 1515              		.loc 1 2376 12 view .LVU461
 1516 009c 12F0080F 		tst	r2, #8
 1517 00a0 1CD0     		beq	.L94
2380:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           {
 1518              		.loc 1 2380 11 is_stmt 1 view .LVU462
 1519              	.LVL105:
 1520              	.LBB368:
 1521              	.LBI368:
6844:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 1522              		.loc 2 6844 26 view .LVU463
 1523              	.LBB369:
6846:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 1524              		.loc 2 6846 3 view .LVU464
6846:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 1525              		.loc 2 6846 12 is_stmt 0 view .LVU465
 1526 00a2 9A68     		ldr	r2, [r3, #8]
6846:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 1527              		.loc 2 6846 74 view .LVU466
 1528 00a4 12F0040F 		tst	r2, #4
 1529 00a8 10D1     		bne	.L99
 1530              	.LVL106:
6846:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 1531              		.loc 2 6846 74 view .LVU467
 1532              	.LBE369:
 1533              	.LBE368:
2386:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 1534              		.loc 1 2386 13 is_stmt 1 view .LVU468
 1535 00aa 5A68     		ldr	r2, [r3, #4]
 1536 00ac 22F00C02 		bic	r2, r2, #12
 1537 00b0 5A60     		str	r2, [r3, #4]
2389:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 1538              		.loc 1 2389 13 view .LVU469
 1539 00b2 E36D     		ldr	r3, [r4, #92]
 1540 00b4 23F48073 		bic	r3, r3, #256
 1541 00b8 E365     		str	r3, [r4, #92]
2391:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             {
ARM GAS  /tmp/ccEuGJBQ.s 			page 221


 1542              		.loc 1 2391 13 view .LVU470
2391:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             {
 1543              		.loc 1 2391 22 is_stmt 0 view .LVU471
 1544 00ba E36D     		ldr	r3, [r4, #92]
2391:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             {
 1545              		.loc 1 2391 16 view .LVU472
 1546 00bc 13F4805F 		tst	r3, #4096
 1547 00c0 0CD1     		bne	.L94
2393:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             }
 1548              		.loc 1 2393 15 is_stmt 1 view .LVU473
 1549 00c2 E36D     		ldr	r3, [r4, #92]
 1550 00c4 43F00103 		orr	r3, r3, #1
 1551 00c8 E365     		str	r3, [r4, #92]
 1552 00ca 07E0     		b	.L94
 1553              	.LVL107:
 1554              	.L99:
2399:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 1555              		.loc 1 2399 13 view .LVU474
 1556 00cc E36D     		ldr	r3, [r4, #92]
 1557 00ce 43F01003 		orr	r3, r3, #16
 1558 00d2 E365     		str	r3, [r4, #92]
2402:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           }
 1559              		.loc 1 2402 13 view .LVU475
 1560 00d4 236E     		ldr	r3, [r4, #96]
 1561 00d6 43F00103 		orr	r3, r3, #1
 1562 00da 2366     		str	r3, [r4, #96]
 1563              	.L94:
2416:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 1564              		.loc 1 2416 5 view .LVU476
 1565 00dc 2046     		mov	r0, r4
 1566 00de FFF7FEFF 		bl	HAL_ADC_ConvCpltCallback
 1567              	.LVL108:
2424:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
 1568              		.loc 1 2424 5 view .LVU477
 1569 00e2 2368     		ldr	r3, [r4]
 1570 00e4 0C22     		movs	r2, #12
 1571 00e6 1A60     		str	r2, [r3]
 1572              	.L92:
2428:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       (((tmp_isr & ADC_FLAG_JEOS) == ADC_FLAG_JEOS) && ((tmp_ier & ADC_IT_JEOS) == ADC_IT_JEOS)))
 1573              		.loc 1 2428 3 view .LVU478
2428:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       (((tmp_isr & ADC_FLAG_JEOS) == ADC_FLAG_JEOS) && ((tmp_ier & ADC_IT_JEOS) == ADC_IT_JEOS)))
 1574              		.loc 1 2428 6 is_stmt 0 view .LVU479
 1575 00e8 17F0200F 		tst	r7, #32
 1576 00ec 02D0     		beq	.L101
2428:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       (((tmp_isr & ADC_FLAG_JEOS) == ADC_FLAG_JEOS) && ((tmp_ier & ADC_IT_JEOS) == ADC_IT_JEOS)))
 1577              		.loc 1 2428 53 discriminator 1 view .LVU480
 1578 00ee 15F0200F 		tst	r5, #32
 1579 00f2 05D1     		bne	.L102
 1580              	.L101:
2428:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       (((tmp_isr & ADC_FLAG_JEOS) == ADC_FLAG_JEOS) && ((tmp_ier & ADC_IT_JEOS) == ADC_IT_JEOS)))
 1581              		.loc 1 2428 98 discriminator 3 view .LVU481
 1582 00f4 17F0400F 		tst	r7, #64
 1583 00f8 5CD0     		beq	.L103
2429:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
 1584              		.loc 1 2429 53 view .LVU482
 1585 00fa 15F0400F 		tst	r5, #64
 1586 00fe 59D0     		beq	.L103
ARM GAS  /tmp/ccEuGJBQ.s 			page 222


 1587              	.L102:
2432:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 1588              		.loc 1 2432 5 is_stmt 1 view .LVU483
2432:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 1589              		.loc 1 2432 14 is_stmt 0 view .LVU484
 1590 0100 E36D     		ldr	r3, [r4, #92]
2432:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 1591              		.loc 1 2432 8 view .LVU485
 1592 0102 13F0100F 		tst	r3, #16
 1593 0106 03D1     		bne	.L104
2435:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
 1594              		.loc 1 2435 7 is_stmt 1 view .LVU486
 1595 0108 E36D     		ldr	r3, [r4, #92]
 1596 010a 43F40053 		orr	r3, r3, #8192
 1597 010e E365     		str	r3, [r4, #92]
 1598              	.L104:
2439:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     tmp_adc_reg_is_trigger_source_sw_start = LL_ADC_REG_IsTriggerSourceSWStart(hadc->Instance);
 1599              		.loc 1 2439 5 view .LVU487
2439:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     tmp_adc_reg_is_trigger_source_sw_start = LL_ADC_REG_IsTriggerSourceSWStart(hadc->Instance);
 1600              		.loc 1 2439 46 is_stmt 0 view .LVU488
 1601 0110 2368     		ldr	r3, [r4]
 1602              	.LVL109:
 1603              	.LBB370:
 1604              	.LBI370:
4535:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 1605              		.loc 2 4535 26 is_stmt 1 view .LVU489
 1606              	.LBB371:
4537:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 1607              		.loc 2 4537 3 view .LVU490
4537:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 1608              		.loc 2 4537 12 is_stmt 0 view .LVU491
 1609 0112 DA6C     		ldr	r2, [r3, #76]
4537:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 1610              		.loc 2 4537 105 view .LVU492
 1611 0114 12F4C07F 		tst	r2, #384
 1612 0118 12D1     		bne	.L124
 1613 011a 0121     		movs	r1, #1
 1614              	.L105:
 1615              	.LVL110:
4537:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 1616              		.loc 2 4537 105 view .LVU493
 1617              	.LBE371:
 1618              	.LBE370:
2440:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     /* Get relevant register CFGR in ADC instance of ADC master or slave  */
 1619              		.loc 1 2440 5 is_stmt 1 view .LVU494
 1620              	.LBB373:
 1621              	.LBI373:
3748:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 1622              		.loc 2 3748 26 view .LVU495
 1623              	.LBB374:
3750:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 1624              		.loc 2 3750 3 view .LVU496
3750:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 1625              		.loc 2 3750 12 is_stmt 0 view .LVU497
 1626 011c DA68     		ldr	r2, [r3, #12]
3750:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 1627              		.loc 2 3750 103 view .LVU498
ARM GAS  /tmp/ccEuGJBQ.s 			page 223


 1628 011e 12F4406F 		tst	r2, #3072
 1629 0122 0FD1     		bne	.L125
 1630 0124 0120     		movs	r0, #1
 1631              	.L106:
 1632              	.LVL111:
3750:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 1633              		.loc 2 3750 103 view .LVU499
 1634              	.LBE374:
 1635              	.LBE373:
2445:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 1636              		.loc 1 2445 5 is_stmt 1 view .LVU500
2445:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 1637              		.loc 1 2445 10 is_stmt 0 view .LVU501
 1638 0126 544A     		ldr	r2, .L134+4
 1639 0128 9342     		cmp	r3, r2
 1640 012a 0DD0     		beq	.L129
 1641 012c 1A46     		mov	r2, r3
 1642              	.L107:
2445:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 1643              		.loc 1 2445 8 discriminator 4 view .LVU502
 1644 012e 9342     		cmp	r3, r2
 1645 0130 0DD0     		beq	.L108
2446:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         || (tmp_multimode_config == LL_ADC_MULTI_DUAL_REG_SIMULT)
 1646              		.loc 1 2446 9 view .LVU503
 1647 0132 66B1     		cbz	r6, .L108
2447:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         || (tmp_multimode_config == LL_ADC_MULTI_DUAL_REG_INTERL)
 1648              		.loc 1 2447 9 view .LVU504
 1649 0134 062E     		cmp	r6, #6
 1650 0136 0AD0     		beq	.L108
2448:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****        )
 1651              		.loc 1 2448 9 view .LVU505
 1652 0138 072E     		cmp	r6, #7
 1653 013a 08D0     		beq	.L108
2455:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       tmp_cfgr = READ_REG(tmpADC_Master->CFGR);
 1654              		.loc 1 2455 7 is_stmt 1 discriminator 4 view .LVU506
 1655              	.LVL112:
2456:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
 1656              		.loc 1 2456 7 discriminator 4 view .LVU507
2456:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
 1657              		.loc 1 2456 16 is_stmt 0 discriminator 4 view .LVU508
 1658 013c D268     		ldr	r2, [r2, #12]
 1659              	.LVL113:
2456:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
 1660              		.loc 1 2456 16 discriminator 4 view .LVU509
 1661 013e 07E0     		b	.L110
 1662              	.LVL114:
 1663              	.L124:
 1664              	.LBB376:
 1665              	.LBB372:
4537:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 1666              		.loc 2 4537 105 view .LVU510
 1667 0140 0021     		movs	r1, #0
 1668 0142 EBE7     		b	.L105
 1669              	.LVL115:
 1670              	.L125:
4537:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 1671              		.loc 2 4537 105 view .LVU511
ARM GAS  /tmp/ccEuGJBQ.s 			page 224


 1672              	.LBE372:
 1673              	.LBE376:
 1674              	.LBB377:
 1675              	.LBB375:
3750:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 1676              		.loc 2 3750 103 view .LVU512
 1677 0144 0020     		movs	r0, #0
 1678 0146 EEE7     		b	.L106
 1679              	.LVL116:
 1680              	.L129:
3750:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 1681              		.loc 2 3750 103 view .LVU513
 1682              	.LBE375:
 1683              	.LBE377:
2445:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 1684              		.loc 1 2445 10 view .LVU514
 1685 0148 4FF0A042 		mov	r2, #1342177280
 1686 014c EFE7     		b	.L107
 1687              	.L108:
2451:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
 1688              		.loc 1 2451 7 is_stmt 1 view .LVU515
2451:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
 1689              		.loc 1 2451 16 is_stmt 0 view .LVU516
 1690 014e DA68     		ldr	r2, [r3, #12]
 1691              	.LVL117:
 1692              	.L110:
2467:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 1693              		.loc 1 2467 5 is_stmt 1 view .LVU517
2467:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 1694              		.loc 1 2467 8 is_stmt 0 view .LVU518
 1695 0150 51B3     		cbz	r1, .L111
2469:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           ((tmp_adc_reg_is_trigger_source_sw_start != 0UL) &&
 1696              		.loc 1 2469 7 is_stmt 1 view .LVU519
2469:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           ((tmp_adc_reg_is_trigger_source_sw_start != 0UL) &&
 1697              		.loc 1 2469 10 is_stmt 0 view .LVU520
 1698 0152 12F0007F 		tst	r2, #33554432
 1699 0156 03D0     		beq	.L112
2469:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           ((tmp_adc_reg_is_trigger_source_sw_start != 0UL) &&
 1700              		.loc 1 2469 55 discriminator 1 view .LVU521
 1701 0158 30B3     		cbz	r0, .L111
2470:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****            (READ_BIT(tmp_cfgr, ADC_CFGR_CONT) == 0UL)))
 1702              		.loc 1 2470 60 view .LVU522
 1703 015a 12F4005F 		tst	r2, #8192
 1704 015e 23D1     		bne	.L111
 1705              	.L112:
2474:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
 1706              		.loc 1 2474 9 is_stmt 1 view .LVU523
2474:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
 1707              		.loc 1 2474 13 is_stmt 0 view .LVU524
 1708 0160 1968     		ldr	r1, [r3]
 1709              	.LVL118:
2474:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
 1710              		.loc 1 2474 12 view .LVU525
 1711 0162 11F0400F 		tst	r1, #64
 1712 0166 1FD0     		beq	.L111
2482:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           {
 1713              		.loc 1 2482 11 is_stmt 1 view .LVU526
ARM GAS  /tmp/ccEuGJBQ.s 			page 225


2482:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           {
 1714              		.loc 1 2482 14 is_stmt 0 view .LVU527
 1715 0168 12F4001F 		tst	r2, #2097152
 1716 016c 1CD1     		bne	.L111
2486:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             {
 1717              		.loc 1 2486 13 is_stmt 1 view .LVU528
 1718              	.LVL119:
 1719              	.LBB378:
 1720              	.LBI378:
7069:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 1721              		.loc 2 7069 26 view .LVU529
 1722              	.LBB379:
 1723              		.loc 2 7071 3 view .LVU530
 1724              		.loc 2 7071 12 is_stmt 0 view .LVU531
 1725 016e 9A68     		ldr	r2, [r3, #8]
 1726              	.LVL120:
 1727              		.loc 2 7071 76 view .LVU532
 1728 0170 12F0080F 		tst	r2, #8
 1729 0174 10D1     		bne	.L113
 1730              	.LVL121:
 1731              		.loc 2 7071 76 view .LVU533
 1732              	.LBE379:
 1733              	.LBE378:
2489:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 1734              		.loc 1 2489 15 is_stmt 1 view .LVU534
 1735 0176 5A68     		ldr	r2, [r3, #4]
 1736 0178 22F06002 		bic	r2, r2, #96
 1737 017c 5A60     		str	r2, [r3, #4]
2492:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 1738              		.loc 1 2492 15 view .LVU535
 1739 017e E36D     		ldr	r3, [r4, #92]
 1740 0180 23F48053 		bic	r3, r3, #4096
 1741 0184 E365     		str	r3, [r4, #92]
2494:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****               {
 1742              		.loc 1 2494 15 view .LVU536
2494:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****               {
 1743              		.loc 1 2494 24 is_stmt 0 view .LVU537
 1744 0186 E36D     		ldr	r3, [r4, #92]
2494:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****               {
 1745              		.loc 1 2494 18 view .LVU538
 1746 0188 13F4807F 		tst	r3, #256
 1747 018c 0CD1     		bne	.L111
2496:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****               }
 1748              		.loc 1 2496 17 is_stmt 1 view .LVU539
 1749 018e E36D     		ldr	r3, [r4, #92]
 1750 0190 43F00103 		orr	r3, r3, #1
 1751 0194 E365     		str	r3, [r4, #92]
 1752 0196 07E0     		b	.L111
 1753              	.LVL122:
 1754              	.L113:
2502:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 1755              		.loc 1 2502 15 view .LVU540
 1756 0198 E36D     		ldr	r3, [r4, #92]
 1757 019a 43F01003 		orr	r3, r3, #16
 1758 019e E365     		str	r3, [r4, #92]
2505:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             }
 1759              		.loc 1 2505 15 view .LVU541
ARM GAS  /tmp/ccEuGJBQ.s 			page 226


 1760 01a0 236E     		ldr	r3, [r4, #96]
 1761 01a2 43F00103 		orr	r3, r3, #1
 1762 01a6 2366     		str	r3, [r4, #96]
 1763              	.L111:
2521:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 1764              		.loc 1 2521 5 view .LVU542
 1765 01a8 2046     		mov	r0, r4
 1766              	.LVL123:
2521:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 1767              		.loc 1 2521 5 is_stmt 0 view .LVU543
 1768 01aa FFF7FEFF 		bl	HAL_ADCEx_InjectedConvCpltCallback
 1769              	.LVL124:
2525:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
 1770              		.loc 1 2525 5 is_stmt 1 view .LVU544
 1771 01ae 2368     		ldr	r3, [r4]
 1772 01b0 6022     		movs	r2, #96
 1773 01b2 1A60     		str	r2, [r3]
 1774              	.L103:
2529:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
 1775              		.loc 1 2529 3 view .LVU545
2529:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
 1776              		.loc 1 2529 6 is_stmt 0 view .LVU546
 1777 01b4 17F0800F 		tst	r7, #128
 1778 01b8 02D0     		beq	.L115
2529:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
 1779              		.loc 1 2529 52 discriminator 1 view .LVU547
 1780 01ba 15F0800F 		tst	r5, #128
 1781 01be 2FD1     		bne	.L130
 1782              	.L115:
2546:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
 1783              		.loc 1 2546 3 is_stmt 1 view .LVU548
2546:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
 1784              		.loc 1 2546 6 is_stmt 0 view .LVU549
 1785 01c0 17F4807F 		tst	r7, #256
 1786 01c4 02D0     		beq	.L116
2546:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
 1787              		.loc 1 2546 52 discriminator 1 view .LVU550
 1788 01c6 15F4807F 		tst	r5, #256
 1789 01ca 34D1     		bne	.L131
 1790              	.L116:
2563:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
 1791              		.loc 1 2563 3 is_stmt 1 view .LVU551
2563:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
 1792              		.loc 1 2563 6 is_stmt 0 view .LVU552
 1793 01cc 17F4007F 		tst	r7, #512
 1794 01d0 02D0     		beq	.L117
2563:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
 1795              		.loc 1 2563 52 discriminator 1 view .LVU553
 1796 01d2 15F4007F 		tst	r5, #512
 1797 01d6 3AD1     		bne	.L132
 1798              	.L117:
2580:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
 1799              		.loc 1 2580 3 is_stmt 1 view .LVU554
2580:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
 1800              		.loc 1 2580 6 is_stmt 0 view .LVU555
 1801 01d8 17F0100F 		tst	r7, #16
 1802 01dc 19D0     		beq	.L118
ARM GAS  /tmp/ccEuGJBQ.s 			page 227


2580:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
 1803              		.loc 1 2580 50 discriminator 1 view .LVU556
 1804 01de 15F0100F 		tst	r5, #16
 1805 01e2 16D0     		beq	.L118
2588:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 1806              		.loc 1 2588 5 is_stmt 1 view .LVU557
2588:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 1807              		.loc 1 2588 19 is_stmt 0 view .LVU558
 1808 01e4 E36B     		ldr	r3, [r4, #60]
2588:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 1809              		.loc 1 2588 8 view .LVU559
 1810 01e6 33B1     		cbz	r3, .L119
2596:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 1811              		.loc 1 2596 7 is_stmt 1 view .LVU560
2596:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 1812              		.loc 1 2596 10 is_stmt 0 view .LVU561
 1813 01e8 002E     		cmp	r6, #0
 1814 01ea 3CD0     		beq	.L120
2600:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
 1815              		.loc 1 2600 9 is_stmt 1 view .LVU562
 1816              	.LVL125:
 1817              	.LBB380:
 1818              	.LBI380:
6482:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 1819              		.loc 2 6482 26 view .LVU563
 1820              	.LBB381:
6484:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 1821              		.loc 2 6484 3 view .LVU564
6484:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 1822              		.loc 2 6484 21 is_stmt 0 view .LVU565
 1823 01ec 214B     		ldr	r3, .L134
 1824 01ee 9B68     		ldr	r3, [r3, #8]
 1825              	.LVL126:
6484:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 1826              		.loc 2 6484 21 view .LVU566
 1827              	.LBE381:
 1828              	.LBE380:
2600:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
 1829              		.loc 1 2600 12 view .LVU567
 1830 01f0 13F4604F 		tst	r3, #57344
 1831 01f4 0AD0     		beq	.L121
 1832              	.L119:
 1833              	.LVL127:
2619:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 1834              		.loc 1 2619 7 is_stmt 1 view .LVU568
 1835 01f6 E36D     		ldr	r3, [r4, #92]
 1836 01f8 43F48063 		orr	r3, r3, #1024
 1837 01fc E365     		str	r3, [r4, #92]
2622:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 1838              		.loc 1 2622 7 view .LVU569
 1839 01fe 236E     		ldr	r3, [r4, #96]
 1840 0200 43F00203 		orr	r3, r3, #2
 1841 0204 2366     		str	r3, [r4, #96]
2632:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 1842              		.loc 1 2632 7 view .LVU570
 1843 0206 2046     		mov	r0, r4
 1844 0208 FFF7FEFF 		bl	HAL_ADC_ErrorCallback
ARM GAS  /tmp/ccEuGJBQ.s 			page 228


 1845              	.LVL128:
 1846              	.L121:
2637:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
 1847              		.loc 1 2637 5 view .LVU571
 1848 020c 2368     		ldr	r3, [r4]
 1849 020e 1022     		movs	r2, #16
 1850 0210 1A60     		str	r2, [r3]
 1851              	.L118:
2641:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
 1852              		.loc 1 2641 3 view .LVU572
2641:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
 1853              		.loc 1 2641 6 is_stmt 0 view .LVU573
 1854 0212 17F4806F 		tst	r7, #1024
 1855 0216 02D0     		beq	.L87
2641:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
 1856              		.loc 1 2641 54 discriminator 1 view .LVU574
 1857 0218 15F4806F 		tst	r5, #1024
 1858 021c 2ED1     		bne	.L133
 1859              	.L87:
2660:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 1860              		.loc 1 2660 1 view .LVU575
 1861 021e F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1862              	.LVL129:
 1863              	.L130:
2532:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 1864              		.loc 1 2532 5 is_stmt 1 view .LVU576
 1865 0220 E36D     		ldr	r3, [r4, #92]
 1866 0222 43F48033 		orr	r3, r3, #65536
 1867 0226 E365     		str	r3, [r4, #92]
2538:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 1868              		.loc 1 2538 5 view .LVU577
 1869 0228 2046     		mov	r0, r4
 1870 022a FFF7FEFF 		bl	HAL_ADC_LevelOutOfWindowCallback
 1871              	.LVL130:
2542:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
 1872              		.loc 1 2542 5 view .LVU578
 1873 022e 2368     		ldr	r3, [r4]
 1874 0230 8022     		movs	r2, #128
 1875 0232 1A60     		str	r2, [r3]
 1876 0234 C4E7     		b	.L115
 1877              	.L131:
2549:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 1878              		.loc 1 2549 5 view .LVU579
 1879 0236 E36D     		ldr	r3, [r4, #92]
 1880 0238 43F40033 		orr	r3, r3, #131072
 1881 023c E365     		str	r3, [r4, #92]
2555:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 1882              		.loc 1 2555 5 view .LVU580
 1883 023e 2046     		mov	r0, r4
 1884 0240 FFF7FEFF 		bl	HAL_ADCEx_LevelOutOfWindow2Callback
 1885              	.LVL131:
2559:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
 1886              		.loc 1 2559 5 view .LVU581
 1887 0244 2368     		ldr	r3, [r4]
 1888 0246 4FF48072 		mov	r2, #256
 1889 024a 1A60     		str	r2, [r3]
 1890 024c BEE7     		b	.L116
ARM GAS  /tmp/ccEuGJBQ.s 			page 229


 1891              	.L132:
2566:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 1892              		.loc 1 2566 5 view .LVU582
 1893 024e E36D     		ldr	r3, [r4, #92]
 1894 0250 43F48023 		orr	r3, r3, #262144
 1895 0254 E365     		str	r3, [r4, #92]
2572:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 1896              		.loc 1 2572 5 view .LVU583
 1897 0256 2046     		mov	r0, r4
 1898 0258 FFF7FEFF 		bl	HAL_ADCEx_LevelOutOfWindow3Callback
 1899              	.LVL132:
2576:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
 1900              		.loc 1 2576 5 view .LVU584
 1901 025c 2368     		ldr	r3, [r4]
 1902 025e 4FF40072 		mov	r2, #512
 1903 0262 1A60     		str	r2, [r3]
 1904 0264 B8E7     		b	.L117
 1905              	.L120:
2609:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
 1906              		.loc 1 2609 9 view .LVU585
2609:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
 1907              		.loc 1 2609 18 is_stmt 0 view .LVU586
 1908 0266 2368     		ldr	r3, [r4]
2609:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
 1909              		.loc 1 2609 28 view .LVU587
 1910 0268 DB68     		ldr	r3, [r3, #12]
2609:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
 1911              		.loc 1 2609 12 view .LVU588
 1912 026a 13F0010F 		tst	r3, #1
 1913 026e CDD0     		beq	.L121
 1914 0270 C1E7     		b	.L119
 1915              	.L135:
 1916 0272 00BF     		.align	2
 1917              	.L134:
 1918 0274 00030050 		.word	1342178048
 1919 0278 00010050 		.word	1342177536
 1920              	.LVL133:
 1921              	.L133:
2644:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 1922              		.loc 1 2644 5 is_stmt 1 view .LVU589
 1923 027c E36D     		ldr	r3, [r4, #92]
 1924 027e 43F48043 		orr	r3, r3, #16384
 1925 0282 E365     		str	r3, [r4, #92]
2647:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 1926              		.loc 1 2647 5 view .LVU590
 1927 0284 236E     		ldr	r3, [r4, #96]
 1928 0286 43F00803 		orr	r3, r3, #8
 1929 028a 2366     		str	r3, [r4, #96]
2650:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 1930              		.loc 1 2650 5 view .LVU591
 1931 028c 2368     		ldr	r3, [r4]
 1932 028e 4FF48062 		mov	r2, #1024
 1933 0292 1A60     		str	r2, [r3]
2656:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 1934              		.loc 1 2656 5 view .LVU592
 1935 0294 2046     		mov	r0, r4
 1936 0296 FFF7FEFF 		bl	HAL_ADCEx_InjectedQueueOverflowCallback
ARM GAS  /tmp/ccEuGJBQ.s 			page 230


 1937              	.LVL134:
2660:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 1938              		.loc 1 2660 1 is_stmt 0 view .LVU593
 1939 029a C0E7     		b	.L87
 1940              		.cfi_endproc
 1941              	.LFE344:
 1943              		.section	.text.ADC_DMAConvCplt,"ax",%progbits
 1944              		.align	1
 1945              		.global	ADC_DMAConvCplt
 1946              		.syntax unified
 1947              		.thumb
 1948              		.thumb_func
 1950              	ADC_DMAConvCplt:
 1951              	.LVL135:
 1952              	.LFB356:
3564:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Retrieve ADC handle corresponding to current DMA handle */
 1953              		.loc 1 3564 1 is_stmt 1 view -0
 1954              		.cfi_startproc
 1955              		@ args = 0, pretend = 0, frame = 0
 1956              		@ frame_needed = 0, uses_anonymous_args = 0
3564:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Retrieve ADC handle corresponding to current DMA handle */
 1957              		.loc 1 3564 1 is_stmt 0 view .LVU595
 1958 0000 08B5     		push	{r3, lr}
 1959              	.LCFI8:
 1960              		.cfi_def_cfa_offset 8
 1961              		.cfi_offset 3, -8
 1962              		.cfi_offset 14, -4
 1963 0002 0346     		mov	r3, r0
3566:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 1964              		.loc 1 3566 3 is_stmt 1 view .LVU596
3566:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 1965              		.loc 1 3566 22 is_stmt 0 view .LVU597
 1966 0004 806A     		ldr	r0, [r0, #40]
 1967              	.LVL136:
3569:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
 1968              		.loc 1 3569 3 is_stmt 1 view .LVU598
3569:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
 1969              		.loc 1 3569 12 is_stmt 0 view .LVU599
 1970 0006 C26D     		ldr	r2, [r0, #92]
3569:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
 1971              		.loc 1 3569 6 view .LVU600
 1972 0008 12F0500F 		tst	r2, #80
 1973 000c 30D1     		bne	.L137
3572:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 1974              		.loc 1 3572 5 is_stmt 1 view .LVU601
 1975 000e C36D     		ldr	r3, [r0, #92]
 1976              	.LVL137:
3572:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 1977              		.loc 1 3572 5 is_stmt 0 view .LVU602
 1978 0010 43F40073 		orr	r3, r3, #512
 1979 0014 C365     		str	r3, [r0, #92]
3578:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 1980              		.loc 1 3578 5 is_stmt 1 view .LVU603
3578:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 1981              		.loc 1 3578 14 is_stmt 0 view .LVU604
 1982 0016 0368     		ldr	r3, [r0]
3578:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
ARM GAS  /tmp/ccEuGJBQ.s 			page 231


 1983              		.loc 1 3578 24 view .LVU605
 1984 0018 1A68     		ldr	r2, [r3]
3578:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 1985              		.loc 1 3578 8 view .LVU606
 1986 001a 12F0080F 		tst	r2, #8
 1987 001e 14D0     		beq	.L138
3581:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 1988              		.loc 1 3581 7 is_stmt 1 view .LVU607
 1989              	.LVL138:
 1990              	.LBB382:
 1991              	.LBI382:
3748:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 1992              		.loc 2 3748 26 view .LVU608
 1993              	.LBB383:
3750:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 1994              		.loc 2 3750 3 view .LVU609
3750:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 1995              		.loc 2 3750 12 is_stmt 0 view .LVU610
 1996 0020 DA68     		ldr	r2, [r3, #12]
3750:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 1997              		.loc 2 3750 103 view .LVU611
 1998 0022 12F4406F 		tst	r2, #3072
 1999 0026 20D1     		bne	.L139
 2000              	.LVL139:
3750:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 2001              		.loc 2 3750 103 view .LVU612
 2002              	.LBE383:
 2003              	.LBE382:
3584:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
 2004              		.loc 1 3584 9 is_stmt 1 view .LVU613
3584:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
 2005              		.loc 1 3584 13 is_stmt 0 view .LVU614
 2006 0028 DB68     		ldr	r3, [r3, #12]
3584:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
 2007              		.loc 1 3584 12 view .LVU615
 2008 002a 13F4005F 		tst	r3, #8192
 2009 002e 1CD1     		bne	.L139
3587:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           if ((hadc->State & HAL_ADC_STATE_INJ_BUSY) == 0UL)
 2010              		.loc 1 3587 11 is_stmt 1 view .LVU616
 2011 0030 C36D     		ldr	r3, [r0, #92]
 2012 0032 23F48073 		bic	r3, r3, #256
 2013 0036 C365     		str	r3, [r0, #92]
3588:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           {
 2014              		.loc 1 3588 11 view .LVU617
3588:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           {
 2015              		.loc 1 3588 20 is_stmt 0 view .LVU618
 2016 0038 C36D     		ldr	r3, [r0, #92]
3588:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           {
 2017              		.loc 1 3588 14 view .LVU619
 2018 003a 13F4805F 		tst	r3, #4096
 2019 003e 14D1     		bne	.L139
3590:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           }
 2020              		.loc 1 3590 13 is_stmt 1 view .LVU620
 2021 0040 C36D     		ldr	r3, [r0, #92]
 2022 0042 43F00103 		orr	r3, r3, #1
 2023 0046 C365     		str	r3, [r0, #92]
 2024 0048 0FE0     		b	.L139
ARM GAS  /tmp/ccEuGJBQ.s 			page 232


 2025              	.L138:
3599:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 2026              		.loc 1 3599 7 view .LVU621
3599:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 2027              		.loc 1 3599 11 is_stmt 0 view .LVU622
 2028 004a DB68     		ldr	r3, [r3, #12]
3599:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 2029              		.loc 1 3599 10 view .LVU623
 2030 004c 13F0020F 		tst	r3, #2
 2031 0050 0BD1     		bne	.L139
3602:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         if ((hadc->State & HAL_ADC_STATE_INJ_BUSY) == 0UL)
 2032              		.loc 1 3602 9 is_stmt 1 view .LVU624
 2033 0052 C36D     		ldr	r3, [r0, #92]
 2034 0054 23F48073 		bic	r3, r3, #256
 2035 0058 C365     		str	r3, [r0, #92]
3603:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
 2036              		.loc 1 3603 9 view .LVU625
3603:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
 2037              		.loc 1 3603 18 is_stmt 0 view .LVU626
 2038 005a C36D     		ldr	r3, [r0, #92]
3603:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
 2039              		.loc 1 3603 12 view .LVU627
 2040 005c 13F4805F 		tst	r3, #4096
 2041 0060 03D1     		bne	.L139
3605:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         }
 2042              		.loc 1 3605 11 is_stmt 1 view .LVU628
 2043 0062 C36D     		ldr	r3, [r0, #92]
 2044 0064 43F00103 		orr	r3, r3, #1
 2045 0068 C365     		str	r3, [r0, #92]
 2046              	.L139:
3614:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 2047              		.loc 1 3614 5 view .LVU629
 2048 006a FFF7FEFF 		bl	HAL_ADC_ConvCpltCallback
 2049              	.LVL140:
 2050              	.L136:
3634:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 2051              		.loc 1 3634 1 is_stmt 0 view .LVU630
 2052 006e 08BD     		pop	{r3, pc}
 2053              	.LVL141:
 2054              	.L137:
3619:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 2055              		.loc 1 3619 5 is_stmt 1 view .LVU631
3619:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 2056              		.loc 1 3619 14 is_stmt 0 view .LVU632
 2057 0070 C26D     		ldr	r2, [r0, #92]
3619:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 2058              		.loc 1 3619 8 view .LVU633
 2059 0072 12F0100F 		tst	r2, #16
 2060 0076 04D1     		bne	.L143
3631:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
 2061              		.loc 1 3631 7 is_stmt 1 view .LVU634
3631:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
 2062              		.loc 1 3631 11 is_stmt 0 view .LVU635
 2063 0078 426D     		ldr	r2, [r0, #84]
3631:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
 2064              		.loc 1 3631 23 view .LVU636
 2065 007a 526B     		ldr	r2, [r2, #52]
ARM GAS  /tmp/ccEuGJBQ.s 			page 233


3631:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
 2066              		.loc 1 3631 7 view .LVU637
 2067 007c 1846     		mov	r0, r3
 2068              	.LVL142:
3631:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
 2069              		.loc 1 3631 7 view .LVU638
 2070 007e 9047     		blx	r2
 2071              	.LVL143:
3634:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 2072              		.loc 1 3634 1 view .LVU639
 2073 0080 F5E7     		b	.L136
 2074              	.LVL144:
 2075              	.L143:
3625:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 2076              		.loc 1 3625 7 is_stmt 1 view .LVU640
 2077 0082 FFF7FEFF 		bl	HAL_ADC_ErrorCallback
 2078              	.LVL145:
3625:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 2079              		.loc 1 3625 7 is_stmt 0 view .LVU641
 2080 0086 F2E7     		b	.L136
 2081              		.cfi_endproc
 2082              	.LFE356:
 2084              		.section	.text.ADC_DMAError,"ax",%progbits
 2085              		.align	1
 2086              		.global	ADC_DMAError
 2087              		.syntax unified
 2088              		.thumb
 2089              		.thumb_func
 2091              	ADC_DMAError:
 2092              	.LVL146:
 2093              	.LFB358:
3653:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3654:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** /**
3655:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @brief  DMA error callback.
3656:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @param hdma pointer to DMA handle.
3657:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   * @retval None
3658:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   */
3659:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** void ADC_DMAError(DMA_HandleTypeDef *hdma)
3660:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** {
 2094              		.loc 1 3660 1 is_stmt 1 view -0
 2095              		.cfi_startproc
 2096              		@ args = 0, pretend = 0, frame = 0
 2097              		@ frame_needed = 0, uses_anonymous_args = 0
 2098              		.loc 1 3660 1 is_stmt 0 view .LVU643
 2099 0000 08B5     		push	{r3, lr}
 2100              	.LCFI9:
 2101              		.cfi_def_cfa_offset 8
 2102              		.cfi_offset 3, -8
 2103              		.cfi_offset 14, -4
3661:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Retrieve ADC handle corresponding to current DMA handle */
3662:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   ADC_HandleTypeDef *hadc = (ADC_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 2104              		.loc 1 3662 3 is_stmt 1 view .LVU644
 2105              		.loc 1 3662 22 is_stmt 0 view .LVU645
 2106 0002 806A     		ldr	r0, [r0, #40]
 2107              	.LVL147:
3663:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3664:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Set ADC state */
ARM GAS  /tmp/ccEuGJBQ.s 			page 234


3665:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_DMA);
 2108              		.loc 1 3665 3 is_stmt 1 view .LVU646
 2109 0004 C36D     		ldr	r3, [r0, #92]
 2110 0006 43F04003 		orr	r3, r3, #64
 2111 000a C365     		str	r3, [r0, #92]
3666:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3667:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Set ADC error code to DMA error */
3668:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_DMA);
 2112              		.loc 1 3668 3 view .LVU647
 2113 000c 036E     		ldr	r3, [r0, #96]
 2114 000e 43F00403 		orr	r3, r3, #4
 2115 0012 0366     		str	r3, [r0, #96]
3669:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
3670:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Error callback */
3671:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
3672:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   hadc->ErrorCallback(hadc);
3673:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #else
3674:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   HAL_ADC_ErrorCallback(hadc);
 2116              		.loc 1 3674 3 view .LVU648
 2117 0014 FFF7FEFF 		bl	HAL_ADC_ErrorCallback
 2118              	.LVL148:
3675:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
3676:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** }
 2119              		.loc 1 3676 1 is_stmt 0 view .LVU649
 2120 0018 08BD     		pop	{r3, pc}
 2121              		.cfi_endproc
 2122              	.LFE358:
 2124              		.section	.text.HAL_ADC_ConfigChannel,"ax",%progbits
 2125              		.align	1
 2126              		.global	HAL_ADC_ConfigChannel
 2127              		.syntax unified
 2128              		.thumb
 2129              		.thumb_func
 2131              	HAL_ADC_ConfigChannel:
 2132              	.LVL149:
 2133              	.LFB349:
2766:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 2134              		.loc 1 2766 1 is_stmt 1 view -0
 2135              		.cfi_startproc
 2136              		@ args = 0, pretend = 0, frame = 8
 2137              		@ frame_needed = 0, uses_anonymous_args = 0
2766:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 2138              		.loc 1 2766 1 is_stmt 0 view .LVU651
 2139 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 2140              	.LCFI10:
 2141              		.cfi_def_cfa_offset 20
 2142              		.cfi_offset 4, -20
 2143              		.cfi_offset 5, -16
 2144              		.cfi_offset 6, -12
 2145              		.cfi_offset 7, -8
 2146              		.cfi_offset 14, -4
 2147 0002 83B0     		sub	sp, sp, #12
 2148              	.LCFI11:
 2149              		.cfi_def_cfa_offset 32
2767:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t tmpOffsetShifted;
 2150              		.loc 1 2767 3 is_stmt 1 view .LVU652
 2151              	.LVL150:
ARM GAS  /tmp/ccEuGJBQ.s 			page 235


2768:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t tmp_config_internal_channel;
 2152              		.loc 1 2768 3 view .LVU653
2769:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   __IO uint32_t wait_loop_index = 0UL;
 2153              		.loc 1 2769 3 view .LVU654
2770:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t tmp_adc_is_conversion_on_going_regular;
 2154              		.loc 1 2770 3 view .LVU655
2770:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t tmp_adc_is_conversion_on_going_regular;
 2155              		.loc 1 2770 17 is_stmt 0 view .LVU656
 2156 0004 0022     		movs	r2, #0
 2157 0006 0192     		str	r2, [sp, #4]
2771:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t tmp_adc_is_conversion_on_going_injected;
 2158              		.loc 1 2771 3 is_stmt 1 view .LVU657
2772:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 2159              		.loc 1 2772 3 view .LVU658
2775:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   assert_param(IS_ADC_REGULAR_RANK(sConfig->Rank));
 2160              		.loc 1 2775 3 view .LVU659
2776:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   assert_param(IS_ADC_SAMPLE_TIME(sConfig->SamplingTime));
 2161              		.loc 1 2776 3 view .LVU660
2777:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   assert_param(IS_ADC_SINGLE_DIFFERENTIAL(sConfig->SingleDiff));
 2162              		.loc 1 2777 3 view .LVU661
2778:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   assert_param(IS_ADC_OFFSET_NUMBER(sConfig->OffsetNumber));
 2163              		.loc 1 2778 3 view .LVU662
2779:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   assert_param(IS_ADC_RANGE(ADC_GET_RESOLUTION(hadc), sConfig->Offset));
 2164              		.loc 1 2779 3 view .LVU663
2780:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 2165              		.loc 1 2780 3 view .LVU664
2784:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 2166              		.loc 1 2784 3 view .LVU665
2787:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
 2167              		.loc 1 2787 3 view .LVU666
2793:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
 2168              		.loc 1 2793 5 view .LVU667
2797:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 2169              		.loc 1 2797 3 view .LVU668
2797:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 2170              		.loc 1 2797 3 view .LVU669
 2171 0008 90F85820 		ldrb	r2, [r0, #88]	@ zero_extendqisi2
 2172 000c 012A     		cmp	r2, #1
 2173 000e 00F05A82 		beq	.L201
 2174 0012 0346     		mov	r3, r0
2797:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 2175              		.loc 1 2797 3 discriminator 2 view .LVU670
 2176 0014 0122     		movs	r2, #1
 2177 0016 80F85820 		strb	r2, [r0, #88]
2797:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 2178              		.loc 1 2797 3 discriminator 2 view .LVU671
2804:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
 2179              		.loc 1 2804 3 discriminator 2 view .LVU672
2804:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
 2180              		.loc 1 2804 7 is_stmt 0 discriminator 2 view .LVU673
 2181 001a 0568     		ldr	r5, [r0]
 2182              	.LVL151:
 2183              	.LBB488:
 2184              	.LBI488:
6844:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 2185              		.loc 2 6844 26 is_stmt 1 discriminator 2 view .LVU674
 2186              	.LBB489:
ARM GAS  /tmp/ccEuGJBQ.s 			page 236


6846:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 2187              		.loc 2 6846 3 discriminator 2 view .LVU675
6846:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 2188              		.loc 2 6846 12 is_stmt 0 discriminator 2 view .LVU676
 2189 001c A868     		ldr	r0, [r5, #8]
 2190              	.LVL152:
6846:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 2191              		.loc 2 6846 74 discriminator 2 view .LVU677
 2192 001e 10F0040F 		tst	r0, #4
 2193 0022 09D0     		beq	.L148
 2194              	.LVL153:
6846:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 2195              		.loc 2 6846 74 discriminator 2 view .LVU678
 2196              	.LBE489:
 2197              	.LBE488:
2964:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 2198              		.loc 1 2964 5 is_stmt 1 view .LVU679
 2199 0024 DA6D     		ldr	r2, [r3, #92]
 2200 0026 42F02002 		orr	r2, r2, #32
 2201 002a DA65     		str	r2, [r3, #92]
2966:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
 2202              		.loc 1 2966 5 view .LVU680
 2203              	.LVL154:
2966:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
 2204              		.loc 1 2966 20 is_stmt 0 view .LVU681
 2205 002c 0120     		movs	r0, #1
 2206              	.LVL155:
 2207              	.L149:
2970:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 2208              		.loc 1 2970 3 is_stmt 1 view .LVU682
2970:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 2209              		.loc 1 2970 3 view .LVU683
 2210 002e 0022     		movs	r2, #0
 2211 0030 83F85820 		strb	r2, [r3, #88]
2970:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 2212              		.loc 1 2970 3 view .LVU684
2973:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** }
 2213              		.loc 1 2973 3 view .LVU685
 2214              	.LVL156:
 2215              	.L147:
2974:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 2216              		.loc 1 2974 1 is_stmt 0 view .LVU686
 2217 0034 03B0     		add	sp, sp, #12
 2218              	.LCFI12:
 2219              		.cfi_remember_state
 2220              		.cfi_def_cfa_offset 20
 2221              		@ sp needed
 2222 0036 F0BD     		pop	{r4, r5, r6, r7, pc}
 2223              	.LVL157:
 2224              	.L148:
 2225              	.LCFI13:
 2226              		.cfi_restore_state
2807:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 2227              		.loc 1 2807 5 is_stmt 1 view .LVU687
 2228 0038 4C68     		ldr	r4, [r1, #4]
 2229              	.LVL158:
 2230              	.LBB490:
ARM GAS  /tmp/ccEuGJBQ.s 			page 237


 2231              	.LBI490:
4092:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 2232              		.loc 2 4092 22 view .LVU688
 2233              	.LBB491:
4098:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 2234              		.loc 2 4098 3 view .LVU689
4098:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 2235              		.loc 2 4098 25 is_stmt 0 view .LVU690
 2236 003a 3035     		adds	r5, r5, #48
 2237              	.LVL159:
4098:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 2238              		.loc 2 4098 25 view .LVU691
 2239 003c 220A     		lsrs	r2, r4, #8
 2240 003e 9200     		lsls	r2, r2, #2
 2241 0040 02F00C02 		and	r2, r2, #12
 2242              	.LVL160:
4100:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_CHANNEL_ID_NUMBER_MASK_POSBIT0 << (Rank & ADC_REG_RANK_ID_SQRX_MASK),
 2243              		.loc 2 4100 3 is_stmt 1 view .LVU692
 2244 0044 A858     		ldr	r0, [r5, r2]
 2245 0046 04F01F0E 		and	lr, r4, #31
 2246 004a 1F24     		movs	r4, #31
 2247              	.LVL161:
4100:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_CHANNEL_ID_NUMBER_MASK_POSBIT0 << (Rank & ADC_REG_RANK_ID_SQRX_MASK),
 2248              		.loc 2 4100 3 is_stmt 0 view .LVU693
 2249 004c 04FA0EF4 		lsl	r4, r4, lr
 2250 0050 20EA0400 		bic	r0, r0, r4
 2251 0054 0C68     		ldr	r4, [r1]
 2252 0056 C4F3846C 		ubfx	ip, r4, #26, #5
 2253 005a 0CFA0EFC 		lsl	ip, ip, lr
 2254 005e 40EA0C00 		orr	r0, r0, ip
 2255 0062 A850     		str	r0, [r5, r2]
 2256              	.LVL162:
4100:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_CHANNEL_ID_NUMBER_MASK_POSBIT0 << (Rank & ADC_REG_RANK_ID_SQRX_MASK),
 2257              		.loc 2 4100 3 view .LVU694
 2258              	.LBE491:
 2259              	.LBE490:
2814:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     tmp_adc_is_conversion_on_going_injected = LL_ADC_INJ_IsConversionOngoing(hadc->Instance);
 2260              		.loc 1 2814 5 is_stmt 1 view .LVU695
2814:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     tmp_adc_is_conversion_on_going_injected = LL_ADC_INJ_IsConversionOngoing(hadc->Instance);
 2261              		.loc 1 2814 46 is_stmt 0 view .LVU696
 2262 0064 1868     		ldr	r0, [r3]
 2263              	.LVL163:
 2264              	.LBB492:
 2265              	.LBI492:
6844:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 2266              		.loc 2 6844 26 is_stmt 1 view .LVU697
 2267              	.LBB493:
6846:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 2268              		.loc 2 6846 3 view .LVU698
6846:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 2269              		.loc 2 6846 12 is_stmt 0 view .LVU699
 2270 0066 8268     		ldr	r2, [r0, #8]
6846:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 2271              		.loc 2 6846 74 view .LVU700
 2272 0068 12F00402 		ands	r2, r2, #4
 2273 006c 00D0     		beq	.L150
 2274 006e 0122     		movs	r2, #1
ARM GAS  /tmp/ccEuGJBQ.s 			page 238


 2275              	.L150:
 2276              	.LVL164:
6846:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 2277              		.loc 2 6846 74 view .LVU701
 2278              	.LBE493:
 2279              	.LBE492:
2815:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     if ((tmp_adc_is_conversion_on_going_regular == 0UL)
 2280              		.loc 1 2815 5 is_stmt 1 view .LVU702
 2281              	.LBB494:
 2282              	.LBI494:
7069:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 2283              		.loc 2 7069 26 view .LVU703
 2284              	.LBB495:
 2285              		.loc 2 7071 3 view .LVU704
 2286              		.loc 2 7071 12 is_stmt 0 view .LVU705
 2287 0070 8468     		ldr	r4, [r0, #8]
 2288              		.loc 2 7071 76 view .LVU706
 2289 0072 14F00804 		ands	r4, r4, #8
 2290 0076 00D0     		beq	.L151
 2291 0078 0124     		movs	r4, #1
 2292              	.L151:
 2293              	.LVL165:
 2294              		.loc 2 7071 76 view .LVU707
 2295              	.LBE495:
 2296              	.LBE494:
2816:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         && (tmp_adc_is_conversion_on_going_injected == 0UL)
 2297              		.loc 1 2816 5 is_stmt 1 view .LVU708
2816:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         && (tmp_adc_is_conversion_on_going_injected == 0UL)
 2298              		.loc 1 2816 8 is_stmt 0 view .LVU709
 2299 007a 002A     		cmp	r2, #0
 2300 007c 4DD1     		bne	.L152
2817:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****        )
 2301              		.loc 1 2817 9 view .LVU710
 2302 007e 002C     		cmp	r4, #0
 2303 0080 4BD1     		bne	.L152
2821:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 2304              		.loc 1 2821 7 is_stmt 1 view .LVU711
2821:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 2305              		.loc 1 2821 18 is_stmt 0 view .LVU712
 2306 0082 8D68     		ldr	r5, [r1, #8]
2821:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 2307              		.loc 1 2821 10 view .LVU713
 2308 0084 B5F1004F 		cmp	r5, #-2147483648
 2309 0088 7FD0     		beq	.L220
2832:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 2310              		.loc 1 2832 9 is_stmt 1 view .LVU714
 2311 008a 0F68     		ldr	r7, [r1]
 2312              	.LVL166:
 2313              	.LBB496:
 2314              	.LBI496:
5331:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 2315              		.loc 2 5331 22 view .LVU715
 2316              	.LBB497:
5337:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 2317              		.loc 2 5337 3 view .LVU716
5337:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 2318              		.loc 2 5337 25 is_stmt 0 view .LVU717
ARM GAS  /tmp/ccEuGJBQ.s 			page 239


 2319 008c 1430     		adds	r0, r0, #20
 2320              	.LVL167:
5337:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 2321              		.loc 2 5337 25 view .LVU718
 2322 008e 7A0E     		lsrs	r2, r7, #25
 2323              	.LVL168:
5337:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 2324              		.loc 2 5337 25 view .LVU719
 2325 0090 9200     		lsls	r2, r2, #2
 2326 0092 02F00402 		and	r2, r2, #4
 2327              	.LVL169:
5339:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_SMPR1_SMP0 << ((Channel & ADC_CHANNEL_SMPx_BITOFFSET_MASK) >> ADC_CHANNEL_SMPx_BIT
 2328              		.loc 2 5339 3 is_stmt 1 view .LVU720
 2329 0096 8658     		ldr	r6, [r0, r2]
 2330 0098 C7F3045E 		ubfx	lr, r7, #20, #5
 2331 009c 0727     		movs	r7, #7
 2332              	.LVL170:
5339:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_SMPR1_SMP0 << ((Channel & ADC_CHANNEL_SMPx_BITOFFSET_MASK) >> ADC_CHANNEL_SMPx_BIT
 2333              		.loc 2 5339 3 is_stmt 0 view .LVU721
 2334 009e 07FA0EF7 		lsl	r7, r7, lr
 2335 00a2 26EA070C 		bic	ip, r6, r7
 2336 00a6 05FA0EF5 		lsl	r5, r5, lr
 2337              	.LVL171:
5339:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_SMPR1_SMP0 << ((Channel & ADC_CHANNEL_SMPx_BITOFFSET_MASK) >> ADC_CHANNEL_SMPx_BIT
 2338              		.loc 2 5339 3 view .LVU722
 2339 00aa 4CEA0505 		orr	r5, ip, r5
 2340 00ae 8550     		str	r5, [r0, r2]
 2341              	.LVL172:
5339:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_SMPR1_SMP0 << ((Channel & ADC_CHANNEL_SMPx_BITOFFSET_MASK) >> ADC_CHANNEL_SMPx_BIT
 2342              		.loc 2 5339 3 view .LVU723
 2343              	.LBE497:
 2344              	.LBE496:
2835:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
 2345              		.loc 1 2835 9 is_stmt 1 view .LVU724
 2346 00b0 1868     		ldr	r0, [r3]
 2347              	.LVL173:
 2348              	.LBB498:
 2349              	.LBI498:
3561:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 2350              		.loc 2 3561 22 view .LVU725
 2351              	.LBB499:
3563:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 2352              		.loc 2 3563 3 view .LVU726
 2353 00b2 4269     		ldr	r2, [r0, #20]
 2354 00b4 22F00042 		bic	r2, r2, #-2147483648
 2355 00b8 4261     		str	r2, [r0, #20]
 2356              	.LVL174:
 2357              	.L154:
3563:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 2358              		.loc 2 3563 3 is_stmt 0 view .LVU727
 2359              	.LBE499:
 2360              	.LBE498:
2842:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 2361              		.loc 1 2842 7 is_stmt 1 view .LVU728
2842:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 2362              		.loc 1 2842 26 is_stmt 0 view .LVU729
 2363 00ba 4D69     		ldr	r5, [r1, #20]
ARM GAS  /tmp/ccEuGJBQ.s 			page 240


 2364 00bc 1868     		ldr	r0, [r3]
 2365 00be C268     		ldr	r2, [r0, #12]
 2366 00c0 C2F3C102 		ubfx	r2, r2, #3, #2
 2367 00c4 5200     		lsls	r2, r2, #1
2842:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 2368              		.loc 1 2842 24 view .LVU730
 2369 00c6 9540     		lsls	r5, r5, r2
 2370              	.LVL175:
2844:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 2371              		.loc 1 2844 7 is_stmt 1 view .LVU731
2844:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 2372              		.loc 1 2844 18 is_stmt 0 view .LVU732
 2373 00c8 0E69     		ldr	r6, [r1, #16]
2844:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 2374              		.loc 1 2844 10 view .LVU733
 2375 00ca 042E     		cmp	r6, #4
 2376 00cc 75D0     		beq	.L155
2847:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 2377              		.loc 1 2847 9 is_stmt 1 view .LVU734
 2378              	.LVL176:
 2379              	.LBB500:
 2380              	.LBI500:
3221:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 2381              		.loc 2 3221 22 view .LVU735
 2382              	.LBB501:
3223:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 2383              		.loc 2 3223 3 view .LVU736
3223:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 2384              		.loc 2 3223 25 is_stmt 0 view .LVU737
 2385 00ce 6030     		adds	r0, r0, #96
 2386              	.LVL177:
3225:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_OFR1_OFFSET1_EN | ADC_OFR1_OFFSET1_CH | ADC_OFR1_OFFSET1,
 2387              		.loc 2 3225 3 is_stmt 1 view .LVU738
 2388 00d0 50F82670 		ldr	r7, [r0, r6, lsl #2]
 2389 00d4 A74A     		ldr	r2, .L230
 2390 00d6 3A40     		ands	r2, r2, r7
 2391 00d8 0F68     		ldr	r7, [r1]
 2392 00da 07F0F847 		and	r7, r7, #2080374784
 2393 00de 3D43     		orrs	r5, r5, r7
 2394              	.LVL178:
3225:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_OFR1_OFFSET1_EN | ADC_OFR1_OFFSET1_CH | ADC_OFR1_OFFSET1,
 2395              		.loc 2 3225 3 is_stmt 0 view .LVU739
 2396 00e0 2A43     		orrs	r2, r2, r5
 2397 00e2 42F00042 		orr	r2, r2, #-2147483648
 2398 00e6 40F82620 		str	r2, [r0, r6, lsl #2]
 2399              	.LVL179:
3225:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_OFR1_OFFSET1_EN | ADC_OFR1_OFFSET1_CH | ADC_OFR1_OFFSET1,
 2400              		.loc 2 3225 3 view .LVU740
 2401              	.LBE501:
 2402              	.LBE500:
2849:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         assert_param(IS_FUNCTIONAL_STATE(sConfig->OffsetSaturation));
 2403              		.loc 1 2849 9 is_stmt 1 view .LVU741
2850:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* Set ADC selected offset sign & saturation */
 2404              		.loc 1 2850 9 view .LVU742
2852:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         LL_ADC_SetOffsetSaturation(hadc->Instance, sConfig->OffsetNumber, (sConfig->OffsetSaturatio
 2405              		.loc 1 2852 9 view .LVU743
 2406 00ea 1A68     		ldr	r2, [r3]
ARM GAS  /tmp/ccEuGJBQ.s 			page 241


 2407 00ec 0E69     		ldr	r6, [r1, #16]
 2408 00ee 8869     		ldr	r0, [r1, #24]
 2409              	.LVL180:
 2410              	.LBB502:
 2411              	.LBI502:
3418:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 2412              		.loc 2 3418 22 view .LVU744
 2413              	.LBB503:
3420:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 2414              		.loc 2 3420 3 view .LVU745
3420:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 2415              		.loc 2 3420 25 is_stmt 0 view .LVU746
 2416 00f0 6032     		adds	r2, r2, #96
 2417              	.LVL181:
3422:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_OFR1_OFFSETPOS,
 2418              		.loc 2 3422 3 is_stmt 1 view .LVU747
 2419 00f2 52F82650 		ldr	r5, [r2, r6, lsl #2]
 2420 00f6 25F08075 		bic	r5, r5, #16777216
 2421 00fa 2843     		orrs	r0, r0, r5
 2422              	.LVL182:
3422:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_OFR1_OFFSETPOS,
 2423              		.loc 2 3422 3 is_stmt 0 view .LVU748
 2424 00fc 42F82600 		str	r0, [r2, r6, lsl #2]
 2425              	.LVL183:
3422:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_OFR1_OFFSETPOS,
 2426              		.loc 2 3422 3 view .LVU749
 2427              	.LBE503:
 2428              	.LBE502:
2853:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
 2429              		.loc 1 2853 9 is_stmt 1 view .LVU750
 2430 0100 1A68     		ldr	r2, [r3]
 2431 0102 0D69     		ldr	r5, [r1, #16]
2853:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
 2432              		.loc 1 2853 83 is_stmt 0 view .LVU751
 2433 0104 087F     		ldrb	r0, [r1, #28]	@ zero_extendqisi2
2853:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
 2434              		.loc 1 2853 9 view .LVU752
 2435 0106 0128     		cmp	r0, #1
 2436 0108 54D0     		beq	.L221
 2437              	.LVL184:
 2438              	.L156:
 2439              	.LBB504:
 2440              	.LBI504:
3473:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 2441              		.loc 2 3473 22 is_stmt 1 discriminator 4 view .LVU753
 2442              	.LBB505:
3475:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 2443              		.loc 2 3475 3 discriminator 4 view .LVU754
3475:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 2444              		.loc 2 3475 25 is_stmt 0 discriminator 4 view .LVU755
 2445 010a 6032     		adds	r2, r2, #96
 2446              	.LVL185:
3477:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_OFR1_SATEN,
 2447              		.loc 2 3477 3 is_stmt 1 discriminator 4 view .LVU756
 2448 010c 52F82500 		ldr	r0, [r2, r5, lsl #2]
 2449 0110 20F00070 		bic	r0, r0, #33554432
 2450 0114 0443     		orrs	r4, r4, r0
ARM GAS  /tmp/ccEuGJBQ.s 			page 242


 2451              	.LVL186:
3477:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_OFR1_SATEN,
 2452              		.loc 2 3477 3 is_stmt 0 discriminator 4 view .LVU757
 2453 0116 42F82540 		str	r4, [r2, r5, lsl #2]
 2454              	.LVL187:
 2455              	.L152:
3477:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_OFR1_SATEN,
 2456              		.loc 2 3477 3 discriminator 4 view .LVU758
 2457              	.LBE505:
 2458              	.LBE504:
2885:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 2459              		.loc 1 2885 5 is_stmt 1 view .LVU759
2885:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 2460              		.loc 1 2885 9 is_stmt 0 view .LVU760
 2461 011a 1868     		ldr	r0, [r3]
 2462              	.LVL188:
 2463              	.LBB506:
 2464              	.LBI506:
6722:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 2465              		.loc 2 6722 26 is_stmt 1 view .LVU761
 2466              	.LBB507:
6724:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 2467              		.loc 2 6724 3 view .LVU762
6724:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 2468              		.loc 2 6724 12 is_stmt 0 view .LVU763
 2469 011c 8268     		ldr	r2, [r0, #8]
6724:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 2470              		.loc 2 6724 68 view .LVU764
 2471 011e 12F0010F 		tst	r2, #1
 2472 0122 17D1     		bne	.L172
 2473              	.LVL189:
6724:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 2474              		.loc 2 6724 68 view .LVU765
 2475              	.LBE507:
 2476              	.LBE506:
2888:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 2477              		.loc 1 2888 7 is_stmt 1 view .LVU766
 2478 0124 0A68     		ldr	r2, [r1]
 2479 0126 CD68     		ldr	r5, [r1, #12]
 2480              	.LVL190:
 2481              	.LBB508:
 2482              	.LBI508:
5496:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 2483              		.loc 2 5496 22 view .LVU767
 2484              	.LBB509:
5501:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              Channel & ADC_SINGLEDIFF_CHANNEL_MASK,
 2485              		.loc 2 5501 3 view .LVU768
 2486 0128 D0F8B040 		ldr	r4, [r0, #176]
 2487 012c C2F3120C 		ubfx	ip, r2, #0, #19
 2488 0130 24EA0C04 		bic	r4, r4, ip
 2489 0134 05F0180C 		and	ip, r5, #24
 2490 0138 8F4D     		ldr	r5, .L230+4
 2491              	.LVL191:
5501:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              Channel & ADC_SINGLEDIFF_CHANNEL_MASK,
 2492              		.loc 2 5501 3 is_stmt 0 view .LVU769
 2493 013a 25FA0CF5 		lsr	r5, r5, ip
 2494 013e 2A40     		ands	r2, r2, r5
ARM GAS  /tmp/ccEuGJBQ.s 			page 243


 2495              	.LVL192:
5501:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              Channel & ADC_SINGLEDIFF_CHANNEL_MASK,
 2496              		.loc 2 5501 3 view .LVU770
 2497 0140 C2F31202 		ubfx	r2, r2, #0, #19
 2498 0144 2243     		orrs	r2, r2, r4
 2499 0146 C0F8B020 		str	r2, [r0, #176]
 2500              	.LVL193:
5501:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              Channel & ADC_SINGLEDIFF_CHANNEL_MASK,
 2501              		.loc 2 5501 3 view .LVU771
 2502              	.LBE509:
 2503              	.LBE508:
2891:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 2504              		.loc 1 2891 7 is_stmt 1 view .LVU772
2891:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 2505              		.loc 1 2891 18 is_stmt 0 view .LVU773
 2506 014a C868     		ldr	r0, [r1, #12]
2891:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 2507              		.loc 1 2891 10 view .LVU774
 2508 014c 8B4A     		ldr	r2, .L230+8
 2509 014e 9042     		cmp	r0, r2
 2510 0150 00F09B80 		beq	.L222
 2511              	.L172:
2908:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 2512              		.loc 1 2908 5 is_stmt 1 view .LVU775
2908:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 2513              		.loc 1 2908 9 is_stmt 0 view .LVU776
 2514 0154 0A68     		ldr	r2, [r1]
2908:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 2515              		.loc 1 2908 8 view .LVU777
 2516 0156 8A49     		ldr	r1, .L230+12
 2517              	.LVL194:
2908:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 2518              		.loc 1 2908 8 view .LVU778
 2519 0158 0A42     		tst	r2, r1
 2520 015a 00F0AC81 		beq	.L213
2910:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 2521              		.loc 1 2910 7 is_stmt 1 view .LVU779
 2522              	.LVL195:
 2523              	.LBB510:
 2524              	.LBI510:
2878:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 2525              		.loc 2 2878 26 view .LVU780
 2526              	.LBB511:
2880:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 2527              		.loc 2 2880 3 view .LVU781
2880:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 2528              		.loc 2 2880 21 is_stmt 0 view .LVU782
 2529 015e 8949     		ldr	r1, .L230+16
 2530 0160 8968     		ldr	r1, [r1, #8]
2880:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 2531              		.loc 2 2880 10 view .LVU783
 2532 0162 01F0E070 		and	r0, r1, #29360128
 2533              	.LVL196:
2880:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 2534              		.loc 2 2880 10 view .LVU784
 2535              	.LBE511:
 2536              	.LBE510:
ARM GAS  /tmp/ccEuGJBQ.s 			page 244


2914:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           && ((tmp_config_internal_channel & LL_ADC_PATH_INTERNAL_TEMPSENSOR) == 0UL))
 2537              		.loc 1 2914 7 is_stmt 1 view .LVU785
2914:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           && ((tmp_config_internal_channel & LL_ADC_PATH_INTERNAL_TEMPSENSOR) == 0UL))
 2538              		.loc 1 2914 10 is_stmt 0 view .LVU786
 2539 0166 884C     		ldr	r4, .L230+20
 2540 0168 A242     		cmp	r2, r4
 2541 016a 00F05B81 		beq	.L196
2914:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           && ((tmp_config_internal_channel & LL_ADC_PATH_INTERNAL_TEMPSENSOR) == 0UL))
 2542              		.loc 1 2914 62 discriminator 1 view .LVU787
 2543 016e 874C     		ldr	r4, .L230+24
 2544 0170 A242     		cmp	r2, r4
 2545 0172 00F05781 		beq	.L196
 2546              	.L197:
2934:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 2547              		.loc 1 2934 12 is_stmt 1 view .LVU788
2934:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 2548              		.loc 1 2934 15 is_stmt 0 view .LVU789
 2549 0176 864C     		ldr	r4, .L230+28
 2550 0178 A242     		cmp	r2, r4
 2551 017a 00F07981 		beq	.L223
 2552              	.L200:
2942:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                && ((tmp_config_internal_channel & LL_ADC_PATH_INTERNAL_VREFINT) == 0UL))
 2553              		.loc 1 2942 12 is_stmt 1 view .LVU790
2942:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                && ((tmp_config_internal_channel & LL_ADC_PATH_INTERNAL_VREFINT) == 0UL))
 2554              		.loc 1 2942 15 is_stmt 0 view .LVU791
 2555 017e 854C     		ldr	r4, .L230+32
 2556 0180 A242     		cmp	r2, r4
 2557 0182 00F08781 		beq	.L224
2767:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t tmpOffsetShifted;
 2558              		.loc 1 2767 21 view .LVU792
 2559 0186 0020     		movs	r0, #0
 2560              	.LVL197:
2767:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t tmpOffsetShifted;
 2561              		.loc 1 2767 21 view .LVU793
 2562 0188 51E7     		b	.L149
 2563              	.LVL198:
 2564              	.L220:
2824:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 2565              		.loc 1 2824 9 is_stmt 1 view .LVU794
 2566 018a 0D68     		ldr	r5, [r1]
 2567              	.LVL199:
 2568              	.LBB512:
 2569              	.LBI512:
5331:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 2570              		.loc 2 5331 22 view .LVU795
 2571              	.LBB513:
5337:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 2572              		.loc 2 5337 3 view .LVU796
5337:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 2573              		.loc 2 5337 25 is_stmt 0 view .LVU797
 2574 018c 1430     		adds	r0, r0, #20
 2575              	.LVL200:
5337:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 2576              		.loc 2 5337 25 view .LVU798
 2577 018e 6A0E     		lsrs	r2, r5, #25
 2578              	.LVL201:
5337:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
ARM GAS  /tmp/ccEuGJBQ.s 			page 245


 2579              		.loc 2 5337 25 view .LVU799
 2580 0190 9200     		lsls	r2, r2, #2
 2581 0192 02F00402 		and	r2, r2, #4
 2582              	.LVL202:
5339:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_SMPR1_SMP0 << ((Channel & ADC_CHANNEL_SMPx_BITOFFSET_MASK) >> ADC_CHANNEL_SMPx_BIT
 2583              		.loc 2 5339 3 is_stmt 1 view .LVU800
 2584 0196 8658     		ldr	r6, [r0, r2]
 2585 0198 C5F30455 		ubfx	r5, r5, #20, #5
 2586              	.LVL203:
5339:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_SMPR1_SMP0 << ((Channel & ADC_CHANNEL_SMPx_BITOFFSET_MASK) >> ADC_CHANNEL_SMPx_BIT
 2587              		.loc 2 5339 3 is_stmt 0 view .LVU801
 2588 019c 0727     		movs	r7, #7
 2589 019e 07FA05F5 		lsl	r5, r7, r5
 2590 01a2 26EA0505 		bic	r5, r6, r5
 2591 01a6 8550     		str	r5, [r0, r2]
 2592              	.LVL204:
5339:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_SMPR1_SMP0 << ((Channel & ADC_CHANNEL_SMPx_BITOFFSET_MASK) >> ADC_CHANNEL_SMPx_BIT
 2593              		.loc 2 5339 3 view .LVU802
 2594              	.LBE513:
 2595              	.LBE512:
2827:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
 2596              		.loc 1 2827 9 is_stmt 1 view .LVU803
 2597 01a8 1868     		ldr	r0, [r3]
 2598              	.LVL205:
 2599              	.LBB514:
 2600              	.LBI514:
3561:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 2601              		.loc 2 3561 22 view .LVU804
 2602              	.LBB515:
3563:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 2603              		.loc 2 3563 3 view .LVU805
 2604 01aa 4269     		ldr	r2, [r0, #20]
 2605 01ac 42F00042 		orr	r2, r2, #-2147483648
 2606 01b0 4261     		str	r2, [r0, #20]
3564:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 2607              		.loc 2 3564 1 is_stmt 0 view .LVU806
 2608 01b2 82E7     		b	.L154
 2609              	.LVL206:
 2610              	.L221:
3564:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 2611              		.loc 2 3564 1 view .LVU807
 2612              	.LBE515:
 2613              	.LBE514:
2853:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
 2614              		.loc 1 2853 9 view .LVU808
 2615 01b4 4FF00074 		mov	r4, #33554432
 2616              	.LVL207:
2853:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
 2617              		.loc 1 2853 9 view .LVU809
 2618 01b8 A7E7     		b	.L156
 2619              	.LVL208:
 2620              	.L155:
2859:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             == __LL_ADC_CHANNEL_TO_DECIMAL_NB(sConfig->Channel))
 2621              		.loc 1 2859 9 is_stmt 1 view .LVU810
 2622              	.LBB516:
 2623              	.LBI516:
3304:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
ARM GAS  /tmp/ccEuGJBQ.s 			page 246


 2624              		.loc 2 3304 26 view .LVU811
 2625              	.LBB517:
3306:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 2626              		.loc 2 3306 3 view .LVU812
3308:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 2627              		.loc 2 3308 3 view .LVU813
3308:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 2628              		.loc 2 3308 10 is_stmt 0 view .LVU814
 2629 01ba 026E     		ldr	r2, [r0, #96]
 2630              	.LVL209:
3308:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 2631              		.loc 2 3308 10 view .LVU815
 2632              	.LBE517:
 2633              	.LBE516:
 2634              	.LBB518:
 2635              	.LBI518:
3304:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 2636              		.loc 2 3304 26 is_stmt 1 view .LVU816
 2637              	.LBB519:
3306:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 2638              		.loc 2 3306 3 view .LVU817
3308:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 2639              		.loc 2 3308 3 view .LVU818
3308:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 2640              		.loc 2 3308 10 is_stmt 0 view .LVU819
 2641 01bc 046E     		ldr	r4, [r0, #96]
 2642              	.LVL210:
3308:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 2643              		.loc 2 3308 10 view .LVU820
 2644              	.LBE519:
 2645              	.LBE518:
2859:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             == __LL_ADC_CHANNEL_TO_DECIMAL_NB(sConfig->Channel))
 2646              		.loc 1 2859 13 view .LVU821
 2647 01be C4F38464 		ubfx	r4, r4, #26, #5
2860:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
 2648              		.loc 1 2860 16 view .LVU822
 2649 01c2 0A68     		ldr	r2, [r1]
 2650 01c4 C2F31205 		ubfx	r5, r2, #0, #19
 2651              	.LVL211:
2860:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
 2652              		.loc 1 2860 16 view .LVU823
 2653 01c8 85BB     		cbnz	r5, .L157
2860:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
 2654              		.loc 1 2860 16 discriminator 1 view .LVU824
 2655 01ca C2F38462 		ubfx	r2, r2, #26, #5
 2656              	.L158:
2859:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             == __LL_ADC_CHANNEL_TO_DECIMAL_NB(sConfig->Channel))
 2657              		.loc 1 2859 12 view .LVU825
 2658 01ce 9442     		cmp	r4, r2
 2659 01d0 34D0     		beq	.L225
 2660              	.L160:
2864:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             == __LL_ADC_CHANNEL_TO_DECIMAL_NB(sConfig->Channel))
 2661              		.loc 1 2864 9 is_stmt 1 view .LVU826
2864:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             == __LL_ADC_CHANNEL_TO_DECIMAL_NB(sConfig->Channel))
 2662              		.loc 1 2864 13 is_stmt 0 view .LVU827
 2663 01d2 1C68     		ldr	r4, [r3]
 2664              	.LVL212:
ARM GAS  /tmp/ccEuGJBQ.s 			page 247


 2665              	.LBB520:
 2666              	.LBI520:
3304:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 2667              		.loc 2 3304 26 is_stmt 1 view .LVU828
 2668              	.LBB521:
3306:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 2669              		.loc 2 3306 3 view .LVU829
3308:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 2670              		.loc 2 3308 3 view .LVU830
3308:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 2671              		.loc 2 3308 10 is_stmt 0 view .LVU831
 2672 01d4 626E     		ldr	r2, [r4, #100]
 2673              	.LVL213:
3308:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 2674              		.loc 2 3308 10 view .LVU832
 2675              	.LBE521:
 2676              	.LBE520:
 2677              	.LBB522:
 2678              	.LBI522:
3304:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 2679              		.loc 2 3304 26 is_stmt 1 view .LVU833
 2680              	.LBB523:
3306:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 2681              		.loc 2 3306 3 view .LVU834
3308:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 2682              		.loc 2 3308 3 view .LVU835
3308:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 2683              		.loc 2 3308 10 is_stmt 0 view .LVU836
 2684 01d6 606E     		ldr	r0, [r4, #100]
 2685              	.LVL214:
3308:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 2686              		.loc 2 3308 10 view .LVU837
 2687              	.LBE523:
 2688              	.LBE522:
2864:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             == __LL_ADC_CHANNEL_TO_DECIMAL_NB(sConfig->Channel))
 2689              		.loc 1 2864 13 view .LVU838
 2690 01d8 C0F38460 		ubfx	r0, r0, #26, #5
2865:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
 2691              		.loc 1 2865 16 view .LVU839
 2692 01dc 0A68     		ldr	r2, [r1]
 2693 01de C2F31205 		ubfx	r5, r2, #0, #19
 2694 01e2 85BB     		cbnz	r5, .L161
2865:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
 2695              		.loc 1 2865 16 discriminator 1 view .LVU840
 2696 01e4 C2F38462 		ubfx	r2, r2, #26, #5
 2697              	.L162:
2864:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             == __LL_ADC_CHANNEL_TO_DECIMAL_NB(sConfig->Channel))
 2698              		.loc 1 2864 12 view .LVU841
 2699 01e8 9042     		cmp	r0, r2
 2700 01ea 34D0     		beq	.L226
 2701              	.L164:
2869:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             == __LL_ADC_CHANNEL_TO_DECIMAL_NB(sConfig->Channel))
 2702              		.loc 1 2869 9 is_stmt 1 view .LVU842
2869:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             == __LL_ADC_CHANNEL_TO_DECIMAL_NB(sConfig->Channel))
 2703              		.loc 1 2869 13 is_stmt 0 view .LVU843
 2704 01ec 1C68     		ldr	r4, [r3]
 2705              	.LVL215:
ARM GAS  /tmp/ccEuGJBQ.s 			page 248


 2706              	.LBB524:
 2707              	.LBI524:
3304:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 2708              		.loc 2 3304 26 is_stmt 1 view .LVU844
 2709              	.LBB525:
3306:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 2710              		.loc 2 3306 3 view .LVU845
3308:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 2711              		.loc 2 3308 3 view .LVU846
3308:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 2712              		.loc 2 3308 10 is_stmt 0 view .LVU847
 2713 01ee A26E     		ldr	r2, [r4, #104]
 2714              	.LVL216:
3308:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 2715              		.loc 2 3308 10 view .LVU848
 2716              	.LBE525:
 2717              	.LBE524:
 2718              	.LBB526:
 2719              	.LBI526:
3304:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 2720              		.loc 2 3304 26 is_stmt 1 view .LVU849
 2721              	.LBB527:
3306:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 2722              		.loc 2 3306 3 view .LVU850
3308:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 2723              		.loc 2 3308 3 view .LVU851
3308:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 2724              		.loc 2 3308 10 is_stmt 0 view .LVU852
 2725 01f0 A06E     		ldr	r0, [r4, #104]
 2726              	.LVL217:
3308:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 2727              		.loc 2 3308 10 view .LVU853
 2728              	.LBE527:
 2729              	.LBE526:
2869:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             == __LL_ADC_CHANNEL_TO_DECIMAL_NB(sConfig->Channel))
 2730              		.loc 1 2869 13 view .LVU854
 2731 01f2 C0F38460 		ubfx	r0, r0, #26, #5
2870:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
 2732              		.loc 1 2870 16 view .LVU855
 2733 01f6 0A68     		ldr	r2, [r1]
 2734 01f8 C2F31205 		ubfx	r5, r2, #0, #19
 2735 01fc 85BB     		cbnz	r5, .L165
2870:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
 2736              		.loc 1 2870 16 discriminator 1 view .LVU856
 2737 01fe C2F38462 		ubfx	r2, r2, #26, #5
 2738              	.L166:
2869:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             == __LL_ADC_CHANNEL_TO_DECIMAL_NB(sConfig->Channel))
 2739              		.loc 1 2869 12 view .LVU857
 2740 0202 9042     		cmp	r0, r2
 2741 0204 34D0     		beq	.L227
 2742              	.L168:
2874:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             == __LL_ADC_CHANNEL_TO_DECIMAL_NB(sConfig->Channel))
 2743              		.loc 1 2874 9 is_stmt 1 view .LVU858
2874:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             == __LL_ADC_CHANNEL_TO_DECIMAL_NB(sConfig->Channel))
 2744              		.loc 1 2874 13 is_stmt 0 view .LVU859
 2745 0206 1C68     		ldr	r4, [r3]
 2746              	.LVL218:
ARM GAS  /tmp/ccEuGJBQ.s 			page 249


 2747              	.LBB528:
 2748              	.LBI528:
3304:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 2749              		.loc 2 3304 26 is_stmt 1 view .LVU860
 2750              	.LBB529:
3306:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 2751              		.loc 2 3306 3 view .LVU861
3308:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 2752              		.loc 2 3308 3 view .LVU862
3308:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 2753              		.loc 2 3308 10 is_stmt 0 view .LVU863
 2754 0208 E26E     		ldr	r2, [r4, #108]
 2755              	.LVL219:
3308:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 2756              		.loc 2 3308 10 view .LVU864
 2757              	.LBE529:
 2758              	.LBE528:
 2759              	.LBB530:
 2760              	.LBI530:
3304:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 2761              		.loc 2 3304 26 is_stmt 1 view .LVU865
 2762              	.LBB531:
3306:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 2763              		.loc 2 3306 3 view .LVU866
3308:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 2764              		.loc 2 3308 3 view .LVU867
3308:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 2765              		.loc 2 3308 10 is_stmt 0 view .LVU868
 2766 020a E06E     		ldr	r0, [r4, #108]
 2767              	.LVL220:
3308:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 2768              		.loc 2 3308 10 view .LVU869
 2769              	.LBE531:
 2770              	.LBE530:
2874:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             == __LL_ADC_CHANNEL_TO_DECIMAL_NB(sConfig->Channel))
 2771              		.loc 1 2874 13 view .LVU870
 2772 020c C0F38460 		ubfx	r0, r0, #26, #5
2875:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
 2773              		.loc 1 2875 16 view .LVU871
 2774 0210 0A68     		ldr	r2, [r1]
 2775 0212 C2F31205 		ubfx	r5, r2, #0, #19
 2776 0216 85BB     		cbnz	r5, .L169
2875:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
 2777              		.loc 1 2875 16 discriminator 1 view .LVU872
 2778 0218 C2F38462 		ubfx	r2, r2, #26, #5
 2779              	.L170:
2874:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             == __LL_ADC_CHANNEL_TO_DECIMAL_NB(sConfig->Channel))
 2780              		.loc 1 2874 12 view .LVU873
 2781 021c 9042     		cmp	r0, r2
 2782 021e 7FF47CAF 		bne	.L152
2877:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         }
 2783              		.loc 1 2877 11 is_stmt 1 view .LVU874
 2784              	.LVL221:
 2785              	.LBB532:
 2786              	.LBI532:
3363:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 2787              		.loc 2 3363 22 view .LVU875
ARM GAS  /tmp/ccEuGJBQ.s 			page 250


 2788              	.LBB533:
3365:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 2789              		.loc 2 3365 3 view .LVU876
3367:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_OFR1_OFFSET1_EN,
 2790              		.loc 2 3367 3 view .LVU877
 2791 0222 E26E     		ldr	r2, [r4, #108]
 2792 0224 22F00042 		bic	r2, r2, #-2147483648
 2793 0228 E266     		str	r2, [r4, #108]
3370:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 2794              		.loc 2 3370 1 is_stmt 0 view .LVU878
 2795 022a 76E7     		b	.L152
 2796              	.LVL222:
 2797              	.L157:
3370:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 2798              		.loc 2 3370 1 view .LVU879
 2799              	.LBE533:
 2800              	.LBE532:
 2801              	.LBB534:
 2802              	.LBI534:
 2803              		.file 3 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.2.0
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     08. May 2019
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2019 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  /tmp/ccEuGJBQ.s 			page 251


  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
ARM GAS  /tmp/ccEuGJBQ.s 			page 252


  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
ARM GAS  /tmp/ccEuGJBQ.s 			page 253


 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 187:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 188:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 189:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 192:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 193:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 194:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 195:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 198:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 200:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 203:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 204:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 205:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 206:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 207:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 208:Drivers/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  /tmp/ccEuGJBQ.s 			page 254


 209:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 210:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 211:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 212:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 213:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 214:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register
 215:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the Control Register.
 216:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Control Register value
 217:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 218:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_CONTROL(void)
 219:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 220:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 221:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 222:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 223:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 224:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 225:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 226:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 227:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 228:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 229:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 230:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 231:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               non-secure Control Register value
 232:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 233:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_CONTROL_NS(void)
 234:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 235:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 236:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 237:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 238:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 239:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 240:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 241:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 242:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 243:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 244:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register
 245:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 246:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 247:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 248:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_CONTROL(uint32_t control)
 249:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 250:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 251:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 252:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 253:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 254:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 255:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 256:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 257:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 258:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 259:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 260:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_CONTROL_NS(uint32_t control)
 261:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 262:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 263:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 264:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 265:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccEuGJBQ.s 			page 255


 266:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 267:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 268:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get IPSR Register
 269:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 270:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               IPSR Register value
 271:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 272:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_IPSR(void)
 273:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 274:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 275:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 276:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 277:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 278:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 279:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 280:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 281:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 282:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get APSR Register
 283:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 284:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               APSR Register value
 285:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 286:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_APSR(void)
 287:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 288:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 289:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 290:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 291:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 292:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 293:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 294:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 295:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 296:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get xPSR Register
 297:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 298:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               xPSR Register value
 299:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 300:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_xPSR(void)
 301:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 302:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 303:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 304:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 305:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 306:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 307:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 308:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 309:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 310:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 311:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 312:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 313:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 314:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSP(void)
 315:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 316:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 317:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 318:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 319:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 320:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 321:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 322:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccEuGJBQ.s 			page 256


 323:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 324:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 325:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 326:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 327:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 328:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 329:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSP_NS(void)
 330:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 331:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 332:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 333:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 334:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 335:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 336:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 337:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 338:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 339:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 340:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 341:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 342:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 343:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 344:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSP(uint32_t topOfProcStack)
 345:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 346:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : );
 347:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 348:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 349:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 350:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 351:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 352:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 353:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 354:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 355:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 356:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 357:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 358:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : );
 359:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 360:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 361:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 362:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 363:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 364:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 365:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 366:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 367:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 368:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSP(void)
 369:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 370:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 371:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 372:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 373:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 374:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 375:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 376:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 377:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 378:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 379:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
ARM GAS  /tmp/ccEuGJBQ.s 			page 257


 380:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
 381:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 382:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 383:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSP_NS(void)
 384:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 385:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 386:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 387:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 388:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 389:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 390:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 391:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 392:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 393:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 394:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 395:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 396:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 397:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 398:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSP(uint32_t topOfMainStack)
 399:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 400:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : );
 401:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 402:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 403:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 404:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 405:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 406:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 407:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 408:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 409:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 410:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 411:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 412:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : );
 413:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 414:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 415:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 416:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 417:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 418:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 419:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Stack Pointer (non-secure)
 420:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Stack Pointer (SP) when in secure state.
 421:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               SP Register value
 422:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 423:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_SP_NS(void)
 424:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 425:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 426:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 427:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, sp_ns" : "=r" (result) );
 428:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 429:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 430:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 431:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 432:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 433:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Stack Pointer (non-secure)
 434:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Stack Pointer (SP) when in secure state.
 435:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfStack  Stack Pointer value to set
 436:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  /tmp/ccEuGJBQ.s 			page 258


 437:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_SP_NS(uint32_t topOfStack)
 438:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 439:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR sp_ns, %0" : : "r" (topOfStack) : );
 440:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 441:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 442:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 443:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 444:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 445:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask
 446:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 447:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 448:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 449:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
 450:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 451:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 452:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 454:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 455:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 456:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 457:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 458:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 459:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 460:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
 461:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 462:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 463:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 464:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PRIMASK_NS(void)
 465:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 466:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 467:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 468:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) :: "memory");
 469:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 470:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 471:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 472:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 473:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 474:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 475:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask
 476:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 477:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 478:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 479:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PRIMASK(uint32_t priMask)
 480:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 481:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 482:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 483:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 484:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 485:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 486:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 487:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask (non-secure)
 488:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Priority Mask Register when in secure state.
 489:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 490:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 491:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PRIMASK_NS(uint32_t priMask)
 492:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 493:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask_ns, %0" : : "r" (priMask) : "memory");
ARM GAS  /tmp/ccEuGJBQ.s 			page 259


 494:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 495:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 496:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 497:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 498:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 499:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 500:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 501:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 502:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable FIQ
 503:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 504:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 505:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 506:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_fault_irq(void)
 507:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 508:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 509:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 510:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 511:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 512:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 513:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable FIQ
 514:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 515:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 516:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 517:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_fault_irq(void)
 518:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 519:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 520:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 521:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 522:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 523:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 524:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority
 525:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 526:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 527:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 528:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_BASEPRI(void)
 529:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 530:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 531:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 532:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 533:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 534:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 535:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 536:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 537:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 538:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 539:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority (non-secure)
 540:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Base Priority register when in secure state.
 541:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 542:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 543:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_BASEPRI_NS(void)
 544:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 545:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 546:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 547:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri_ns" : "=r" (result) );
 548:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 549:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 550:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  /tmp/ccEuGJBQ.s 			page 260


 551:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 552:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 553:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 554:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority
 555:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 556:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 557:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 558:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI(uint32_t basePri)
 559:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 560:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 561:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 562:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 563:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 564:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 565:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 566:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority (non-secure)
 567:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Base Priority register when in secure state.
 568:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 569:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 570:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_BASEPRI_NS(uint32_t basePri)
 571:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 572:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_ns, %0" : : "r" (basePri) : "memory");
 573:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 574:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 575:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 576:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 577:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 578:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority with condition
 579:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 580:Drivers/CMSIS/Include/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 581:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 582:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 583:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI_MAX(uint32_t basePri)
 584:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 585:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (basePri) : "memory");
 586:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 587:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 588:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 589:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 590:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask
 591:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 592:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 593:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 594:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FAULTMASK(void)
 595:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 596:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 597:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 598:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 599:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 600:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 601:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 602:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 603:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 604:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 605:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask (non-secure)
 606:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Fault Mask register when in secure state.
 607:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
ARM GAS  /tmp/ccEuGJBQ.s 			page 261


 608:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 609:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_FAULTMASK_NS(void)
 610:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 611:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 612:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 613:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask_ns" : "=r" (result) );
 614:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 615:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 616:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 617:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 618:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 619:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 620:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask
 621:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 622:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 623:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 624:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FAULTMASK(uint32_t faultMask)
 625:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 626:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 627:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 628:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 629:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 630:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 631:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 632:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask (non-secure)
 633:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Fault Mask register when in secure state.
 634:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 635:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 636:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_FAULTMASK_NS(uint32_t faultMask)
 637:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 638:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask_ns, %0" : : "r" (faultMask) : "memory");
 639:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 640:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 641:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 642:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 643:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 644:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 645:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 646:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 647:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 648:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 649:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 650:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 651:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit
 652:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 653:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 654:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 655:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 656:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer Limit (PSPLIM).
 657:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 658:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 659:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSPLIM(void)
 660:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 661:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 662:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 663:Drivers/CMSIS/Include/cmsis_gcc.h ****     // without main extensions, the non-secure PSPLIM is RAZ/WI
 664:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
ARM GAS  /tmp/ccEuGJBQ.s 			page 262


 665:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 666:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 667:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim"  : "=r" (result) );
 668:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 669:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 670:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 671:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 672:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3))
 673:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 674:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit (non-secure)
 675:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 676:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 677:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 678:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer Limit (PSPLIM) when in
 679:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 680:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 681:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSPLIM_NS(void)
 682:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 683:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 684:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 685:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 686:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 687:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 688:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim_ns"  : "=r" (result) );
 689:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 690:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 691:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 692:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 693:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 694:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 695:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 696:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer Limit
 697:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 698:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 699:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 700:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 701:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer Limit (PSPLIM).
 702:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 703:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 704:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSPLIM(uint32_t ProcStackPtrLimit)
 705:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 706:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 707:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 708:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 709:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 710:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 711:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim, %0" : : "r" (ProcStackPtrLimit));
 712:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 713:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 714:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 715:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 716:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 717:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 718:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 719:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 720:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 721:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccEuGJBQ.s 			page 263


 722:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer Limit (PSPLIM) when in s
 723:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 724:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 725:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSPLIM_NS(uint32_t ProcStackPtrLimit)
 726:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 727:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 728:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 729:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 730:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 731:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim_ns, %0\n" : : "r" (ProcStackPtrLimit));
 732:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 733:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 734:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 735:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 736:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 737:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 738:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit
 739:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 740:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 741:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 742:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 743:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer Limit (MSPLIM).
 744:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 745:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 746:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSPLIM(void)
 747:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 748:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 749:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 750:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 751:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 752:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 753:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 754:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim" : "=r" (result) );
 755:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 756:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 757:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 758:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 759:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 760:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 761:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 762:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit (non-secure)
 763:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 764:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 765:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 766:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer Limit(MSPLIM) when in sec
 767:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 768:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 769:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSPLIM_NS(void)
 770:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 771:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 772:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 773:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 774:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 775:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 776:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim_ns" : "=r" (result) );
 777:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 778:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  /tmp/ccEuGJBQ.s 			page 264


 779:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 780:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 781:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 782:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 783:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 784:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit
 785:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 786:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 787:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 788:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 789:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer Limit (MSPLIM).
 790:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer Limit value to set
 791:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 792:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSPLIM(uint32_t MainStackPtrLimit)
 793:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 794:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 795:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 796:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 797:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 798:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 799:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim, %0" : : "r" (MainStackPtrLimit));
 800:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 801:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 802:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 803:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 804:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 805:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 806:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit (non-secure)
 807:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 808:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 809:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 810:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer Limit (MSPLIM) when in secu
 811:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer value to set
 812:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 813:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSPLIM_NS(uint32_t MainStackPtrLimit)
 814:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 815:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 816:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 817:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 818:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 819:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim_ns, %0" : : "r" (MainStackPtrLimit));
 820:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 821:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 822:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 823:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 824:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 825:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 826:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 827:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 828:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 829:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get FPSCR
 830:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 831:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 832:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 833:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FPSCR(void)
 834:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 835:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
ARM GAS  /tmp/ccEuGJBQ.s 			page 265


 836:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 837:Drivers/CMSIS/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_get_fpscr) 
 838:Drivers/CMSIS/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 839:Drivers/CMSIS/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 840:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 841:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_arm_get_fpscr();
 842:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 843:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 844:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 845:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 846:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 847:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 848:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 849:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(0U);
 850:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 851:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 852:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 853:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 854:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 855:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set FPSCR
 856:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 857:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 858:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 859:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FPSCR(uint32_t fpscr)
 860:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 861:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 862:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 863:Drivers/CMSIS/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_set_fpscr)
 864:Drivers/CMSIS/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 865:Drivers/CMSIS/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 866:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 867:Drivers/CMSIS/Include/cmsis_gcc.h ****   __builtin_arm_set_fpscr(fpscr);
 868:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 869:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc", "memory");
 870:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 871:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 872:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)fpscr;
 873:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 874:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 875:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 876:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 877:Drivers/CMSIS/Include/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 878:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 879:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 880:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 881:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 882:Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 883:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 884:Drivers/CMSIS/Include/cmsis_gcc.h **** */
 885:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 886:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 887:Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 888:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 889:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 890:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 891:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 892:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
ARM GAS  /tmp/ccEuGJBQ.s 			page 266


 893:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 894:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 895:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 896:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 897:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 898:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 899:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 900:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 901:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 902:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 903:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 904:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 905:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 906:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 907:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 908:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 909:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi")
 910:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 911:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 912:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 913:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 914:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 915:Drivers/CMSIS/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 916:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 917:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe")
 918:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 919:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 920:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 921:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 922:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 923:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 924:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 925:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 926:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 927:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 928:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 929:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 930:Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 931:Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 932:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 933:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 934:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 935:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 936:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 937:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 938:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 939:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 940:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 941:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 942:Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 943:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 944:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 945:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 946:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 947:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 948:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 949:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccEuGJBQ.s 			page 267


 950:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 951:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 952:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 953:Drivers/CMSIS/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 954:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 955:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DMB(void)
 956:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 957:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 958:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 959:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 960:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 961:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 962:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 963:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in unsigned integer value. For example, 0x12345678 becomes 0x785
 964:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 965:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 966:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 967:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV(uint32_t value)
 968:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 969:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 970:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_bswap32(value);
 971:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 972:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 973:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 974:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 975:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 976:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 977:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 978:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 979:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 980:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 981:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 982:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order within each halfword of a word. For example, 0x12345678 becomes 
 983:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 984:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 985:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 986:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV16(uint32_t value)
 987:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 988:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 989:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 990:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 991:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 992:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 993:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 994:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 995:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 996:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 997:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in a 16-bit value and returns the signed 16-bit result. For exam
 998:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 999:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
1000:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1001:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int16_t __REVSH(int16_t value)
1002:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1003:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
1004:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (int16_t)__builtin_bswap16(value);
1005:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
1006:Drivers/CMSIS/Include/cmsis_gcc.h ****   int16_t result;
ARM GAS  /tmp/ccEuGJBQ.s 			page 268


1007:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1008:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
1009:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
1010:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
1011:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1012:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1013:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1014:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1015:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
1016:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
1017:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op1  Value to rotate
1018:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op2  Number of Bits to rotate
1019:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
1020:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1021:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
1022:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1023:Drivers/CMSIS/Include/cmsis_gcc.h ****   op2 %= 32U;
1024:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (op2 == 0U)
1025:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
1026:Drivers/CMSIS/Include/cmsis_gcc.h ****     return op1;
1027:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
1028:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
1029:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1030:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1031:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1032:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1033:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Breakpoint
1034:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
1035:Drivers/CMSIS/Include/cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
1036:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
1037:Drivers/CMSIS/Include/cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
1038:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1039:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
1040:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1041:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1042:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1043:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse bit order of value
1044:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the bit order of the given value.
1045:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
1046:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
1047:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1048:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RBIT(uint32_t value)
 2804              		.loc 3 1048 31 is_stmt 1 discriminator 2 view .LVU880
 2805              	.LBB535:
1049:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1050:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 2806              		.loc 3 1050 3 discriminator 2 view .LVU881
1051:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1052:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
1053:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
1054:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
1055:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 2807              		.loc 3 1055 4 discriminator 2 view .LVU882
 2808              		.syntax unified
 2809              	@ 1055 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2810 022c 92FAA2F2 		rbit r2, r2
 2811              	@ 0 "" 2
ARM GAS  /tmp/ccEuGJBQ.s 			page 269


 2812              	.LVL223:
1056:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
1057:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t s = (4U /*sizeof(v)*/ * 8U) - 1U; /* extra shift needed at end */
1058:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1059:Drivers/CMSIS/Include/cmsis_gcc.h ****   result = value;                      /* r will be reversed bits of v; first get LSB of v */
1060:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (value >>= 1U; value != 0U; value >>= 1U)
1061:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
1062:Drivers/CMSIS/Include/cmsis_gcc.h ****     result <<= 1U;
1063:Drivers/CMSIS/Include/cmsis_gcc.h ****     result |= value & 1U;
1064:Drivers/CMSIS/Include/cmsis_gcc.h ****     s--;
1065:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
1066:Drivers/CMSIS/Include/cmsis_gcc.h ****   result <<= s;                        /* shift when v's highest bits are zero */
1067:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
1068:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 2813              		.loc 3 1068 3 discriminator 2 view .LVU883
 2814              		.loc 3 1068 3 is_stmt 0 discriminator 2 view .LVU884
 2815              		.thumb
 2816              		.syntax unified
 2817              	.LBE535:
 2818              	.LBE534:
 2819              	.LBB536:
 2820              	.LBI536:
1069:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1070:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1071:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1072:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1073:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Count leading zeros
1074:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Counts the number of leading zeros of a data value.
1075:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to count the leading zeros
1076:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             number of leading zeros in value
1077:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1078:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __CLZ(uint32_t value)
 2821              		.loc 3 1078 30 is_stmt 1 discriminator 2 view .LVU885
 2822              	.LBB537:
1079:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1080:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* Even though __builtin_clz produces a CLZ instruction on ARM, formally
1081:Drivers/CMSIS/Include/cmsis_gcc.h ****      __builtin_clz(0) is undefined behaviour, so handle this case specially.
1082:Drivers/CMSIS/Include/cmsis_gcc.h ****      This guarantees ARM-compatible results if happening to compile on a non-ARM
1083:Drivers/CMSIS/Include/cmsis_gcc.h ****      target, and ensures the compiler doesn't decide to activate any
1084:Drivers/CMSIS/Include/cmsis_gcc.h ****      optimisations using the logic "value was passed to __builtin_clz, so it
1085:Drivers/CMSIS/Include/cmsis_gcc.h ****      is non-zero".
1086:Drivers/CMSIS/Include/cmsis_gcc.h ****      ARM GCC 7.3 and possibly earlier will optimise this test away, leaving a
1087:Drivers/CMSIS/Include/cmsis_gcc.h ****      single CLZ instruction.
1088:Drivers/CMSIS/Include/cmsis_gcc.h ****    */
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (value == 0U)
 2823              		.loc 3 1089 3 discriminator 2 view .LVU886
 2824              		.loc 3 1089 6 is_stmt 0 discriminator 2 view .LVU887
 2825 0230 12B1     		cbz	r2, .L202
1090:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****     return 32U;
1092:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
1093:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_clz(value);
 2826              		.loc 3 1093 3 is_stmt 1 view .LVU888
 2827              		.loc 3 1093 10 is_stmt 0 view .LVU889
 2828 0232 B2FA82F2 		clz	r2, r2
 2829              	.LVL224:
 2830              		.loc 3 1093 10 view .LVU890
ARM GAS  /tmp/ccEuGJBQ.s 			page 270


 2831 0236 CAE7     		b	.L158
 2832              	.LVL225:
 2833              	.L202:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 2834              		.loc 3 1091 12 view .LVU891
 2835 0238 2022     		movs	r2, #32
 2836              	.LVL226:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 2837              		.loc 3 1091 12 view .LVU892
 2838 023a C8E7     		b	.L158
 2839              	.L225:
 2840              	.LBE537:
 2841              	.LBE536:
2862:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         }
 2842              		.loc 1 2862 11 is_stmt 1 view .LVU893
 2843              	.LVL227:
 2844              	.LBB538:
 2845              	.LBI538:
3363:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 2846              		.loc 2 3363 22 view .LVU894
 2847              	.LBB539:
3365:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 2848              		.loc 2 3365 3 view .LVU895
3367:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_OFR1_OFFSET1_EN,
 2849              		.loc 2 3367 3 view .LVU896
 2850 023c 026E     		ldr	r2, [r0, #96]
 2851 023e 22F00042 		bic	r2, r2, #-2147483648
 2852 0242 0266     		str	r2, [r0, #96]
3370:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 2853              		.loc 2 3370 1 is_stmt 0 view .LVU897
 2854 0244 C5E7     		b	.L160
 2855              	.LVL228:
 2856              	.L161:
3370:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 2857              		.loc 2 3370 1 view .LVU898
 2858              	.LBE539:
 2859              	.LBE538:
 2860              	.LBB540:
 2861              	.LBI540:
1048:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2862              		.loc 3 1048 31 is_stmt 1 discriminator 2 view .LVU899
 2863              	.LBB541:
1050:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 2864              		.loc 3 1050 3 discriminator 2 view .LVU900
1055:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 2865              		.loc 3 1055 4 discriminator 2 view .LVU901
 2866              		.syntax unified
 2867              	@ 1055 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2868 0246 92FAA2F2 		rbit r2, r2
 2869              	@ 0 "" 2
 2870              	.LVL229:
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2871              		.loc 3 1068 3 discriminator 2 view .LVU902
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2872              		.loc 3 1068 3 is_stmt 0 discriminator 2 view .LVU903
 2873              		.thumb
 2874              		.syntax unified
ARM GAS  /tmp/ccEuGJBQ.s 			page 271


 2875              	.LBE541:
 2876              	.LBE540:
 2877              	.LBB542:
 2878              	.LBI542:
1078:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2879              		.loc 3 1078 30 is_stmt 1 discriminator 2 view .LVU904
 2880              	.LBB543:
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 2881              		.loc 3 1089 3 discriminator 2 view .LVU905
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 2882              		.loc 3 1089 6 is_stmt 0 discriminator 2 view .LVU906
 2883 024a 12B1     		cbz	r2, .L203
 2884              		.loc 3 1093 3 is_stmt 1 view .LVU907
 2885              		.loc 3 1093 10 is_stmt 0 view .LVU908
 2886 024c B2FA82F2 		clz	r2, r2
 2887              	.LVL230:
 2888              		.loc 3 1093 10 view .LVU909
 2889 0250 CAE7     		b	.L162
 2890              	.LVL231:
 2891              	.L203:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 2892              		.loc 3 1091 12 view .LVU910
 2893 0252 2022     		movs	r2, #32
 2894              	.LVL232:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 2895              		.loc 3 1091 12 view .LVU911
 2896 0254 C8E7     		b	.L162
 2897              	.L226:
 2898              	.LBE543:
 2899              	.LBE542:
2867:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         }
 2900              		.loc 1 2867 11 is_stmt 1 view .LVU912
 2901              	.LVL233:
 2902              	.LBB544:
 2903              	.LBI544:
3363:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 2904              		.loc 2 3363 22 view .LVU913
 2905              	.LBB545:
3365:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 2906              		.loc 2 3365 3 view .LVU914
3367:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_OFR1_OFFSET1_EN,
 2907              		.loc 2 3367 3 view .LVU915
 2908 0256 626E     		ldr	r2, [r4, #100]
 2909 0258 22F00042 		bic	r2, r2, #-2147483648
 2910 025c 6266     		str	r2, [r4, #100]
3370:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 2911              		.loc 2 3370 1 is_stmt 0 view .LVU916
 2912 025e C5E7     		b	.L164
 2913              	.LVL234:
 2914              	.L165:
3370:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 2915              		.loc 2 3370 1 view .LVU917
 2916              	.LBE545:
 2917              	.LBE544:
 2918              	.LBB546:
 2919              	.LBI546:
1048:Drivers/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  /tmp/ccEuGJBQ.s 			page 272


 2920              		.loc 3 1048 31 is_stmt 1 discriminator 2 view .LVU918
 2921              	.LBB547:
1050:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 2922              		.loc 3 1050 3 discriminator 2 view .LVU919
1055:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 2923              		.loc 3 1055 4 discriminator 2 view .LVU920
 2924              		.syntax unified
 2925              	@ 1055 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2926 0260 92FAA2F2 		rbit r2, r2
 2927              	@ 0 "" 2
 2928              	.LVL235:
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2929              		.loc 3 1068 3 discriminator 2 view .LVU921
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2930              		.loc 3 1068 3 is_stmt 0 discriminator 2 view .LVU922
 2931              		.thumb
 2932              		.syntax unified
 2933              	.LBE547:
 2934              	.LBE546:
 2935              	.LBB548:
 2936              	.LBI548:
1078:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2937              		.loc 3 1078 30 is_stmt 1 discriminator 2 view .LVU923
 2938              	.LBB549:
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 2939              		.loc 3 1089 3 discriminator 2 view .LVU924
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 2940              		.loc 3 1089 6 is_stmt 0 discriminator 2 view .LVU925
 2941 0264 12B1     		cbz	r2, .L204
 2942              		.loc 3 1093 3 is_stmt 1 view .LVU926
 2943              		.loc 3 1093 10 is_stmt 0 view .LVU927
 2944 0266 B2FA82F2 		clz	r2, r2
 2945              	.LVL236:
 2946              		.loc 3 1093 10 view .LVU928
 2947 026a CAE7     		b	.L166
 2948              	.LVL237:
 2949              	.L204:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 2950              		.loc 3 1091 12 view .LVU929
 2951 026c 2022     		movs	r2, #32
 2952              	.LVL238:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 2953              		.loc 3 1091 12 view .LVU930
 2954 026e C8E7     		b	.L166
 2955              	.L227:
 2956              	.LBE549:
 2957              	.LBE548:
2872:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         }
 2958              		.loc 1 2872 11 is_stmt 1 view .LVU931
 2959              	.LVL239:
 2960              	.LBB550:
 2961              	.LBI550:
3363:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 2962              		.loc 2 3363 22 view .LVU932
 2963              	.LBB551:
3365:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 2964              		.loc 2 3365 3 view .LVU933
ARM GAS  /tmp/ccEuGJBQ.s 			page 273


3367:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_OFR1_OFFSET1_EN,
 2965              		.loc 2 3367 3 view .LVU934
 2966 0270 A26E     		ldr	r2, [r4, #104]
 2967 0272 22F00042 		bic	r2, r2, #-2147483648
 2968 0276 A266     		str	r2, [r4, #104]
3370:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 2969              		.loc 2 3370 1 is_stmt 0 view .LVU935
 2970 0278 C5E7     		b	.L168
 2971              	.LVL240:
 2972              	.L169:
3370:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 2973              		.loc 2 3370 1 view .LVU936
 2974              	.LBE551:
 2975              	.LBE550:
 2976              	.LBB552:
 2977              	.LBI552:
1048:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2978              		.loc 3 1048 31 is_stmt 1 discriminator 2 view .LVU937
 2979              	.LBB553:
1050:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 2980              		.loc 3 1050 3 discriminator 2 view .LVU938
1055:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 2981              		.loc 3 1055 4 discriminator 2 view .LVU939
 2982              		.syntax unified
 2983              	@ 1055 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2984 027a 92FAA2F2 		rbit r2, r2
 2985              	@ 0 "" 2
 2986              	.LVL241:
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2987              		.loc 3 1068 3 discriminator 2 view .LVU940
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2988              		.loc 3 1068 3 is_stmt 0 discriminator 2 view .LVU941
 2989              		.thumb
 2990              		.syntax unified
 2991              	.LBE553:
 2992              	.LBE552:
 2993              	.LBB554:
 2994              	.LBI554:
1078:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2995              		.loc 3 1078 30 is_stmt 1 discriminator 2 view .LVU942
 2996              	.LBB555:
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 2997              		.loc 3 1089 3 discriminator 2 view .LVU943
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 2998              		.loc 3 1089 6 is_stmt 0 discriminator 2 view .LVU944
 2999 027e 12B1     		cbz	r2, .L205
 3000              		.loc 3 1093 3 is_stmt 1 view .LVU945
 3001              		.loc 3 1093 10 is_stmt 0 view .LVU946
 3002 0280 B2FA82F2 		clz	r2, r2
 3003              	.LVL242:
 3004              		.loc 3 1093 10 view .LVU947
 3005 0284 CAE7     		b	.L170
 3006              	.LVL243:
 3007              	.L205:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 3008              		.loc 3 1091 12 view .LVU948
 3009 0286 2022     		movs	r2, #32
ARM GAS  /tmp/ccEuGJBQ.s 			page 274


 3010              	.LVL244:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 3011              		.loc 3 1091 12 view .LVU949
 3012 0288 C8E7     		b	.L170
 3013              	.L222:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 3014              		.loc 3 1091 12 view .LVU950
 3015              	.LBE555:
 3016              	.LBE554:
2895:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                                       (uint32_t)(__LL_ADC_DECIMAL_NB_TO_CHANNEL((__LL_ADC_CHANNEL_T
 3017              		.loc 1 2895 9 is_stmt 1 view .LVU951
 3018 028a 1C68     		ldr	r4, [r3]
2896:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                                       sConfig->SamplingTime);
 3019              		.loc 1 2896 50 is_stmt 0 view .LVU952
 3020 028c 0A68     		ldr	r2, [r1]
 3021 028e C2F31205 		ubfx	r5, r2, #0, #19
 3022 0292 002D     		cmp	r5, #0
 3023 0294 36D1     		bne	.L173
2896:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                                       sConfig->SamplingTime);
 3024              		.loc 1 2896 50 discriminator 1 view .LVU953
 3025 0296 900E     		lsrs	r0, r2, #26
 3026 0298 0130     		adds	r0, r0, #1
 3027 029a 00F01F00 		and	r0, r0, #31
 3028 029e 0928     		cmp	r0, #9
 3029 02a0 8CBF     		ite	hi
 3030 02a2 0020     		movhi	r0, #0
 3031 02a4 0120     		movls	r0, #1
 3032              	.L174:
2895:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                                       (uint32_t)(__LL_ADC_DECIMAL_NB_TO_CHANNEL((__LL_ADC_CHANNEL_T
 3033              		.loc 1 2895 9 view .LVU954
 3034 02a6 0028     		cmp	r0, #0
 3035 02a8 76D0     		beq	.L176
2896:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                                       sConfig->SamplingTime);
 3036              		.loc 1 2896 50 view .LVU955
 3037 02aa 002D     		cmp	r5, #0
 3038 02ac 39D1     		bne	.L177
2896:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                                       sConfig->SamplingTime);
 3039              		.loc 1 2896 50 discriminator 3 view .LVU956
 3040 02ae 900E     		lsrs	r0, r2, #26
 3041 02b0 0130     		adds	r0, r0, #1
 3042 02b2 8006     		lsls	r0, r0, #26
 3043 02b4 00F0F840 		and	r0, r0, #2080374784
 3044              	.L178:
2896:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                                       sConfig->SamplingTime);
 3045              		.loc 1 2896 50 discriminator 6 view .LVU957
 3046 02b8 002D     		cmp	r5, #0
 3047 02ba 3ED1     		bne	.L180
2896:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                                       sConfig->SamplingTime);
 3048              		.loc 1 2896 50 discriminator 7 view .LVU958
 3049 02bc 970E     		lsrs	r7, r2, #26
 3050 02be 0137     		adds	r7, r7, #1
 3051 02c0 07F01F07 		and	r7, r7, #31
 3052 02c4 0126     		movs	r6, #1
 3053 02c6 BE40     		lsls	r6, r6, r7
 3054              	.L181:
2896:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                                       sConfig->SamplingTime);
 3055              		.loc 1 2896 50 discriminator 10 view .LVU959
ARM GAS  /tmp/ccEuGJBQ.s 			page 275


 3056 02c8 3043     		orrs	r0, r0, r6
 3057 02ca 002D     		cmp	r5, #0
 3058 02cc 43D1     		bne	.L183
2896:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                                       sConfig->SamplingTime);
 3059              		.loc 1 2896 50 discriminator 11 view .LVU960
 3060 02ce 920E     		lsrs	r2, r2, #26
 3061 02d0 0132     		adds	r2, r2, #1
 3062 02d2 02F01F02 		and	r2, r2, #31
 3063 02d6 02EB4202 		add	r2, r2, r2, lsl #1
 3064 02da 1205     		lsls	r2, r2, #20
 3065              	.L184:
2895:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                                       (uint32_t)(__LL_ADC_DECIMAL_NB_TO_CHANNEL((__LL_ADC_CHANNEL_T
 3066              		.loc 1 2895 9 view .LVU961
 3067 02dc 1043     		orrs	r0, r0, r2
 3068              	.L186:
2895:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                                       (uint32_t)(__LL_ADC_DECIMAL_NB_TO_CHANNEL((__LL_ADC_CHANNEL_T
 3069              		.loc 1 2895 9 discriminator 1 view .LVU962
 3070 02de 8D68     		ldr	r5, [r1, #8]
 3071              	.LVL245:
 3072              	.LBB556:
 3073              	.LBI556:
5331:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 3074              		.loc 2 5331 22 is_stmt 1 discriminator 1 view .LVU963
 3075              	.LBB557:
5337:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 3076              		.loc 2 5337 3 discriminator 1 view .LVU964
5337:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 3077              		.loc 2 5337 25 is_stmt 0 discriminator 1 view .LVU965
 3078 02e0 04F11407 		add	r7, r4, #20
 3079 02e4 420E     		lsrs	r2, r0, #25
 3080 02e6 9200     		lsls	r2, r2, #2
 3081 02e8 02F00402 		and	r2, r2, #4
 3082              	.LVL246:
5339:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_SMPR1_SMP0 << ((Channel & ADC_CHANNEL_SMPx_BITOFFSET_MASK) >> ADC_CHANNEL_SMPx_BIT
 3083              		.loc 2 5339 3 is_stmt 1 discriminator 1 view .LVU966
 3084 02ec BC58     		ldr	r4, [r7, r2]
 3085              	.LVL247:
5339:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_SMPR1_SMP0 << ((Channel & ADC_CHANNEL_SMPx_BITOFFSET_MASK) >> ADC_CHANNEL_SMPx_BIT
 3086              		.loc 2 5339 3 is_stmt 0 discriminator 1 view .LVU967
 3087 02ee C0F30450 		ubfx	r0, r0, #20, #5
 3088              	.LVL248:
5339:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_SMPR1_SMP0 << ((Channel & ADC_CHANNEL_SMPx_BITOFFSET_MASK) >> ADC_CHANNEL_SMPx_BIT
 3089              		.loc 2 5339 3 discriminator 1 view .LVU968
 3090 02f2 0726     		movs	r6, #7
 3091 02f4 8640     		lsls	r6, r6, r0
 3092 02f6 24EA060C 		bic	ip, r4, r6
 3093 02fa 8540     		lsls	r5, r5, r0
 3094              	.LVL249:
5339:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_SMPR1_SMP0 << ((Channel & ADC_CHANNEL_SMPx_BITOFFSET_MASK) >> ADC_CHANNEL_SMPx_BIT
 3095              		.loc 2 5339 3 discriminator 1 view .LVU969
 3096 02fc 4CEA0505 		orr	r5, ip, r5
 3097 0300 BD50     		str	r5, [r7, r2]
 3098              	.LVL250:
5342:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 3099              		.loc 2 5342 1 discriminator 1 view .LVU970
 3100 0302 27E7     		b	.L172
 3101              	.LVL251:
ARM GAS  /tmp/ccEuGJBQ.s 			page 276


 3102              	.L173:
5342:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 3103              		.loc 2 5342 1 discriminator 1 view .LVU971
 3104              	.LBE557:
 3105              	.LBE556:
 3106              	.LBB558:
 3107              	.LBI558:
1048:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 3108              		.loc 3 1048 31 is_stmt 1 discriminator 2 view .LVU972
 3109              	.LBB559:
1050:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 3110              		.loc 3 1050 3 discriminator 2 view .LVU973
1055:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 3111              		.loc 3 1055 4 discriminator 2 view .LVU974
 3112              		.syntax unified
 3113              	@ 1055 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3114 0304 92FAA2F0 		rbit r0, r2
 3115              	@ 0 "" 2
 3116              	.LVL252:
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3117              		.loc 3 1068 3 discriminator 2 view .LVU975
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3118              		.loc 3 1068 3 is_stmt 0 discriminator 2 view .LVU976
 3119              		.thumb
 3120              		.syntax unified
 3121              	.LBE559:
 3122              	.LBE558:
 3123              	.LBB560:
 3124              	.LBI560:
1078:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 3125              		.loc 3 1078 30 is_stmt 1 discriminator 2 view .LVU977
 3126              	.LBB561:
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 3127              		.loc 3 1089 3 discriminator 2 view .LVU978
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 3128              		.loc 3 1089 6 is_stmt 0 discriminator 2 view .LVU979
 3129 0308 48B1     		cbz	r0, .L206
 3130              		.loc 3 1093 3 is_stmt 1 view .LVU980
 3131              		.loc 3 1093 10 is_stmt 0 view .LVU981
 3132 030a B0FA80F0 		clz	r0, r0
 3133              	.LVL253:
 3134              	.L175:
 3135              		.loc 3 1093 10 view .LVU982
 3136              	.LBE561:
 3137              	.LBE560:
2896:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                                       sConfig->SamplingTime);
 3138              		.loc 1 2896 50 view .LVU983
 3139 030e 0130     		adds	r0, r0, #1
 3140 0310 00F01F00 		and	r0, r0, #31
 3141 0314 0928     		cmp	r0, #9
 3142 0316 8CBF     		ite	hi
 3143 0318 0020     		movhi	r0, #0
 3144 031a 0120     		movls	r0, #1
 3145 031c C3E7     		b	.L174
 3146              	.LVL254:
 3147              	.L206:
 3148              	.LBB563:
ARM GAS  /tmp/ccEuGJBQ.s 			page 277


 3149              	.LBB562:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 3150              		.loc 3 1091 12 view .LVU984
 3151 031e 2020     		movs	r0, #32
 3152              	.LVL255:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 3153              		.loc 3 1091 12 view .LVU985
 3154 0320 F5E7     		b	.L175
 3155              	.L177:
 3156              	.LVL256:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 3157              		.loc 3 1091 12 view .LVU986
 3158              	.LBE562:
 3159              	.LBE563:
 3160              	.LBB564:
 3161              	.LBI564:
1048:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 3162              		.loc 3 1048 31 is_stmt 1 discriminator 4 view .LVU987
 3163              	.LBB565:
1050:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 3164              		.loc 3 1050 3 discriminator 4 view .LVU988
1055:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 3165              		.loc 3 1055 4 discriminator 4 view .LVU989
 3166              		.syntax unified
 3167              	@ 1055 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3168 0322 92FAA2F0 		rbit r0, r2
 3169              	@ 0 "" 2
 3170              	.LVL257:
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3171              		.loc 3 1068 3 discriminator 4 view .LVU990
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3172              		.loc 3 1068 3 is_stmt 0 discriminator 4 view .LVU991
 3173              		.thumb
 3174              		.syntax unified
 3175              	.LBE565:
 3176              	.LBE564:
 3177              	.LBB566:
 3178              	.LBI566:
1078:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 3179              		.loc 3 1078 30 is_stmt 1 discriminator 4 view .LVU992
 3180              	.LBB567:
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 3181              		.loc 3 1089 3 discriminator 4 view .LVU993
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 3182              		.loc 3 1089 6 is_stmt 0 discriminator 4 view .LVU994
 3183 0326 30B1     		cbz	r0, .L207
 3184              		.loc 3 1093 3 is_stmt 1 view .LVU995
 3185              		.loc 3 1093 10 is_stmt 0 view .LVU996
 3186 0328 B0FA80F0 		clz	r0, r0
 3187              	.LVL258:
 3188              	.L179:
 3189              		.loc 3 1093 10 view .LVU997
 3190              	.LBE567:
 3191              	.LBE566:
2896:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                                       sConfig->SamplingTime);
 3192              		.loc 1 2896 50 view .LVU998
 3193 032c 0130     		adds	r0, r0, #1
ARM GAS  /tmp/ccEuGJBQ.s 			page 278


 3194 032e 8006     		lsls	r0, r0, #26
 3195 0330 00F0F840 		and	r0, r0, #2080374784
 3196 0334 C0E7     		b	.L178
 3197              	.LVL259:
 3198              	.L207:
 3199              	.LBB569:
 3200              	.LBB568:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 3201              		.loc 3 1091 12 view .LVU999
 3202 0336 2020     		movs	r0, #32
 3203              	.LVL260:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 3204              		.loc 3 1091 12 view .LVU1000
 3205 0338 F8E7     		b	.L179
 3206              	.L180:
 3207              	.LVL261:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 3208              		.loc 3 1091 12 view .LVU1001
 3209              	.LBE568:
 3210              	.LBE569:
 3211              	.LBB570:
 3212              	.LBI570:
1048:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 3213              		.loc 3 1048 31 is_stmt 1 discriminator 8 view .LVU1002
 3214              	.LBB571:
1050:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 3215              		.loc 3 1050 3 discriminator 8 view .LVU1003
1055:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 3216              		.loc 3 1055 4 discriminator 8 view .LVU1004
 3217              		.syntax unified
 3218              	@ 1055 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3219 033a 92FAA2F6 		rbit r6, r2
 3220              	@ 0 "" 2
 3221              	.LVL262:
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3222              		.loc 3 1068 3 discriminator 8 view .LVU1005
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3223              		.loc 3 1068 3 is_stmt 0 discriminator 8 view .LVU1006
 3224              		.thumb
 3225              		.syntax unified
 3226              	.LBE571:
 3227              	.LBE570:
 3228              	.LBB572:
 3229              	.LBI572:
1078:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 3230              		.loc 3 1078 30 is_stmt 1 discriminator 8 view .LVU1007
 3231              	.LBB573:
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 3232              		.loc 3 1089 3 discriminator 8 view .LVU1008
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 3233              		.loc 3 1089 6 is_stmt 0 discriminator 8 view .LVU1009
 3234 033e 46B1     		cbz	r6, .L208
 3235              		.loc 3 1093 3 is_stmt 1 view .LVU1010
 3236              		.loc 3 1093 10 is_stmt 0 view .LVU1011
 3237 0340 B6FA86F6 		clz	r6, r6
 3238              	.LVL263:
 3239              	.L182:
ARM GAS  /tmp/ccEuGJBQ.s 			page 279


 3240              		.loc 3 1093 10 view .LVU1012
 3241              	.LBE573:
 3242              	.LBE572:
2896:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                                       sConfig->SamplingTime);
 3243              		.loc 1 2896 50 view .LVU1013
 3244 0344 0136     		adds	r6, r6, #1
 3245 0346 06F01F06 		and	r6, r6, #31
 3246 034a 0127     		movs	r7, #1
 3247 034c 07FA06F6 		lsl	r6, r7, r6
 3248 0350 BAE7     		b	.L181
 3249              	.LVL264:
 3250              	.L208:
 3251              	.LBB575:
 3252              	.LBB574:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 3253              		.loc 3 1091 12 view .LVU1014
 3254 0352 2026     		movs	r6, #32
 3255              	.LVL265:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 3256              		.loc 3 1091 12 view .LVU1015
 3257 0354 F6E7     		b	.L182
 3258              	.L183:
 3259              	.LVL266:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 3260              		.loc 3 1091 12 view .LVU1016
 3261              	.LBE574:
 3262              	.LBE575:
 3263              	.LBB576:
 3264              	.LBI576:
1048:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 3265              		.loc 3 1048 31 is_stmt 1 discriminator 12 view .LVU1017
 3266              	.LBB577:
1050:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 3267              		.loc 3 1050 3 discriminator 12 view .LVU1018
1055:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 3268              		.loc 3 1055 4 discriminator 12 view .LVU1019
 3269              		.syntax unified
 3270              	@ 1055 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3271 0356 92FAA2F2 		rbit r2, r2
 3272              	@ 0 "" 2
 3273              	.LVL267:
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3274              		.loc 3 1068 3 discriminator 12 view .LVU1020
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3275              		.loc 3 1068 3 is_stmt 0 discriminator 12 view .LVU1021
 3276              		.thumb
 3277              		.syntax unified
 3278              	.LBE577:
 3279              	.LBE576:
 3280              	.LBB578:
 3281              	.LBI578:
1078:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 3282              		.loc 3 1078 30 is_stmt 1 discriminator 12 view .LVU1022
 3283              	.LBB579:
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 3284              		.loc 3 1089 3 discriminator 12 view .LVU1023
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
ARM GAS  /tmp/ccEuGJBQ.s 			page 280


 3285              		.loc 3 1089 6 is_stmt 0 discriminator 12 view .LVU1024
 3286 035a 42B1     		cbz	r2, .L209
 3287              		.loc 3 1093 3 is_stmt 1 view .LVU1025
 3288              		.loc 3 1093 10 is_stmt 0 view .LVU1026
 3289 035c B2FA82F2 		clz	r2, r2
 3290              	.LVL268:
 3291              	.L185:
 3292              		.loc 3 1093 10 view .LVU1027
 3293              	.LBE579:
 3294              	.LBE578:
2896:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                                       sConfig->SamplingTime);
 3295              		.loc 1 2896 50 view .LVU1028
 3296 0360 0132     		adds	r2, r2, #1
 3297 0362 02F01F02 		and	r2, r2, #31
 3298 0366 02EB4202 		add	r2, r2, r2, lsl #1
 3299 036a 1205     		lsls	r2, r2, #20
 3300 036c B6E7     		b	.L184
 3301              	.LVL269:
 3302              	.L209:
 3303              	.LBB581:
 3304              	.LBB580:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 3305              		.loc 3 1091 12 view .LVU1029
 3306 036e 2022     		movs	r2, #32
 3307              	.LVL270:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 3308              		.loc 3 1091 12 view .LVU1030
 3309 0370 F6E7     		b	.L185
 3310              	.L231:
 3311 0372 00BF     		.align	2
 3312              	.L230:
 3313 0374 00F0FF03 		.word	67104768
 3314 0378 FFFF0700 		.word	524287
 3315 037c 00007F40 		.word	1082064896
 3316 0380 00000880 		.word	-2146959360
 3317 0384 00030050 		.word	1342178048
 3318 0388 000021C3 		.word	-1021247488
 3319 038c 1000C090 		.word	-1866465264
 3320 0390 000052C7 		.word	-950927360
 3321 0394 000084CB 		.word	-880541696
 3322              	.L176:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 3323              		.loc 3 1091 12 view .LVU1031
 3324              	.LBE580:
 3325              	.LBE581:
2896:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                                       sConfig->SamplingTime);
 3326              		.loc 1 2896 50 view .LVU1032
 3327 0398 CDB9     		cbnz	r5, .L187
2896:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                                       sConfig->SamplingTime);
 3328              		.loc 1 2896 50 discriminator 13 view .LVU1033
 3329 039a 900E     		lsrs	r0, r2, #26
 3330 039c 0130     		adds	r0, r0, #1
 3331 039e 8006     		lsls	r0, r0, #26
 3332 03a0 00F0F840 		and	r0, r0, #2080374784
 3333              	.L188:
2896:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                                       sConfig->SamplingTime);
 3334              		.loc 1 2896 50 discriminator 16 view .LVU1034
ARM GAS  /tmp/ccEuGJBQ.s 			page 281


 3335 03a4 FDB9     		cbnz	r5, .L190
2896:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                                       sConfig->SamplingTime);
 3336              		.loc 1 2896 50 discriminator 17 view .LVU1035
 3337 03a6 970E     		lsrs	r7, r2, #26
 3338 03a8 0137     		adds	r7, r7, #1
 3339 03aa 07F01F07 		and	r7, r7, #31
 3340 03ae 0126     		movs	r6, #1
 3341 03b0 BE40     		lsls	r6, r6, r7
 3342              	.L191:
2896:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                                       sConfig->SamplingTime);
 3343              		.loc 1 2896 50 discriminator 20 view .LVU1036
 3344 03b2 3043     		orrs	r0, r0, r6
 3345 03b4 2DBB     		cbnz	r5, .L193
2896:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                                       sConfig->SamplingTime);
 3346              		.loc 1 2896 50 discriminator 21 view .LVU1037
 3347 03b6 920E     		lsrs	r2, r2, #26
 3348 03b8 0132     		adds	r2, r2, #1
 3349 03ba 02F01F02 		and	r2, r2, #31
 3350 03be 02EB4202 		add	r2, r2, r2, lsl #1
 3351 03c2 1E3A     		subs	r2, r2, #30
 3352 03c4 1205     		lsls	r2, r2, #20
 3353 03c6 42F00072 		orr	r2, r2, #33554432
 3354              	.L194:
2895:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                                       (uint32_t)(__LL_ADC_DECIMAL_NB_TO_CHANNEL((__LL_ADC_CHANNEL_T
 3355              		.loc 1 2895 9 discriminator 2 view .LVU1038
 3356 03ca 1043     		orrs	r0, r0, r2
 3357 03cc 87E7     		b	.L186
 3358              	.L187:
 3359              	.LVL271:
 3360              	.LBB582:
 3361              	.LBI582:
1048:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 3362              		.loc 3 1048 31 is_stmt 1 discriminator 14 view .LVU1039
 3363              	.LBB583:
1050:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 3364              		.loc 3 1050 3 discriminator 14 view .LVU1040
1055:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 3365              		.loc 3 1055 4 discriminator 14 view .LVU1041
 3366              		.syntax unified
 3367              	@ 1055 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3368 03ce 92FAA2F0 		rbit r0, r2
 3369              	@ 0 "" 2
 3370              	.LVL272:
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3371              		.loc 3 1068 3 discriminator 14 view .LVU1042
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3372              		.loc 3 1068 3 is_stmt 0 discriminator 14 view .LVU1043
 3373              		.thumb
 3374              		.syntax unified
 3375              	.LBE583:
 3376              	.LBE582:
 3377              	.LBB584:
 3378              	.LBI584:
1078:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 3379              		.loc 3 1078 30 is_stmt 1 discriminator 14 view .LVU1044
 3380              	.LBB585:
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
ARM GAS  /tmp/ccEuGJBQ.s 			page 282


 3381              		.loc 3 1089 3 discriminator 14 view .LVU1045
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 3382              		.loc 3 1089 6 is_stmt 0 discriminator 14 view .LVU1046
 3383 03d2 30B1     		cbz	r0, .L210
 3384              		.loc 3 1093 3 is_stmt 1 view .LVU1047
 3385              		.loc 3 1093 10 is_stmt 0 view .LVU1048
 3386 03d4 B0FA80F0 		clz	r0, r0
 3387              	.LVL273:
 3388              	.L189:
 3389              		.loc 3 1093 10 view .LVU1049
 3390              	.LBE585:
 3391              	.LBE584:
2896:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                                       sConfig->SamplingTime);
 3392              		.loc 1 2896 50 view .LVU1050
 3393 03d8 0130     		adds	r0, r0, #1
 3394 03da 8006     		lsls	r0, r0, #26
 3395 03dc 00F0F840 		and	r0, r0, #2080374784
 3396 03e0 E0E7     		b	.L188
 3397              	.LVL274:
 3398              	.L210:
 3399              	.LBB587:
 3400              	.LBB586:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 3401              		.loc 3 1091 12 view .LVU1051
 3402 03e2 2020     		movs	r0, #32
 3403              	.LVL275:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 3404              		.loc 3 1091 12 view .LVU1052
 3405 03e4 F8E7     		b	.L189
 3406              	.L190:
 3407              	.LVL276:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 3408              		.loc 3 1091 12 view .LVU1053
 3409              	.LBE586:
 3410              	.LBE587:
 3411              	.LBB588:
 3412              	.LBI588:
1048:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 3413              		.loc 3 1048 31 is_stmt 1 discriminator 18 view .LVU1054
 3414              	.LBB589:
1050:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 3415              		.loc 3 1050 3 discriminator 18 view .LVU1055
1055:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 3416              		.loc 3 1055 4 discriminator 18 view .LVU1056
 3417              		.syntax unified
 3418              	@ 1055 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3419 03e6 92FAA2F6 		rbit r6, r2
 3420              	@ 0 "" 2
 3421              	.LVL277:
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3422              		.loc 3 1068 3 discriminator 18 view .LVU1057
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3423              		.loc 3 1068 3 is_stmt 0 discriminator 18 view .LVU1058
 3424              		.thumb
 3425              		.syntax unified
 3426              	.LBE589:
 3427              	.LBE588:
ARM GAS  /tmp/ccEuGJBQ.s 			page 283


 3428              	.LBB590:
 3429              	.LBI590:
1078:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 3430              		.loc 3 1078 30 is_stmt 1 discriminator 18 view .LVU1059
 3431              	.LBB591:
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 3432              		.loc 3 1089 3 discriminator 18 view .LVU1060
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 3433              		.loc 3 1089 6 is_stmt 0 discriminator 18 view .LVU1061
 3434 03ea 46B1     		cbz	r6, .L211
 3435              		.loc 3 1093 3 is_stmt 1 view .LVU1062
 3436              		.loc 3 1093 10 is_stmt 0 view .LVU1063
 3437 03ec B6FA86F6 		clz	r6, r6
 3438              	.LVL278:
 3439              	.L192:
 3440              		.loc 3 1093 10 view .LVU1064
 3441              	.LBE591:
 3442              	.LBE590:
2896:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                                       sConfig->SamplingTime);
 3443              		.loc 1 2896 50 view .LVU1065
 3444 03f0 0136     		adds	r6, r6, #1
 3445 03f2 06F01F06 		and	r6, r6, #31
 3446 03f6 0127     		movs	r7, #1
 3447 03f8 07FA06F6 		lsl	r6, r7, r6
 3448 03fc D9E7     		b	.L191
 3449              	.LVL279:
 3450              	.L211:
 3451              	.LBB593:
 3452              	.LBB592:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 3453              		.loc 3 1091 12 view .LVU1066
 3454 03fe 2026     		movs	r6, #32
 3455              	.LVL280:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 3456              		.loc 3 1091 12 view .LVU1067
 3457 0400 F6E7     		b	.L192
 3458              	.L193:
 3459              	.LVL281:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 3460              		.loc 3 1091 12 view .LVU1068
 3461              	.LBE592:
 3462              	.LBE593:
 3463              	.LBB594:
 3464              	.LBI594:
1048:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 3465              		.loc 3 1048 31 is_stmt 1 discriminator 22 view .LVU1069
 3466              	.LBB595:
1050:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 3467              		.loc 3 1050 3 discriminator 22 view .LVU1070
1055:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 3468              		.loc 3 1055 4 discriminator 22 view .LVU1071
 3469              		.syntax unified
 3470              	@ 1055 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3471 0402 92FAA2F2 		rbit r2, r2
 3472              	@ 0 "" 2
 3473              	.LVL282:
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  /tmp/ccEuGJBQ.s 			page 284


 3474              		.loc 3 1068 3 discriminator 22 view .LVU1072
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3475              		.loc 3 1068 3 is_stmt 0 discriminator 22 view .LVU1073
 3476              		.thumb
 3477              		.syntax unified
 3478              	.LBE595:
 3479              	.LBE594:
 3480              	.LBB596:
 3481              	.LBI596:
1078:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 3482              		.loc 3 1078 30 is_stmt 1 discriminator 22 view .LVU1074
 3483              	.LBB597:
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 3484              		.loc 3 1089 3 discriminator 22 view .LVU1075
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 3485              		.loc 3 1089 6 is_stmt 0 discriminator 22 view .LVU1076
 3486 0406 5AB1     		cbz	r2, .L212
 3487              		.loc 3 1093 3 is_stmt 1 view .LVU1077
 3488              		.loc 3 1093 10 is_stmt 0 view .LVU1078
 3489 0408 B2FA82F2 		clz	r2, r2
 3490              	.LVL283:
 3491              	.L195:
 3492              		.loc 3 1093 10 view .LVU1079
 3493              	.LBE597:
 3494              	.LBE596:
2896:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                                       sConfig->SamplingTime);
 3495              		.loc 1 2896 50 view .LVU1080
 3496 040c 0132     		adds	r2, r2, #1
 3497 040e 02F01F02 		and	r2, r2, #31
 3498 0412 02EB4202 		add	r2, r2, r2, lsl #1
 3499 0416 1E3A     		subs	r2, r2, #30
 3500 0418 1205     		lsls	r2, r2, #20
 3501 041a 42F00072 		orr	r2, r2, #33554432
 3502 041e D4E7     		b	.L194
 3503              	.LVL284:
 3504              	.L212:
 3505              	.LBB599:
 3506              	.LBB598:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 3507              		.loc 3 1091 12 view .LVU1081
 3508 0420 2022     		movs	r2, #32
 3509              	.LVL285:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 3510              		.loc 3 1091 12 view .LVU1082
 3511 0422 F3E7     		b	.L195
 3512              	.LVL286:
 3513              	.L196:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 3514              		.loc 3 1091 12 view .LVU1083
 3515              	.LBE598:
 3516              	.LBE599:
2915:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 3517              		.loc 1 2915 11 view .LVU1084
 3518 0424 11F4000F 		tst	r1, #8388608
 3519 0428 7FF4A5AE 		bne	.L197
2917:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
 3520              		.loc 1 2917 9 is_stmt 1 view .LVU1085
ARM GAS  /tmp/ccEuGJBQ.s 			page 285


2917:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
 3521              		.loc 1 2917 13 is_stmt 0 view .LVU1086
 3522 042c 1A68     		ldr	r2, [r3]
2917:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
 3523              		.loc 1 2917 12 view .LVU1087
 3524 042e B2F1A04F 		cmp	r2, #1342177280
 3525 0432 01D0     		beq	.L228
2767:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t tmpOffsetShifted;
 3526              		.loc 1 2767 21 view .LVU1088
 3527 0434 0020     		movs	r0, #0
 3528              	.LVL287:
2767:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t tmpOffsetShifted;
 3529              		.loc 1 2767 21 view .LVU1089
 3530 0436 FAE5     		b	.L149
 3531              	.LVL288:
 3532              	.L228:
2919:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                                          LL_ADC_PATH_INTERNAL_TEMPSENSOR | tmp_config_internal_chan
 3533              		.loc 1 2919 11 is_stmt 1 view .LVU1090
 3534 0438 40F40000 		orr	r0, r0, #8388608
 3535              	.LVL289:
 3536              	.LBB600:
 3537              	.LBI600:
2797:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 3538              		.loc 2 2797 22 view .LVU1091
 3539              	.LBB601:
2799:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 3540              		.loc 2 2799 3 view .LVU1092
 3541 043c 2349     		ldr	r1, .L232
 3542              	.LVL290:
2799:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 3543              		.loc 2 2799 3 is_stmt 0 view .LVU1093
 3544 043e 8A68     		ldr	r2, [r1, #8]
 3545 0440 22F0E072 		bic	r2, r2, #29360128
 3546 0444 1043     		orrs	r0, r0, r2
 3547              	.LVL291:
2799:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 3548              		.loc 2 2799 3 view .LVU1094
 3549 0446 8860     		str	r0, [r1, #8]
 3550              	.LVL292:
2799:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 3551              		.loc 2 2799 3 view .LVU1095
 3552              	.LBE601:
 3553              	.LBE600:
2927:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           while (wait_loop_index != 0UL)
 3554              		.loc 1 2927 11 is_stmt 1 view .LVU1096
2927:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           while (wait_loop_index != 0UL)
 3555              		.loc 1 2927 91 is_stmt 0 view .LVU1097
 3556 0448 214A     		ldr	r2, .L232+4
 3557 044a 1268     		ldr	r2, [r2]
 3558 044c 9209     		lsrs	r2, r2, #6
 3559 044e 2149     		ldr	r1, .L232+8
 3560 0450 A1FB0212 		umull	r1, r2, r1, r2
 3561 0454 9209     		lsrs	r2, r2, #6
2927:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           while (wait_loop_index != 0UL)
 3562              		.loc 1 2927 71 view .LVU1098
 3563 0456 0132     		adds	r2, r2, #1
 3564 0458 02EB4202 		add	r2, r2, r2, lsl #1
ARM GAS  /tmp/ccEuGJBQ.s 			page 286


 3565 045c 9200     		lsls	r2, r2, #2
2927:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           while (wait_loop_index != 0UL)
 3566              		.loc 1 2927 27 view .LVU1099
 3567 045e 0192     		str	r2, [sp, #4]
2928:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           {
 3568              		.loc 1 2928 11 is_stmt 1 view .LVU1100
 3569              	.L198:
2928:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           {
 3570              		.loc 1 2928 34 view .LVU1101
 3571 0460 019A     		ldr	r2, [sp, #4]
 3572 0462 1AB1     		cbz	r2, .L229
2930:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           }
 3573              		.loc 1 2930 13 view .LVU1102
2930:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           }
 3574              		.loc 1 2930 28 is_stmt 0 view .LVU1103
 3575 0464 019A     		ldr	r2, [sp, #4]
 3576 0466 013A     		subs	r2, r2, #1
 3577 0468 0192     		str	r2, [sp, #4]
 3578 046a F9E7     		b	.L198
 3579              	.L229:
2767:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t tmpOffsetShifted;
 3580              		.loc 1 2767 21 view .LVU1104
 3581 046c 0020     		movs	r0, #0
 3582 046e DEE5     		b	.L149
 3583              	.LVL293:
 3584              	.L223:
2934:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 3585              		.loc 1 2934 55 discriminator 1 view .LVU1105
 3586 0470 11F0807F 		tst	r1, #16777216
 3587 0474 7FF483AE 		bne	.L200
2936:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
 3588              		.loc 1 2936 9 is_stmt 1 view .LVU1106
2936:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
 3589              		.loc 1 2936 13 is_stmt 0 view .LVU1107
 3590 0478 1968     		ldr	r1, [r3]
2936:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
 3591              		.loc 1 2936 12 view .LVU1108
 3592 047a 174A     		ldr	r2, .L232+12
 3593 047c 9142     		cmp	r1, r2
 3594 047e 1CD0     		beq	.L215
2938:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                                          LL_ADC_PATH_INTERNAL_VBAT | tmp_config_internal_channel);
 3595              		.loc 1 2938 11 is_stmt 1 view .LVU1109
 3596 0480 40F08070 		orr	r0, r0, #16777216
 3597              	.LVL294:
 3598              	.LBB602:
 3599              	.LBI602:
2797:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 3600              		.loc 2 2797 22 view .LVU1110
 3601              	.LBB603:
2799:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 3602              		.loc 2 2799 3 view .LVU1111
 3603 0484 1149     		ldr	r1, .L232
 3604 0486 8A68     		ldr	r2, [r1, #8]
 3605 0488 22F0E072 		bic	r2, r2, #29360128
 3606 048c 1043     		orrs	r0, r0, r2
 3607              	.LVL295:
2799:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
ARM GAS  /tmp/ccEuGJBQ.s 			page 287


 3608              		.loc 2 2799 3 is_stmt 0 view .LVU1112
 3609 048e 8860     		str	r0, [r1, #8]
 3610              	.LBE603:
 3611              	.LBE602:
2767:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t tmpOffsetShifted;
 3612              		.loc 1 2767 21 view .LVU1113
 3613 0490 0020     		movs	r0, #0
 3614              	.LBB605:
 3615              	.LBB604:
2800:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 3616              		.loc 2 2800 1 view .LVU1114
 3617 0492 CCE5     		b	.L149
 3618              	.LVL296:
 3619              	.L224:
2800:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 3620              		.loc 2 2800 1 view .LVU1115
 3621              	.LBE604:
 3622              	.LBE605:
2943:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 3623              		.loc 1 2943 16 view .LVU1116
 3624 0494 11F4800F 		tst	r1, #4194304
 3625 0498 11D1     		bne	.L217
2945:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
 3626              		.loc 1 2945 9 is_stmt 1 view .LVU1117
2945:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
 3627              		.loc 1 2945 13 is_stmt 0 view .LVU1118
 3628 049a 1968     		ldr	r1, [r3]
2945:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
 3629              		.loc 1 2945 12 view .LVU1119
 3630 049c 0E4A     		ldr	r2, .L232+12
 3631 049e 9142     		cmp	r1, r2
 3632 04a0 0FD0     		beq	.L218
2947:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                                          LL_ADC_PATH_INTERNAL_VREFINT | tmp_config_internal_channel
 3633              		.loc 1 2947 11 is_stmt 1 view .LVU1120
 3634 04a2 40F48002 		orr	r2, r0, #4194304
 3635              	.LVL297:
 3636              	.LBB606:
 3637              	.LBI606:
2797:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 3638              		.loc 2 2797 22 view .LVU1121
 3639              	.LBB607:
2799:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 3640              		.loc 2 2799 3 view .LVU1122
 3641 04a6 0948     		ldr	r0, .L232
 3642              	.LVL298:
2799:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 3643              		.loc 2 2799 3 is_stmt 0 view .LVU1123
 3644 04a8 8168     		ldr	r1, [r0, #8]
 3645 04aa 21F0E071 		bic	r1, r1, #29360128
 3646 04ae 0A43     		orrs	r2, r2, r1
 3647              	.LVL299:
2799:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 3648              		.loc 2 2799 3 view .LVU1124
 3649 04b0 8260     		str	r2, [r0, #8]
 3650              	.LBE607:
 3651              	.LBE606:
2767:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t tmpOffsetShifted;
ARM GAS  /tmp/ccEuGJBQ.s 			page 288


 3652              		.loc 1 2767 21 view .LVU1125
 3653 04b2 0020     		movs	r0, #0
 3654              	.LBB609:
 3655              	.LBB608:
2800:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 3656              		.loc 2 2800 1 view .LVU1126
 3657 04b4 BBE5     		b	.L149
 3658              	.LVL300:
 3659              	.L213:
2800:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 3660              		.loc 2 2800 1 view .LVU1127
 3661              	.LBE608:
 3662              	.LBE609:
2767:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t tmpOffsetShifted;
 3663              		.loc 1 2767 21 view .LVU1128
 3664 04b6 0020     		movs	r0, #0
 3665 04b8 B9E5     		b	.L149
 3666              	.LVL301:
 3667              	.L215:
2767:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t tmpOffsetShifted;
 3668              		.loc 1 2767 21 view .LVU1129
 3669 04ba 0020     		movs	r0, #0
 3670              	.LVL302:
2767:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t tmpOffsetShifted;
 3671              		.loc 1 2767 21 view .LVU1130
 3672 04bc B7E5     		b	.L149
 3673              	.LVL303:
 3674              	.L217:
2767:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t tmpOffsetShifted;
 3675              		.loc 1 2767 21 view .LVU1131
 3676 04be 0020     		movs	r0, #0
 3677              	.LVL304:
2767:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t tmpOffsetShifted;
 3678              		.loc 1 2767 21 view .LVU1132
 3679 04c0 B5E5     		b	.L149
 3680              	.LVL305:
 3681              	.L218:
2767:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t tmpOffsetShifted;
 3682              		.loc 1 2767 21 view .LVU1133
 3683 04c2 0020     		movs	r0, #0
 3684              	.LVL306:
2767:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t tmpOffsetShifted;
 3685              		.loc 1 2767 21 view .LVU1134
 3686 04c4 B3E5     		b	.L149
 3687              	.LVL307:
 3688              	.L201:
2797:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 3689              		.loc 1 2797 3 view .LVU1135
 3690 04c6 0220     		movs	r0, #2
 3691              	.LVL308:
2797:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 3692              		.loc 1 2797 3 view .LVU1136
 3693 04c8 B4E5     		b	.L147
 3694              	.L233:
 3695 04ca 00BF     		.align	2
 3696              	.L232:
 3697 04cc 00030050 		.word	1342178048
ARM GAS  /tmp/ccEuGJBQ.s 			page 289


 3698 04d0 00000000 		.word	SystemCoreClock
 3699 04d4 632D3E05 		.word	87960931
 3700 04d8 00010050 		.word	1342177536
 3701              		.cfi_endproc
 3702              	.LFE349:
 3704              		.section	.text.HAL_ADC_AnalogWDGConfig,"ax",%progbits
 3705              		.align	1
 3706              		.global	HAL_ADC_AnalogWDGConfig
 3707              		.syntax unified
 3708              		.thumb
 3709              		.thumb_func
 3711              	HAL_ADC_AnalogWDGConfig:
 3712              	.LVL309:
 3713              	.LFB350:
2999:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 3714              		.loc 1 2999 1 is_stmt 1 view -0
 3715              		.cfi_startproc
 3716              		@ args = 0, pretend = 0, frame = 0
 3717              		@ frame_needed = 0, uses_anonymous_args = 0
3000:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t tmpAWDHighThresholdShifted;
 3718              		.loc 1 3000 3 view .LVU1138
3001:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t tmpAWDLowThresholdShifted;
 3719              		.loc 1 3001 3 view .LVU1139
3002:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t tmp_adc_is_conversion_on_going_regular;
 3720              		.loc 1 3002 3 view .LVU1140
3003:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t tmp_adc_is_conversion_on_going_injected;
 3721              		.loc 1 3003 3 view .LVU1141
3004:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 3722              		.loc 1 3004 3 view .LVU1142
3007:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   assert_param(IS_ADC_ANALOG_WATCHDOG_NUMBER(AnalogWDGConfig->WatchdogNumber));
 3723              		.loc 1 3007 3 view .LVU1143
3008:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   assert_param(IS_ADC_ANALOG_WATCHDOG_MODE(AnalogWDGConfig->WatchdogMode));
 3724              		.loc 1 3008 3 view .LVU1144
3009:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   assert_param(IS_ADC_ANALOG_WATCHDOG_FILTERING_MODE(AnalogWDGConfig->FilteringConfig));
 3725              		.loc 1 3009 3 view .LVU1145
3010:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(AnalogWDGConfig->ITMode));
 3726              		.loc 1 3010 3 view .LVU1146
3011:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 3727              		.loc 1 3011 3 view .LVU1147
3013:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       (AnalogWDGConfig->WatchdogMode == ADC_ANALOGWATCHDOG_SINGLE_INJEC)   ||
 3728              		.loc 1 3013 3 view .LVU1148
3017:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
 3729              		.loc 1 3017 5 view .LVU1149
3021:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
 3730              		.loc 1 3021 3 view .LVU1150
3032:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     assert_param(IS_ADC_RANGE(ADC_GET_RESOLUTION(hadc), AnalogWDGConfig->LowThreshold));
 3731              		.loc 1 3032 5 view .LVU1151
3033:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
 3732              		.loc 1 3033 5 view .LVU1152
3037:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 3733              		.loc 1 3037 3 view .LVU1153
3037:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 3734              		.loc 1 3037 3 view .LVU1154
 3735 0000 90F85820 		ldrb	r2, [r0, #88]	@ zero_extendqisi2
 3736 0004 012A     		cmp	r2, #1
 3737 0006 00F09381 		beq	.L270
2999:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
ARM GAS  /tmp/ccEuGJBQ.s 			page 290


 3738              		.loc 1 2999 1 is_stmt 0 discriminator 2 view .LVU1155
 3739 000a 30B5     		push	{r4, r5, lr}
 3740              	.LCFI14:
 3741              		.cfi_def_cfa_offset 12
 3742              		.cfi_offset 4, -12
 3743              		.cfi_offset 5, -8
 3744              		.cfi_offset 14, -4
 3745 000c 0346     		mov	r3, r0
3037:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 3746              		.loc 1 3037 3 is_stmt 1 discriminator 2 view .LVU1156
 3747 000e 0122     		movs	r2, #1
 3748 0010 80F85820 		strb	r2, [r0, #88]
3037:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 3749              		.loc 1 3037 3 discriminator 2 view .LVU1157
3043:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   tmp_adc_is_conversion_on_going_injected = LL_ADC_INJ_IsConversionOngoing(hadc->Instance);
 3750              		.loc 1 3043 3 discriminator 2 view .LVU1158
3043:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   tmp_adc_is_conversion_on_going_injected = LL_ADC_INJ_IsConversionOngoing(hadc->Instance);
 3751              		.loc 1 3043 44 is_stmt 0 discriminator 2 view .LVU1159
 3752 0014 0468     		ldr	r4, [r0]
 3753              	.LVL310:
 3754              	.LBB660:
 3755              	.LBI660:
6844:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 3756              		.loc 2 6844 26 is_stmt 1 discriminator 2 view .LVU1160
 3757              	.LBB661:
6846:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 3758              		.loc 2 6846 3 discriminator 2 view .LVU1161
6846:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 3759              		.loc 2 6846 12 is_stmt 0 discriminator 2 view .LVU1162
 3760 0016 A268     		ldr	r2, [r4, #8]
6846:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 3761              		.loc 2 6846 74 discriminator 2 view .LVU1163
 3762 0018 12F00402 		ands	r2, r2, #4
 3763 001c 00D0     		beq	.L236
6846:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 3764              		.loc 2 6846 74 view .LVU1164
 3765 001e 0122     		movs	r2, #1
 3766              	.L236:
 3767              	.LVL311:
6846:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 3768              		.loc 2 6846 74 view .LVU1165
 3769              	.LBE661:
 3770              	.LBE660:
3044:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   if ((tmp_adc_is_conversion_on_going_regular == 0UL)
 3771              		.loc 1 3044 3 is_stmt 1 view .LVU1166
 3772              	.LBB662:
 3773              	.LBI662:
7069:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 3774              		.loc 2 7069 26 view .LVU1167
 3775              	.LBB663:
 3776              		.loc 2 7071 3 view .LVU1168
 3777              		.loc 2 7071 12 is_stmt 0 view .LVU1169
 3778 0020 A068     		ldr	r0, [r4, #8]
 3779              	.LVL312:
 3780              		.loc 2 7071 76 view .LVU1170
 3781 0022 10F00800 		ands	r0, r0, #8
 3782 0026 00D0     		beq	.L237
ARM GAS  /tmp/ccEuGJBQ.s 			page 291


 3783 0028 0120     		movs	r0, #1
 3784              	.L237:
 3785              	.LVL313:
 3786              		.loc 2 7071 76 view .LVU1171
 3787              	.LBE663:
 3788              	.LBE662:
3045:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       && (tmp_adc_is_conversion_on_going_injected == 0UL)
 3789              		.loc 1 3045 3 is_stmt 1 view .LVU1172
3045:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       && (tmp_adc_is_conversion_on_going_injected == 0UL)
 3790              		.loc 1 3045 6 is_stmt 0 view .LVU1173
 3791 002a 002A     		cmp	r2, #0
 3792 002c 40F01181 		bne	.L238
3046:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****      )
 3793              		.loc 1 3046 7 view .LVU1174
 3794 0030 0028     		cmp	r0, #0
 3795 0032 40F00E81 		bne	.L238
3050:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 3796              		.loc 1 3050 5 is_stmt 1 view .LVU1175
3050:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 3797              		.loc 1 3050 24 is_stmt 0 view .LVU1176
 3798 0036 0A68     		ldr	r2, [r1]
 3799              	.LVL314:
3050:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 3800              		.loc 1 3050 8 view .LVU1177
 3801 0038 B048     		ldr	r0, .L285
 3802              	.LVL315:
3050:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 3803              		.loc 1 3050 8 view .LVU1178
 3804 003a 8242     		cmp	r2, r0
 3805 003c 26D0     		beq	.L277
3116:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 3806              		.loc 1 3116 7 is_stmt 1 view .LVU1179
3116:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 3807              		.loc 1 3116 30 is_stmt 0 view .LVU1180
 3808 003e 4868     		ldr	r0, [r1, #4]
3116:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 3809              		.loc 1 3116 7 view .LVU1181
 3810 0040 B0F1A07F 		cmp	r0, #20971520
 3811 0044 00F0A280 		beq	.L250
 3812 0048 00F29980 		bhi	.L251
 3813 004c B0F5400F 		cmp	r0, #12582912
 3814 0050 00F09C80 		beq	.L250
 3815 0054 B0F1807F 		cmp	r0, #16777216
 3816 0058 00F0CF80 		beq	.L252
 3817 005c B0F5000F 		cmp	r0, #8388608
 3818 0060 00F0CB80 		beq	.L252
 3819              	.L253:
3140:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           break;
 3820              		.loc 1 3140 11 is_stmt 1 view .LVU1182
 3821              	.LVL316:
 3822              	.LBB664:
 3823              	.LBI664:
5718:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 3824              		.loc 2 5718 22 view .LVU1183
 3825              	.LBB665:
5724:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              + ((AWDy & ADC_AWD_CR12_REGOFFSETGAP_MASK) * ADC_AWD_C
 3826              		.loc 2 5724 3 view .LVU1184
ARM GAS  /tmp/ccEuGJBQ.s 			page 292


5724:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              + ((AWDy & ADC_AWD_CR12_REGOFFSETGAP_MASK) * ADC_AWD_C
 3827              		.loc 2 5724 25 is_stmt 0 view .LVU1185
 3828 0064 0C34     		adds	r4, r4, #12
 3829              	.LVL317:
5724:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              + ((AWDy & ADC_AWD_CR12_REGOFFSETGAP_MASK) * ADC_AWD_C
 3830              		.loc 2 5724 25 view .LVU1186
 3831 0066 C2F30150 		ubfx	r0, r2, #20, #2
 3832 006a 02F0010C 		and	ip, r2, #1
 3833 006e 0CEBCC0C 		add	ip, ip, ip, lsl #3
 3834 0072 00EB8C00 		add	r0, r0, ip, lsl #2
 3835              	.LVL318:
5727:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              (AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK),
 3836              		.loc 2 5727 3 is_stmt 1 view .LVU1187
 3837 0076 54F82050 		ldr	r5, [r4, r0, lsl #2]
 3838 007a 22F00242 		bic	r2, r2, #-2113929216
 3839              	.LVL319:
5727:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              (AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK),
 3840              		.loc 2 5727 3 is_stmt 0 view .LVU1188
 3841 007e 22F46012 		bic	r2, r2, #3670016
 3842 0082 25EA0202 		bic	r2, r5, r2
 3843 0086 44F82020 		str	r2, [r4, r0, lsl #2]
 3844              	.LVL320:
5730:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 3845              		.loc 2 5730 1 view .LVU1189
 3846 008a CEE0     		b	.L258
 3847              	.LVL321:
 3848              	.L277:
5730:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 3849              		.loc 2 5730 1 view .LVU1190
 3850              	.LBE665:
 3851              	.LBE664:
3055:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 3852              		.loc 1 3055 7 is_stmt 1 view .LVU1191
3055:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 3853              		.loc 1 3055 30 is_stmt 0 view .LVU1192
 3854 008c 4A68     		ldr	r2, [r1, #4]
3055:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 3855              		.loc 1 3055 7 view .LVU1193
 3856 008e B2F1A07F 		cmp	r2, #20971520
 3857 0092 51D0     		beq	.L240
 3858 0094 1AD8     		bhi	.L241
 3859 0096 B2F5400F 		cmp	r2, #12582912
 3860 009a 2AD0     		beq	.L242
 3861 009c B2F1807F 		cmp	r2, #16777216
 3862 00a0 08D1     		bne	.L278
3077:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           break;
 3863              		.loc 1 3077 11 is_stmt 1 view .LVU1194
 3864              	.LVL322:
 3865              	.LBB666:
 3866              	.LBI666:
5718:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 3867              		.loc 2 5718 22 view .LVU1195
 3868              	.LBB667:
5724:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              + ((AWDy & ADC_AWD_CR12_REGOFFSETGAP_MASK) * ADC_AWD_C
 3869              		.loc 2 5724 3 view .LVU1196
5727:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              (AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK),
 3870              		.loc 2 5727 3 view .LVU1197
ARM GAS  /tmp/ccEuGJBQ.s 			page 293


 3871 00a2 E268     		ldr	r2, [r4, #12]
 3872 00a4 22F0FB42 		bic	r2, r2, #2105540608
 3873 00a8 22F48002 		bic	r2, r2, #4194304
 3874 00ac 42F08072 		orr	r2, r2, #16777216
 3875 00b0 E260     		str	r2, [r4, #12]
5730:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 3876              		.loc 2 5730 1 is_stmt 0 view .LVU1198
 3877 00b2 2AE0     		b	.L248
 3878              	.LVL323:
 3879              	.L278:
5730:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 3880              		.loc 2 5730 1 view .LVU1199
 3881              	.LBE667:
 3882              	.LBE666:
3055:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 3883              		.loc 1 3055 7 view .LVU1200
 3884 00b4 B2F5000F 		cmp	r2, #8388608
 3885 00b8 54D1     		bne	.L245
3073:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           break;
 3886              		.loc 1 3073 11 is_stmt 1 view .LVU1201
 3887              	.LVL324:
 3888              	.LBB668:
 3889              	.LBI668:
5718:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 3890              		.loc 2 5718 22 view .LVU1202
 3891              	.LBB669:
5724:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              + ((AWDy & ADC_AWD_CR12_REGOFFSETGAP_MASK) * ADC_AWD_C
 3892              		.loc 2 5724 3 view .LVU1203
5727:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              (AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK),
 3893              		.loc 2 5727 3 view .LVU1204
 3894 00ba E268     		ldr	r2, [r4, #12]
 3895 00bc 22F0FB42 		bic	r2, r2, #2105540608
 3896 00c0 22F48002 		bic	r2, r2, #4194304
 3897 00c4 42F40002 		orr	r2, r2, #8388608
 3898 00c8 E260     		str	r2, [r4, #12]
5730:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 3899              		.loc 2 5730 1 is_stmt 0 view .LVU1205
 3900 00ca 1EE0     		b	.L248
 3901              	.LVL325:
 3902              	.L241:
5730:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 3903              		.loc 2 5730 1 view .LVU1206
 3904              	.LBE669:
 3905              	.LBE668:
3055:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 3906              		.loc 1 3055 7 view .LVU1207
 3907 00cc B2F1C07F 		cmp	r2, #25165824
 3908 00d0 3FD0     		beq	.L246
 3909 00d2 B2F1E07F 		cmp	r2, #29360128
 3910 00d6 45D1     		bne	.L245
3068:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                                           LL_ADC_GROUP_REGULAR_INJECTED));
 3911              		.loc 1 3068 11 is_stmt 1 view .LVU1208
3068:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                                           LL_ADC_GROUP_REGULAR_INJECTED));
 3912              		.loc 1 3068 72 is_stmt 0 view .LVU1209
 3913 00d8 8868     		ldr	r0, [r1, #8]
 3914              	.LVL326:
 3915              	.LBB670:
ARM GAS  /tmp/ccEuGJBQ.s 			page 294


 3916              	.LBI670:
5718:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 3917              		.loc 2 5718 22 is_stmt 1 view .LVU1210
 3918              	.LBB671:
5724:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              + ((AWDy & ADC_AWD_CR12_REGOFFSETGAP_MASK) * ADC_AWD_C
 3919              		.loc 2 5724 3 view .LVU1211
5727:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              (AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK),
 3920              		.loc 2 5727 3 view .LVU1212
 3921 00da E268     		ldr	r2, [r4, #12]
 3922 00dc 22F0FB42 		bic	r2, r2, #2105540608
 3923 00e0 22F48002 		bic	r2, r2, #4194304
 3924 00e4 00F0F840 		and	r0, r0, #2080374784
 3925              	.LVL327:
5727:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              (AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK),
 3926              		.loc 2 5727 3 is_stmt 0 view .LVU1213
 3927 00e8 40F0E070 		orr	r0, r0, #29360128
 3928 00ec 0243     		orrs	r2, r2, r0
 3929 00ee E260     		str	r2, [r4, #12]
 3930              	.LVL328:
5730:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 3931              		.loc 2 5730 1 view .LVU1214
 3932 00f0 0BE0     		b	.L248
 3933              	.LVL329:
 3934              	.L242:
5730:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 3935              		.loc 2 5730 1 view .LVU1215
 3936              	.LBE671:
 3937              	.LBE670:
3058:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                                           LL_ADC_GROUP_REGULAR));
 3938              		.loc 1 3058 11 is_stmt 1 view .LVU1216
3058:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                                           LL_ADC_GROUP_REGULAR));
 3939              		.loc 1 3058 72 is_stmt 0 view .LVU1217
 3940 00f2 8868     		ldr	r0, [r1, #8]
 3941              	.LVL330:
 3942              	.LBB672:
 3943              	.LBI672:
5718:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 3944              		.loc 2 5718 22 is_stmt 1 view .LVU1218
 3945              	.LBB673:
5724:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              + ((AWDy & ADC_AWD_CR12_REGOFFSETGAP_MASK) * ADC_AWD_C
 3946              		.loc 2 5724 3 view .LVU1219
5727:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              (AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK),
 3947              		.loc 2 5727 3 view .LVU1220
 3948 00f4 E268     		ldr	r2, [r4, #12]
 3949 00f6 22F0FB42 		bic	r2, r2, #2105540608
 3950 00fa 22F48002 		bic	r2, r2, #4194304
 3951 00fe 00F0F840 		and	r0, r0, #2080374784
 3952              	.LVL331:
5727:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              (AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK),
 3953              		.loc 2 5727 3 is_stmt 0 view .LVU1221
 3954 0102 40F44000 		orr	r0, r0, #12582912
 3955 0106 0243     		orrs	r2, r2, r0
 3956 0108 E260     		str	r2, [r4, #12]
 3957              	.LVL332:
 3958              	.L248:
5727:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              (AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK),
 3959              		.loc 2 5727 3 view .LVU1222
ARM GAS  /tmp/ccEuGJBQ.s 			page 295


 3960              	.LBE673:
 3961              	.LBE672:
3090:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                  ADC_TR1_AWDFILT,
 3962              		.loc 1 3090 7 is_stmt 1 view .LVU1223
 3963 010a 1868     		ldr	r0, [r3]
 3964 010c 026A     		ldr	r2, [r0, #32]
 3965 010e 22F4E042 		bic	r2, r2, #28672
 3966 0112 8C69     		ldr	r4, [r1, #24]
 3967 0114 2243     		orrs	r2, r2, r4
 3968 0116 0262     		str	r2, [r0, #32]
3095:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 3969              		.loc 1 3095 7 view .LVU1224
 3970 0118 DA6D     		ldr	r2, [r3, #92]
 3971 011a 22F48032 		bic	r2, r2, #65536
 3972 011e DA65     		str	r2, [r3, #92]
3101:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 3973              		.loc 1 3101 7 view .LVU1225
 3974 0120 1A68     		ldr	r2, [r3]
 3975              	.LVL333:
 3976              	.LBB674:
 3977              	.LBI674:
7072:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7073:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7074:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7075:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC group injected command of conversion stop state
7076:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CR       JADSTP         LL_ADC_INJ_IsStopConversionOngoing
7077:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
7078:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval 0: no command of conversion stop is on going on ADC group injected.
7079:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7080:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_IsStopConversionOngoing(ADC_TypeDef *ADCx)
7081:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7082:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_JADSTP) == (ADC_CR_JADSTP)) ? 1UL : 0UL);
7083:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7084:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7085:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7086:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC group injected conversion data, range fit for
7087:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         all ADC configurations: all ADC resolutions and
7088:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         all oversampling increased data width (for devices
7089:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         with feature oversampling).
7090:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll JDR1     JDATA          LL_ADC_INJ_ReadConversionData32\n
7091:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         JDR2     JDATA          LL_ADC_INJ_ReadConversionData32\n
7092:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         JDR3     JDATA          LL_ADC_INJ_ReadConversionData32\n
7093:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         JDR4     JDATA          LL_ADC_INJ_ReadConversionData32
7094:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
7095:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  Rank This parameter can be one of the following values:
7096:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_1
7097:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_2
7098:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_3
7099:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_4
7100:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Value between Min_Data=0x00000000 and Max_Data=0xFFFFFFFF
7101:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7102:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_ReadConversionData32(ADC_TypeDef *ADCx, uint32_t Rank)
7103:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7104:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->JDR1, ((Rank & ADC_INJ_JDRX_REGOFFSET_MASK
7105:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7106:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(*preg,
7107:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                              ADC_JDR1_JDATA)
ARM GAS  /tmp/ccEuGJBQ.s 			page 296


7108:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                    );
7109:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7110:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7111:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7112:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC group injected conversion data, range fit for
7113:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC resolution 12 bits.
7114:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   For devices with feature oversampling: Oversampling
7115:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         can increase data width, function for extended range
7116:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         may be needed: @ref LL_ADC_INJ_ReadConversionData32.
7117:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll JDR1     JDATA          LL_ADC_INJ_ReadConversionData12\n
7118:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         JDR2     JDATA          LL_ADC_INJ_ReadConversionData12\n
7119:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         JDR3     JDATA          LL_ADC_INJ_ReadConversionData12\n
7120:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         JDR4     JDATA          LL_ADC_INJ_ReadConversionData12
7121:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
7122:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  Rank This parameter can be one of the following values:
7123:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_1
7124:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_2
7125:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_3
7126:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_4
7127:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
7128:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7129:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint16_t LL_ADC_INJ_ReadConversionData12(ADC_TypeDef *ADCx, uint32_t Rank)
7130:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7131:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->JDR1, ((Rank & ADC_INJ_JDRX_REGOFFSET_MASK
7132:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7133:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint16_t)(READ_BIT(*preg,
7134:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                              ADC_JDR1_JDATA)
7135:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                    );
7136:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7137:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7138:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7139:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC group injected conversion data, range fit for
7140:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC resolution 10 bits.
7141:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   For devices with feature oversampling: Oversampling
7142:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         can increase data width, function for extended range
7143:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         may be needed: @ref LL_ADC_INJ_ReadConversionData32.
7144:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll JDR1     JDATA          LL_ADC_INJ_ReadConversionData10\n
7145:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         JDR2     JDATA          LL_ADC_INJ_ReadConversionData10\n
7146:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         JDR3     JDATA          LL_ADC_INJ_ReadConversionData10\n
7147:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         JDR4     JDATA          LL_ADC_INJ_ReadConversionData10
7148:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
7149:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  Rank This parameter can be one of the following values:
7150:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_1
7151:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_2
7152:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_3
7153:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_4
7154:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0x3FF
7155:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7156:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint16_t LL_ADC_INJ_ReadConversionData10(ADC_TypeDef *ADCx, uint32_t Rank)
7157:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7158:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->JDR1, ((Rank & ADC_INJ_JDRX_REGOFFSET_MASK
7159:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7160:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint16_t)(READ_BIT(*preg,
7161:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                              ADC_JDR1_JDATA)
7162:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                    );
7163:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7164:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
ARM GAS  /tmp/ccEuGJBQ.s 			page 297


7165:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7166:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC group injected conversion data, range fit for
7167:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC resolution 8 bits.
7168:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   For devices with feature oversampling: Oversampling
7169:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         can increase data width, function for extended range
7170:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         may be needed: @ref LL_ADC_INJ_ReadConversionData32.
7171:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll JDR1     JDATA          LL_ADC_INJ_ReadConversionData8\n
7172:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         JDR2     JDATA          LL_ADC_INJ_ReadConversionData8\n
7173:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         JDR3     JDATA          LL_ADC_INJ_ReadConversionData8\n
7174:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         JDR4     JDATA          LL_ADC_INJ_ReadConversionData8
7175:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
7176:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  Rank This parameter can be one of the following values:
7177:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_1
7178:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_2
7179:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_3
7180:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_4
7181:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0xFF
7182:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7183:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint8_t LL_ADC_INJ_ReadConversionData8(ADC_TypeDef *ADCx, uint32_t Rank)
7184:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7185:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->JDR1, ((Rank & ADC_INJ_JDRX_REGOFFSET_MASK
7186:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7187:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint8_t)(READ_BIT(*preg,
7188:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                             ADC_JDR1_JDATA)
7189:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                   );
7190:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7191:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7192:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7193:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC group injected conversion data, range fit for
7194:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC resolution 6 bits.
7195:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   For devices with feature oversampling: Oversampling
7196:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         can increase data width, function for extended range
7197:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         may be needed: @ref LL_ADC_INJ_ReadConversionData32.
7198:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll JDR1     JDATA          LL_ADC_INJ_ReadConversionData6\n
7199:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         JDR2     JDATA          LL_ADC_INJ_ReadConversionData6\n
7200:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         JDR3     JDATA          LL_ADC_INJ_ReadConversionData6\n
7201:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         JDR4     JDATA          LL_ADC_INJ_ReadConversionData6
7202:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
7203:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  Rank This parameter can be one of the following values:
7204:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_1
7205:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_2
7206:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_3
7207:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_4
7208:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0x3F
7209:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7210:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint8_t LL_ADC_INJ_ReadConversionData6(ADC_TypeDef *ADCx, uint32_t Rank)
7211:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7212:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->JDR1, ((Rank & ADC_INJ_JDRX_REGOFFSET_MASK
7213:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7214:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint8_t)(READ_BIT(*preg,
7215:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                             ADC_JDR1_JDATA)
7216:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                   );
7217:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7218:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7219:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7220:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
7221:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
ARM GAS  /tmp/ccEuGJBQ.s 			page 298


7222:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7223:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EF_FLAG_Management ADC flag management
7224:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
7225:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7226:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7227:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7228:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get flag ADC ready.
7229:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, flag LL_ADC_FLAG_ADRDY is raised when the ADC
7230:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         is enabled and when conversion clock is active.
7231:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (not only core clock: this ADC has a dual clock domain)
7232:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll ISR      ADRDY          LL_ADC_IsActiveFlag_ADRDY
7233:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
7234:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7235:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7236:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_ADRDY(ADC_TypeDef *ADCx)
7237:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7238:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, LL_ADC_FLAG_ADRDY) == (LL_ADC_FLAG_ADRDY)) ? 1UL : 0UL);
7239:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7240:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7241:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7242:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get flag ADC group regular end of unitary conversion.
7243:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll ISR      EOC            LL_ADC_IsActiveFlag_EOC
7244:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
7245:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7246:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7247:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_EOC(ADC_TypeDef *ADCx)
7248:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7249:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, ADC_ISR_EOC) == (ADC_ISR_EOC)) ? 1UL : 0UL);
7250:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7251:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7252:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7253:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get flag ADC group regular end of sequence conversions.
7254:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll ISR      EOS            LL_ADC_IsActiveFlag_EOS
7255:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
7256:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7257:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7258:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_EOS(ADC_TypeDef *ADCx)
7259:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7260:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, LL_ADC_FLAG_EOS) == (LL_ADC_FLAG_EOS)) ? 1UL : 0UL);
7261:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7262:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7263:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7264:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get flag ADC group regular overrun.
7265:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll ISR      OVR            LL_ADC_IsActiveFlag_OVR
7266:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
7267:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7268:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7269:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_OVR(ADC_TypeDef *ADCx)
7270:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7271:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, LL_ADC_FLAG_OVR) == (LL_ADC_FLAG_OVR)) ? 1UL : 0UL);
7272:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7273:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7274:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7275:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get flag ADC group regular end of sampling phase.
7276:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll ISR      EOSMP          LL_ADC_IsActiveFlag_EOSMP
7277:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
7278:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
ARM GAS  /tmp/ccEuGJBQ.s 			page 299


7279:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7280:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_EOSMP(ADC_TypeDef *ADCx)
7281:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7282:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, LL_ADC_FLAG_EOSMP) == (LL_ADC_FLAG_EOSMP)) ? 1UL : 0UL);
7283:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7284:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7285:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7286:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get flag ADC group injected end of unitary conversion.
7287:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll ISR      JEOC           LL_ADC_IsActiveFlag_JEOC
7288:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
7289:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7290:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7291:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_JEOC(ADC_TypeDef *ADCx)
7292:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7293:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, LL_ADC_FLAG_JEOC) == (LL_ADC_FLAG_JEOC)) ? 1UL : 0UL);
7294:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7295:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7296:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7297:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get flag ADC group injected end of sequence conversions.
7298:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll ISR      JEOS           LL_ADC_IsActiveFlag_JEOS
7299:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
7300:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7301:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7302:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_JEOS(ADC_TypeDef *ADCx)
7303:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7304:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, LL_ADC_FLAG_JEOS) == (LL_ADC_FLAG_JEOS)) ? 1UL : 0UL);
7305:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7306:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7307:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7308:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get flag ADC group injected contexts queue overflow.
7309:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll ISR      JQOVF          LL_ADC_IsActiveFlag_JQOVF
7310:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
7311:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7312:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7313:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_JQOVF(ADC_TypeDef *ADCx)
7314:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7315:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, LL_ADC_FLAG_JQOVF) == (LL_ADC_FLAG_JQOVF)) ? 1UL : 0UL);
7316:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7317:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7318:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7319:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get flag ADC analog watchdog 1 flag
7320:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll ISR      AWD1           LL_ADC_IsActiveFlag_AWD1
7321:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
7322:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7323:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7324:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_AWD1(ADC_TypeDef *ADCx)
7325:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7326:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, LL_ADC_FLAG_AWD1) == (LL_ADC_FLAG_AWD1)) ? 1UL : 0UL);
7327:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7328:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7329:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7330:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get flag ADC analog watchdog 2.
7331:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll ISR      AWD2           LL_ADC_IsActiveFlag_AWD2
7332:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
7333:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7334:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7335:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_AWD2(ADC_TypeDef *ADCx)
ARM GAS  /tmp/ccEuGJBQ.s 			page 300


7336:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7337:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, LL_ADC_FLAG_AWD2) == (LL_ADC_FLAG_AWD2)) ? 1UL : 0UL);
7338:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7339:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7340:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7341:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get flag ADC analog watchdog 3.
7342:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll ISR      AWD3           LL_ADC_IsActiveFlag_AWD3
7343:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
7344:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7345:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7346:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_AWD3(ADC_TypeDef *ADCx)
7347:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7348:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, LL_ADC_FLAG_AWD3) == (LL_ADC_FLAG_AWD3)) ? 1UL : 0UL);
7349:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7350:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7351:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7352:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Clear flag ADC ready.
7353:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, flag LL_ADC_FLAG_ADRDY is raised when the ADC
7354:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         is enabled and when conversion clock is active.
7355:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (not only core clock: this ADC has a dual clock domain)
7356:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll ISR      ADRDY          LL_ADC_ClearFlag_ADRDY
7357:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
7358:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
7359:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7360:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_ADRDY(ADC_TypeDef *ADCx)
7361:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7362:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_ADRDY);
7363:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7364:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7365:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7366:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Clear flag ADC group regular end of unitary conversion.
7367:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll ISR      EOC            LL_ADC_ClearFlag_EOC
7368:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
7369:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
7370:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7371:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_EOC(ADC_TypeDef *ADCx)
7372:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7373:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_EOC);
7374:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7375:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7376:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7377:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Clear flag ADC group regular end of sequence conversions.
7378:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll ISR      EOS            LL_ADC_ClearFlag_EOS
7379:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
7380:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
7381:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7382:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_EOS(ADC_TypeDef *ADCx)
7383:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7384:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_EOS);
7385:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7386:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7387:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7388:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Clear flag ADC group regular overrun.
7389:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll ISR      OVR            LL_ADC_ClearFlag_OVR
7390:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
7391:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
7392:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
ARM GAS  /tmp/ccEuGJBQ.s 			page 301


7393:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_OVR(ADC_TypeDef *ADCx)
7394:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7395:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_OVR);
7396:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7397:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7398:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7399:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Clear flag ADC group regular end of sampling phase.
7400:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll ISR      EOSMP          LL_ADC_ClearFlag_EOSMP
7401:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
7402:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
7403:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7404:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_EOSMP(ADC_TypeDef *ADCx)
7405:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7406:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_EOSMP);
7407:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7408:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7409:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7410:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Clear flag ADC group injected end of unitary conversion.
7411:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll ISR      JEOC           LL_ADC_ClearFlag_JEOC
7412:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
7413:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
7414:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7415:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_JEOC(ADC_TypeDef *ADCx)
7416:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7417:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_JEOC);
7418:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7419:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7420:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7421:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Clear flag ADC group injected end of sequence conversions.
7422:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll ISR      JEOS           LL_ADC_ClearFlag_JEOS
7423:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
7424:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
7425:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7426:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_JEOS(ADC_TypeDef *ADCx)
7427:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7428:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_JEOS);
7429:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7430:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7431:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7432:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Clear flag ADC group injected contexts queue overflow.
7433:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll ISR      JQOVF          LL_ADC_ClearFlag_JQOVF
7434:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
7435:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
7436:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7437:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_JQOVF(ADC_TypeDef *ADCx)
7438:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7439:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_JQOVF);
7440:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7441:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7442:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7443:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Clear flag ADC analog watchdog 1.
7444:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll ISR      AWD1           LL_ADC_ClearFlag_AWD1
7445:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
7446:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
7447:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7448:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_AWD1(ADC_TypeDef *ADCx)
 3978              		.loc 2 7448 22 view .LVU1226
ARM GAS  /tmp/ccEuGJBQ.s 			page 302


 3979              	.LBB675:
7449:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7450:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_AWD1);
 3980              		.loc 2 7450 3 view .LVU1227
 3981 0122 8020     		movs	r0, #128
 3982 0124 1060     		str	r0, [r2]
 3983              	.LVL334:
 3984              		.loc 2 7450 3 is_stmt 0 view .LVU1228
 3985              	.LBE675:
 3986              	.LBE674:
3104:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 3987              		.loc 1 3104 7 is_stmt 1 view .LVU1229
3104:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 3988              		.loc 1 3104 26 is_stmt 0 view .LVU1230
 3989 0126 0A7B     		ldrb	r2, [r1, #12]	@ zero_extendqisi2
3104:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 3990              		.loc 1 3104 10 view .LVU1231
 3991 0128 012A     		cmp	r2, #1
 3992 012a 22D0     		beq	.L279
3110:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
 3993              		.loc 1 3110 9 is_stmt 1 view .LVU1232
 3994 012c 1868     		ldr	r0, [r3]
 3995              	.LVL335:
 3996              	.LBB676:
 3997              	.LBI676:
7451:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7452:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7453:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7454:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Clear flag ADC analog watchdog 2.
7455:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll ISR      AWD2           LL_ADC_ClearFlag_AWD2
7456:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
7457:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
7458:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7459:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_AWD2(ADC_TypeDef *ADCx)
7460:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7461:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_AWD2);
7462:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7463:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7464:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7465:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Clear flag ADC analog watchdog 3.
7466:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll ISR      AWD3           LL_ADC_ClearFlag_AWD3
7467:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
7468:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
7469:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7470:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_AWD3(ADC_TypeDef *ADCx)
7471:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7472:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_AWD3);
7473:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7474:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7475:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #if defined(ADC_MULTIMODE_SUPPORT)
7476:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7477:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get flag multimode ADC ready of the ADC master.
7478:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CSR      ADRDY_MST      LL_ADC_IsActiveFlag_MST_ADRDY
7479:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
7480:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
7481:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7482:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
ARM GAS  /tmp/ccEuGJBQ.s 			page 303


7483:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_MST_ADRDY(ADC_Common_TypeDef *ADCxy_COMMON)
7484:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7485:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_ADRDY_MST) == (LL_ADC_FLAG_ADRDY_MST)) ? 1UL : 0
7486:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7487:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7488:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7489:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get flag multimode ADC ready of the ADC slave.
7490:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CSR      ADRDY_SLV      LL_ADC_IsActiveFlag_SLV_ADRDY
7491:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
7492:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
7493:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7494:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7495:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_SLV_ADRDY(ADC_Common_TypeDef *ADCxy_COMMON)
7496:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7497:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_ADRDY_SLV) == (LL_ADC_FLAG_ADRDY_SLV)) ? 1UL : 0
7498:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7499:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7500:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7501:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get flag multimode ADC group regular end of unitary conversion of the ADC master.
7502:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CSR      EOC_MST        LL_ADC_IsActiveFlag_MST_EOC
7503:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
7504:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
7505:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7506:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7507:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_MST_EOC(ADC_Common_TypeDef *ADCxy_COMMON)
7508:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7509:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_EOC_SLV) == (LL_ADC_FLAG_EOC_SLV)) ? 1UL : 0UL);
7510:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7511:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7512:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7513:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get flag multimode ADC group regular end of unitary conversion of the ADC slave.
7514:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CSR      EOC_SLV        LL_ADC_IsActiveFlag_SLV_EOC
7515:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
7516:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
7517:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7518:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7519:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_SLV_EOC(ADC_Common_TypeDef *ADCxy_COMMON)
7520:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7521:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_EOC_SLV) == (LL_ADC_FLAG_EOC_SLV)) ? 1UL : 0UL);
7522:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7523:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7524:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7525:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get flag multimode ADC group regular end of sequence conversions of the ADC master.
7526:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CSR      EOS_MST        LL_ADC_IsActiveFlag_MST_EOS
7527:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
7528:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
7529:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7530:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7531:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_MST_EOS(ADC_Common_TypeDef *ADCxy_COMMON)
7532:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7533:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_EOS_MST) == (LL_ADC_FLAG_EOS_MST)) ? 1UL : 0UL);
7534:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7535:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7536:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7537:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get flag multimode ADC group regular end of sequence conversions of the ADC slave.
7538:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CSR      EOS_SLV        LL_ADC_IsActiveFlag_SLV_EOS
7539:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
ARM GAS  /tmp/ccEuGJBQ.s 			page 304


7540:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
7541:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7542:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7543:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_SLV_EOS(ADC_Common_TypeDef *ADCxy_COMMON)
7544:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7545:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_EOS_SLV) == (LL_ADC_FLAG_EOS_SLV)) ? 1UL : 0UL);
7546:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7547:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7548:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7549:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get flag multimode ADC group regular overrun of the ADC master.
7550:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CSR      OVR_MST        LL_ADC_IsActiveFlag_MST_OVR
7551:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
7552:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
7553:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7554:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7555:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_MST_OVR(ADC_Common_TypeDef *ADCxy_COMMON)
7556:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7557:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_OVR_MST) == (LL_ADC_FLAG_OVR_MST)) ? 1UL : 0UL);
7558:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7559:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7560:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7561:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get flag multimode ADC group regular overrun of the ADC slave.
7562:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CSR      OVR_SLV        LL_ADC_IsActiveFlag_SLV_OVR
7563:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
7564:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
7565:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7566:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7567:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_SLV_OVR(ADC_Common_TypeDef *ADCxy_COMMON)
7568:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7569:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_OVR_SLV) == (LL_ADC_FLAG_OVR_SLV)) ? 1UL : 0UL);
7570:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7571:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7572:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7573:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get flag multimode ADC group regular end of sampling of the ADC master.
7574:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CSR      EOSMP_MST      LL_ADC_IsActiveFlag_MST_EOSMP
7575:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
7576:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
7577:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7578:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7579:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_MST_EOSMP(ADC_Common_TypeDef *ADCxy_COMMON)
7580:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7581:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_EOSMP_MST) == (LL_ADC_FLAG_EOSMP_MST)) ? 1UL : 0
7582:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7583:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7584:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7585:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get flag multimode ADC group regular end of sampling of the ADC slave.
7586:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CSR      EOSMP_SLV      LL_ADC_IsActiveFlag_SLV_EOSMP
7587:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
7588:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
7589:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7590:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7591:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_SLV_EOSMP(ADC_Common_TypeDef *ADCxy_COMMON)
7592:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7593:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_EOSMP_SLV) == (LL_ADC_FLAG_EOSMP_SLV)) ? 1UL : 0
7594:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7595:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7596:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
ARM GAS  /tmp/ccEuGJBQ.s 			page 305


7597:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get flag multimode ADC group injected end of unitary conversion of the ADC master.
7598:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CSR      JEOC_MST       LL_ADC_IsActiveFlag_MST_JEOC
7599:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
7600:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
7601:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7602:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7603:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_MST_JEOC(ADC_Common_TypeDef *ADCxy_COMMON)
7604:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7605:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_JEOC_MST) == (LL_ADC_FLAG_JEOC_MST)) ? 1UL : 0UL
7606:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7607:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7608:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7609:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get flag multimode ADC group injected end of unitary conversion of the ADC slave.
7610:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CSR      JEOC_SLV       LL_ADC_IsActiveFlag_SLV_JEOC
7611:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
7612:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
7613:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7614:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7615:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_SLV_JEOC(ADC_Common_TypeDef *ADCxy_COMMON)
7616:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7617:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_JEOC_SLV) == (LL_ADC_FLAG_JEOC_SLV)) ? 1UL : 0UL
7618:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7619:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7620:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7621:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get flag multimode ADC group injected end of sequence conversions of the ADC master.
7622:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CSR      JEOS_MST       LL_ADC_IsActiveFlag_MST_JEOS
7623:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
7624:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
7625:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7626:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7627:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_MST_JEOS(ADC_Common_TypeDef *ADCxy_COMMON)
7628:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7629:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_JEOS_MST) == (LL_ADC_FLAG_JEOS_MST)) ? 1UL : 0UL
7630:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7631:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7632:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7633:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get flag multimode ADC group injected end of sequence conversions of the ADC slave.
7634:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CSR      JEOS_SLV       LL_ADC_IsActiveFlag_SLV_JEOS
7635:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
7636:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
7637:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7638:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7639:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_SLV_JEOS(ADC_Common_TypeDef *ADCxy_COMMON)
7640:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7641:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_JEOS_SLV) == (LL_ADC_FLAG_JEOS_SLV)) ? 1UL : 0UL
7642:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7643:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7644:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7645:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get flag multimode ADC group injected context queue overflow of the ADC master.
7646:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CSR      JQOVF_MST      LL_ADC_IsActiveFlag_MST_JQOVF
7647:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
7648:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
7649:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7650:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7651:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_MST_JQOVF(ADC_Common_TypeDef *ADCxy_COMMON)
7652:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7653:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_JQOVF_MST) == (LL_ADC_FLAG_JQOVF_MST)) ? 1UL : 0
ARM GAS  /tmp/ccEuGJBQ.s 			page 306


7654:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7655:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7656:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7657:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get flag multimode ADC group injected context queue overflow of the ADC slave.
7658:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CSR      JQOVF_SLV      LL_ADC_IsActiveFlag_SLV_JQOVF
7659:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
7660:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
7661:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7662:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7663:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_SLV_JQOVF(ADC_Common_TypeDef *ADCxy_COMMON)
7664:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7665:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_JQOVF_SLV) == (LL_ADC_FLAG_JQOVF_SLV)) ? 1UL : 0
7666:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7667:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7668:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7669:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get flag multimode ADC analog watchdog 1 of the ADC master.
7670:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CSR      AWD1_MST       LL_ADC_IsActiveFlag_MST_AWD1
7671:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
7672:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
7673:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7674:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7675:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_MST_AWD1(ADC_Common_TypeDef *ADCxy_COMMON)
7676:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7677:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_AWD1_MST) == (LL_ADC_FLAG_AWD1_MST)) ? 1UL : 0UL
7678:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7679:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7680:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7681:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get flag multimode analog watchdog 1 of the ADC slave.
7682:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CSR      AWD1_SLV       LL_ADC_IsActiveFlag_SLV_AWD1
7683:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
7684:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
7685:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7686:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7687:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_SLV_AWD1(ADC_Common_TypeDef *ADCxy_COMMON)
7688:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7689:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_AWD1_SLV) == (LL_ADC_FLAG_AWD1_SLV)) ? 1UL : 0UL
7690:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7691:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7692:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7693:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get flag multimode ADC analog watchdog 2 of the ADC master.
7694:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CSR      AWD2_MST       LL_ADC_IsActiveFlag_MST_AWD2
7695:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
7696:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
7697:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7698:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7699:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_MST_AWD2(ADC_Common_TypeDef *ADCxy_COMMON)
7700:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7701:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_AWD2_MST) == (LL_ADC_FLAG_AWD2_MST)) ? 1UL : 0UL
7702:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7703:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7704:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7705:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get flag multimode ADC analog watchdog 2 of the ADC slave.
7706:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CSR      AWD2_SLV       LL_ADC_IsActiveFlag_SLV_AWD2
7707:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
7708:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
7709:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7710:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
ARM GAS  /tmp/ccEuGJBQ.s 			page 307


7711:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_SLV_AWD2(ADC_Common_TypeDef *ADCxy_COMMON)
7712:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7713:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_AWD2_SLV) == (LL_ADC_FLAG_AWD2_SLV)) ? 1UL : 0UL
7714:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7715:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7716:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7717:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get flag multimode ADC analog watchdog 3 of the ADC master.
7718:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CSR      AWD3_MST       LL_ADC_IsActiveFlag_MST_AWD3
7719:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
7720:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
7721:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7722:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7723:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_MST_AWD3(ADC_Common_TypeDef *ADCxy_COMMON)
7724:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7725:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_AWD3_MST) == (LL_ADC_FLAG_AWD3_MST)) ? 1UL : 0UL
7726:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7727:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7728:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7729:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get flag multimode ADC analog watchdog 3 of the ADC slave.
7730:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CSR      AWD3_SLV       LL_ADC_IsActiveFlag_SLV_AWD3
7731:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
7732:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
7733:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7734:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7735:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_SLV_AWD3(ADC_Common_TypeDef *ADCxy_COMMON)
7736:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7737:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_AWD3_SLV) == (LL_ADC_FLAG_AWD3_SLV)) ? 1UL : 0UL
7738:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7739:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #endif /* ADC_MULTIMODE_SUPPORT */
7740:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7741:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7742:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
7743:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7744:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7745:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EF_IT_Management ADC IT management
7746:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
7747:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7748:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7749:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7750:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Enable ADC ready.
7751:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll IER      ADRDYIE        LL_ADC_EnableIT_ADRDY
7752:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
7753:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
7754:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7755:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_ADRDY(ADC_TypeDef *ADCx)
7756:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7757:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_ADRDY);
7758:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7759:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7760:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7761:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Enable interruption ADC group regular end of unitary conversion.
7762:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll IER      EOCIE          LL_ADC_EnableIT_EOC
7763:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
7764:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
7765:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7766:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_EOC(ADC_TypeDef *ADCx)
7767:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
ARM GAS  /tmp/ccEuGJBQ.s 			page 308


7768:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_EOC);
7769:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7770:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7771:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7772:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Enable interruption ADC group regular end of sequence conversions.
7773:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll IER      EOSIE          LL_ADC_EnableIT_EOS
7774:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
7775:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
7776:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7777:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_EOS(ADC_TypeDef *ADCx)
7778:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7779:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_EOS);
7780:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7781:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7782:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7783:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Enable ADC group regular interruption overrun.
7784:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll IER      OVRIE          LL_ADC_EnableIT_OVR
7785:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
7786:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
7787:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7788:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_OVR(ADC_TypeDef *ADCx)
7789:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7790:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_OVR);
7791:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7792:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7793:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7794:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Enable interruption ADC group regular end of sampling.
7795:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll IER      EOSMPIE        LL_ADC_EnableIT_EOSMP
7796:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
7797:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
7798:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7799:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_EOSMP(ADC_TypeDef *ADCx)
7800:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7801:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_EOSMP);
7802:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7803:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7804:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7805:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Enable interruption ADC group injected end of unitary conversion.
7806:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll IER      JEOCIE         LL_ADC_EnableIT_JEOC
7807:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
7808:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
7809:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7810:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_JEOC(ADC_TypeDef *ADCx)
7811:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7812:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_JEOC);
7813:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7814:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7815:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7816:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Enable interruption ADC group injected end of sequence conversions.
7817:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll IER      JEOSIE         LL_ADC_EnableIT_JEOS
7818:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
7819:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
7820:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7821:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_JEOS(ADC_TypeDef *ADCx)
7822:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7823:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_JEOS);
7824:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
ARM GAS  /tmp/ccEuGJBQ.s 			page 309


7825:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7826:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7827:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Enable interruption ADC group injected context queue overflow.
7828:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll IER      JQOVFIE        LL_ADC_EnableIT_JQOVF
7829:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
7830:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
7831:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7832:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_JQOVF(ADC_TypeDef *ADCx)
7833:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7834:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_JQOVF);
7835:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7836:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7837:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7838:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Enable interruption ADC analog watchdog 1.
7839:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll IER      AWD1IE         LL_ADC_EnableIT_AWD1
7840:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
7841:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
7842:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7843:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_AWD1(ADC_TypeDef *ADCx)
7844:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7845:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_AWD1);
7846:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7847:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7848:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7849:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Enable interruption ADC analog watchdog 2.
7850:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll IER      AWD2IE         LL_ADC_EnableIT_AWD2
7851:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
7852:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
7853:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7854:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_AWD2(ADC_TypeDef *ADCx)
7855:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7856:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_AWD2);
7857:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7858:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7859:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7860:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Enable interruption ADC analog watchdog 3.
7861:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll IER      AWD3IE         LL_ADC_EnableIT_AWD3
7862:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
7863:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
7864:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7865:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_AWD3(ADC_TypeDef *ADCx)
7866:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7867:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_AWD3);
7868:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7869:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7870:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7871:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Disable interruption ADC ready.
7872:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll IER      ADRDYIE        LL_ADC_DisableIT_ADRDY
7873:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
7874:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
7875:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7876:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableIT_ADRDY(ADC_TypeDef *ADCx)
7877:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7878:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   CLEAR_BIT(ADCx->IER, LL_ADC_IT_ADRDY);
7879:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7880:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7881:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
ARM GAS  /tmp/ccEuGJBQ.s 			page 310


7882:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Disable interruption ADC group regular end of unitary conversion.
7883:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll IER      EOCIE          LL_ADC_DisableIT_EOC
7884:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
7885:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
7886:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7887:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableIT_EOC(ADC_TypeDef *ADCx)
7888:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7889:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   CLEAR_BIT(ADCx->IER, LL_ADC_IT_EOC);
7890:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7891:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7892:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7893:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Disable interruption ADC group regular end of sequence conversions.
7894:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll IER      EOSIE          LL_ADC_DisableIT_EOS
7895:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
7896:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
7897:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7898:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableIT_EOS(ADC_TypeDef *ADCx)
7899:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7900:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   CLEAR_BIT(ADCx->IER, LL_ADC_IT_EOS);
7901:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7902:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7903:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7904:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Disable interruption ADC group regular overrun.
7905:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll IER      OVRIE          LL_ADC_DisableIT_OVR
7906:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
7907:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
7908:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7909:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableIT_OVR(ADC_TypeDef *ADCx)
7910:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7911:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   CLEAR_BIT(ADCx->IER, LL_ADC_IT_OVR);
7912:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7913:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7914:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7915:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Disable interruption ADC group regular end of sampling.
7916:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll IER      EOSMPIE        LL_ADC_DisableIT_EOSMP
7917:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
7918:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
7919:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7920:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableIT_EOSMP(ADC_TypeDef *ADCx)
7921:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7922:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   CLEAR_BIT(ADCx->IER, LL_ADC_IT_EOSMP);
7923:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7924:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7925:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7926:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Disable interruption ADC group regular end of unitary conversion.
7927:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll IER      JEOCIE         LL_ADC_DisableIT_JEOC
7928:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
7929:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
7930:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7931:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableIT_JEOC(ADC_TypeDef *ADCx)
7932:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7933:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   CLEAR_BIT(ADCx->IER, LL_ADC_IT_JEOC);
7934:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7935:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7936:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7937:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Disable interruption ADC group injected end of sequence conversions.
7938:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll IER      JEOSIE         LL_ADC_DisableIT_JEOS
ARM GAS  /tmp/ccEuGJBQ.s 			page 311


7939:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
7940:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
7941:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7942:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableIT_JEOS(ADC_TypeDef *ADCx)
7943:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7944:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   CLEAR_BIT(ADCx->IER, LL_ADC_IT_JEOS);
7945:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7946:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7947:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7948:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Disable interruption ADC group injected context queue overflow.
7949:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll IER      JQOVFIE        LL_ADC_DisableIT_JQOVF
7950:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
7951:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
7952:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7953:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableIT_JQOVF(ADC_TypeDef *ADCx)
7954:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7955:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   CLEAR_BIT(ADCx->IER, LL_ADC_IT_JQOVF);
7956:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7957:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7958:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7959:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Disable interruption ADC analog watchdog 1.
7960:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll IER      AWD1IE         LL_ADC_DisableIT_AWD1
7961:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
7962:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
7963:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7964:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableIT_AWD1(ADC_TypeDef *ADCx)
 3998              		.loc 2 7964 22 view .LVU1233
 3999              	.LBB677:
7965:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7966:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   CLEAR_BIT(ADCx->IER, LL_ADC_IT_AWD1);
 4000              		.loc 2 7966 3 view .LVU1234
 4001 012e 4268     		ldr	r2, [r0, #4]
 4002 0130 22F08002 		bic	r2, r2, #128
 4003 0134 4260     		str	r2, [r0, #4]
7967:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 4004              		.loc 2 7967 1 is_stmt 0 view .LVU1235
 4005 0136 8CE0     		b	.L238
 4006              	.LVL336:
 4007              	.L240:
 4008              		.loc 2 7967 1 view .LVU1236
 4009              	.LBE677:
 4010              	.LBE676:
3063:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                                           LL_ADC_GROUP_INJECTED));
 4011              		.loc 1 3063 11 is_stmt 1 view .LVU1237
3063:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                                           LL_ADC_GROUP_INJECTED));
 4012              		.loc 1 3063 72 is_stmt 0 view .LVU1238
 4013 0138 8868     		ldr	r0, [r1, #8]
 4014              	.LVL337:
 4015              	.LBB678:
 4016              	.LBI678:
5718:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 4017              		.loc 2 5718 22 is_stmt 1 view .LVU1239
 4018              	.LBB679:
5724:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              + ((AWDy & ADC_AWD_CR12_REGOFFSETGAP_MASK) * ADC_AWD_C
 4019              		.loc 2 5724 3 view .LVU1240
5727:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              (AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK),
 4020              		.loc 2 5727 3 view .LVU1241
ARM GAS  /tmp/ccEuGJBQ.s 			page 312


 4021 013a E268     		ldr	r2, [r4, #12]
 4022 013c 22F0FB42 		bic	r2, r2, #2105540608
 4023 0140 22F48002 		bic	r2, r2, #4194304
 4024 0144 00F0F840 		and	r0, r0, #2080374784
 4025              	.LVL338:
5727:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              (AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK),
 4026              		.loc 2 5727 3 is_stmt 0 view .LVU1242
 4027 0148 40F0A070 		orr	r0, r0, #20971520
 4028 014c 0243     		orrs	r2, r2, r0
 4029 014e E260     		str	r2, [r4, #12]
 4030              	.LVL339:
5730:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 4031              		.loc 2 5730 1 view .LVU1243
 4032 0150 DBE7     		b	.L248
 4033              	.LVL340:
 4034              	.L246:
5730:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 4035              		.loc 2 5730 1 view .LVU1244
 4036              	.LBE679:
 4037              	.LBE678:
3081:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           break;
 4038              		.loc 1 3081 11 is_stmt 1 view .LVU1245
 4039              	.LBB680:
 4040              	.LBI680:
5718:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 4041              		.loc 2 5718 22 view .LVU1246
 4042              	.LBB681:
5724:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              + ((AWDy & ADC_AWD_CR12_REGOFFSETGAP_MASK) * ADC_AWD_C
 4043              		.loc 2 5724 3 view .LVU1247
5727:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              (AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK),
 4044              		.loc 2 5727 3 view .LVU1248
 4045 0152 E268     		ldr	r2, [r4, #12]
 4046 0154 22F0FB42 		bic	r2, r2, #2105540608
 4047 0158 22F48002 		bic	r2, r2, #4194304
 4048 015c 42F0C072 		orr	r2, r2, #25165824
 4049 0160 E260     		str	r2, [r4, #12]
5730:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 4050              		.loc 2 5730 1 is_stmt 0 view .LVU1249
 4051 0162 D2E7     		b	.L248
 4052              	.LVL341:
 4053              	.L245:
5730:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 4054              		.loc 2 5730 1 view .LVU1250
 4055              	.LBE681:
 4056              	.LBE680:
3085:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           break;
 4057              		.loc 1 3085 11 is_stmt 1 view .LVU1251
 4058              	.LBB682:
 4059              	.LBI682:
5718:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 4060              		.loc 2 5718 22 view .LVU1252
 4061              	.LBB683:
5724:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              + ((AWDy & ADC_AWD_CR12_REGOFFSETGAP_MASK) * ADC_AWD_C
 4062              		.loc 2 5724 3 view .LVU1253
5727:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              (AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK),
 4063              		.loc 2 5727 3 view .LVU1254
 4064 0164 E268     		ldr	r2, [r4, #12]
ARM GAS  /tmp/ccEuGJBQ.s 			page 313


 4065 0166 22F0FB42 		bic	r2, r2, #2105540608
 4066 016a 22F48002 		bic	r2, r2, #4194304
 4067 016e E260     		str	r2, [r4, #12]
5730:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 4068              		.loc 2 5730 1 is_stmt 0 view .LVU1255
 4069 0170 CBE7     		b	.L248
 4070              	.LVL342:
 4071              	.L279:
5730:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 4072              		.loc 2 5730 1 view .LVU1256
 4073              	.LBE683:
 4074              	.LBE682:
3106:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
 4075              		.loc 1 3106 9 is_stmt 1 view .LVU1257
 4076 0172 1868     		ldr	r0, [r3]
 4077              	.LVL343:
 4078              	.LBB684:
 4079              	.LBI684:
7843:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 4080              		.loc 2 7843 22 view .LVU1258
 4081              	.LBB685:
7845:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 4082              		.loc 2 7845 3 view .LVU1259
 4083 0174 4268     		ldr	r2, [r0, #4]
 4084 0176 42F08002 		orr	r2, r2, #128
 4085 017a 4260     		str	r2, [r0, #4]
7846:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 4086              		.loc 2 7846 1 is_stmt 0 view .LVU1260
 4087 017c 69E0     		b	.L238
 4088              	.LVL344:
 4089              	.L251:
7846:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 4090              		.loc 2 7846 1 view .LVU1261
 4091              	.LBE685:
 4092              	.LBE684:
3116:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 4093              		.loc 1 3116 7 view .LVU1262
 4094 017e B0F1C07F 		cmp	r0, #25165824
 4095 0182 3AD0     		beq	.L252
 4096 0184 B0F1E07F 		cmp	r0, #29360128
 4097 0188 7FF46CAF 		bne	.L253
 4098              	.L250:
3123:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           {
 4099              		.loc 1 3123 11 is_stmt 1 view .LVU1263
3123:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           {
 4100              		.loc 1 3123 14 is_stmt 0 view .LVU1264
 4101 018c 5C48     		ldr	r0, .L285+4
 4102 018e 8242     		cmp	r2, r0
 4103 0190 0DD0     		beq	.L280
3129:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           }
 4104              		.loc 1 3129 13 is_stmt 1 view .LVU1265
 4105 0192 8A68     		ldr	r2, [r1, #8]
 4106 0194 C2F31200 		ubfx	r0, r2, #0, #19
 4107 0198 18BB     		cbnz	r0, .L259
3129:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           }
 4108              		.loc 1 3129 13 is_stmt 0 discriminator 1 view .LVU1266
 4109 019a C2F38462 		ubfx	r2, r2, #26, #5
ARM GAS  /tmp/ccEuGJBQ.s 			page 314


 4110 019e 0120     		movs	r0, #1
 4111 01a0 9040     		lsls	r0, r0, r2
 4112              	.L260:
3129:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           }
 4113              		.loc 1 3129 13 discriminator 4 view .LVU1267
 4114 01a2 D4F8A420 		ldr	r2, [r4, #164]
 4115 01a6 0243     		orrs	r2, r2, r0
 4116 01a8 C4F8A420 		str	r2, [r4, #164]
 4117 01ac 3DE0     		b	.L258
 4118              	.L280:
3125:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           }
 4119              		.loc 1 3125 13 is_stmt 1 view .LVU1268
 4120 01ae 8A68     		ldr	r2, [r1, #8]
 4121 01b0 C2F31200 		ubfx	r0, r2, #0, #19
 4122 01b4 48B9     		cbnz	r0, .L255
3125:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           }
 4123              		.loc 1 3125 13 is_stmt 0 discriminator 1 view .LVU1269
 4124 01b6 C2F38462 		ubfx	r2, r2, #26, #5
 4125 01ba 0120     		movs	r0, #1
 4126 01bc 9040     		lsls	r0, r0, r2
 4127              	.L256:
3125:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           }
 4128              		.loc 1 3125 13 discriminator 4 view .LVU1270
 4129 01be D4F8A020 		ldr	r2, [r4, #160]
 4130 01c2 0243     		orrs	r2, r2, r0
 4131 01c4 C4F8A020 		str	r2, [r4, #160]
 4132 01c8 2FE0     		b	.L258
 4133              	.L255:
 4134              	.LVL345:
 4135              	.LBB686:
 4136              	.LBI686:
1048:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 4137              		.loc 3 1048 31 is_stmt 1 discriminator 2 view .LVU1271
 4138              	.LBB687:
1050:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 4139              		.loc 3 1050 3 discriminator 2 view .LVU1272
1055:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 4140              		.loc 3 1055 4 discriminator 2 view .LVU1273
 4141              		.syntax unified
 4142              	@ 1055 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4143 01ca 92FAA2F2 		rbit r2, r2
 4144              	@ 0 "" 2
 4145              	.LVL346:
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 4146              		.loc 3 1068 3 discriminator 2 view .LVU1274
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 4147              		.loc 3 1068 3 is_stmt 0 discriminator 2 view .LVU1275
 4148              		.thumb
 4149              		.syntax unified
 4150              	.LBE687:
 4151              	.LBE686:
 4152              	.LBB688:
 4153              	.LBI688:
1078:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 4154              		.loc 3 1078 30 is_stmt 1 discriminator 2 view .LVU1276
 4155              	.LBB689:
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
ARM GAS  /tmp/ccEuGJBQ.s 			page 315


 4156              		.loc 3 1089 3 discriminator 2 view .LVU1277
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 4157              		.loc 3 1089 6 is_stmt 0 discriminator 2 view .LVU1278
 4158 01ce 32B1     		cbz	r2, .L271
 4159              		.loc 3 1093 3 is_stmt 1 view .LVU1279
 4160              		.loc 3 1093 10 is_stmt 0 view .LVU1280
 4161 01d0 B2FA82F2 		clz	r2, r2
 4162              	.LVL347:
 4163              	.L257:
 4164              		.loc 3 1093 10 view .LVU1281
 4165              	.LBE689:
 4166              	.LBE688:
3125:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           }
 4167              		.loc 1 3125 13 view .LVU1282
 4168 01d4 02F01F02 		and	r2, r2, #31
 4169 01d8 0120     		movs	r0, #1
 4170 01da 9040     		lsls	r0, r0, r2
 4171 01dc EFE7     		b	.L256
 4172              	.LVL348:
 4173              	.L271:
 4174              	.LBB691:
 4175              	.LBB690:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 4176              		.loc 3 1091 12 view .LVU1283
 4177 01de 2022     		movs	r2, #32
 4178              	.LVL349:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 4179              		.loc 3 1091 12 view .LVU1284
 4180 01e0 F8E7     		b	.L257
 4181              	.L259:
 4182              	.LVL350:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 4183              		.loc 3 1091 12 view .LVU1285
 4184              	.LBE690:
 4185              	.LBE691:
 4186              	.LBB692:
 4187              	.LBI692:
1048:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 4188              		.loc 3 1048 31 is_stmt 1 discriminator 2 view .LVU1286
 4189              	.LBB693:
1050:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 4190              		.loc 3 1050 3 discriminator 2 view .LVU1287
1055:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 4191              		.loc 3 1055 4 discriminator 2 view .LVU1288
 4192              		.syntax unified
 4193              	@ 1055 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4194 01e2 92FAA2F2 		rbit r2, r2
 4195              	@ 0 "" 2
 4196              	.LVL351:
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 4197              		.loc 3 1068 3 discriminator 2 view .LVU1289
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 4198              		.loc 3 1068 3 is_stmt 0 discriminator 2 view .LVU1290
 4199              		.thumb
 4200              		.syntax unified
 4201              	.LBE693:
 4202              	.LBE692:
ARM GAS  /tmp/ccEuGJBQ.s 			page 316


 4203              	.LBB694:
 4204              	.LBI694:
1078:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 4205              		.loc 3 1078 30 is_stmt 1 discriminator 2 view .LVU1291
 4206              	.LBB695:
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 4207              		.loc 3 1089 3 discriminator 2 view .LVU1292
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 4208              		.loc 3 1089 6 is_stmt 0 discriminator 2 view .LVU1293
 4209 01e6 32B1     		cbz	r2, .L272
 4210              		.loc 3 1093 3 is_stmt 1 view .LVU1294
 4211              		.loc 3 1093 10 is_stmt 0 view .LVU1295
 4212 01e8 B2FA82F2 		clz	r2, r2
 4213              	.LVL352:
 4214              	.L261:
 4215              		.loc 3 1093 10 view .LVU1296
 4216              	.LBE695:
 4217              	.LBE694:
3129:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           }
 4218              		.loc 1 3129 13 view .LVU1297
 4219 01ec 02F01F02 		and	r2, r2, #31
 4220 01f0 0120     		movs	r0, #1
 4221 01f2 9040     		lsls	r0, r0, r2
 4222 01f4 D5E7     		b	.L260
 4223              	.LVL353:
 4224              	.L272:
 4225              	.LBB697:
 4226              	.LBB696:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 4227              		.loc 3 1091 12 view .LVU1298
 4228 01f6 2022     		movs	r2, #32
 4229              	.LVL354:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 4230              		.loc 3 1091 12 view .LVU1299
 4231 01f8 F8E7     		b	.L261
 4232              	.L252:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 4233              		.loc 3 1091 12 view .LVU1300
 4234              	.LBE696:
 4235              	.LBE697:
3136:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           break;
 4236              		.loc 1 3136 11 is_stmt 1 view .LVU1301
 4237              	.LVL355:
 4238              	.LBB698:
 4239              	.LBI698:
5718:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 4240              		.loc 2 5718 22 view .LVU1302
 4241              	.LBB699:
5724:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              + ((AWDy & ADC_AWD_CR12_REGOFFSETGAP_MASK) * ADC_AWD_C
 4242              		.loc 2 5724 3 view .LVU1303
5724:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              + ((AWDy & ADC_AWD_CR12_REGOFFSETGAP_MASK) * ADC_AWD_C
 4243              		.loc 2 5724 25 is_stmt 0 view .LVU1304
 4244 01fa 0C34     		adds	r4, r4, #12
 4245              	.LVL356:
5724:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              + ((AWDy & ADC_AWD_CR12_REGOFFSETGAP_MASK) * ADC_AWD_C
 4246              		.loc 2 5724 25 view .LVU1305
 4247 01fc C2F3015C 		ubfx	ip, r2, #20, #2
ARM GAS  /tmp/ccEuGJBQ.s 			page 317


 4248 0200 02F00100 		and	r0, r2, #1
 4249 0204 00EBC000 		add	r0, r0, r0, lsl #3
 4250 0208 0CEB800C 		add	ip, ip, r0, lsl #2
 4251              	.LVL357:
5727:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              (AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK),
 4252              		.loc 2 5727 3 is_stmt 1 view .LVU1306
 4253 020c 54F82C00 		ldr	r0, [r4, ip, lsl #2]
 4254 0210 22F00245 		bic	r5, r2, #-2113929216
 4255 0214 25F46015 		bic	r5, r5, #3670016
 4256 0218 20EA0500 		bic	r0, r0, r5
 4257 021c 22F07E42 		bic	r2, r2, #-33554432
 4258              	.LVL358:
5727:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              (AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK),
 4259              		.loc 2 5727 3 is_stmt 0 view .LVU1307
 4260 0220 22F4F002 		bic	r2, r2, #7864320
 4261 0224 0243     		orrs	r2, r2, r0
 4262 0226 44F82C20 		str	r2, [r4, ip, lsl #2]
 4263              	.LVL359:
 4264              	.L258:
5727:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              (AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK),
 4265              		.loc 2 5727 3 view .LVU1308
 4266              	.LBE699:
 4267              	.LBE698:
3144:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 4268              		.loc 1 3144 7 is_stmt 1 view .LVU1309
3144:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 4269              		.loc 1 3144 26 is_stmt 0 view .LVU1310
 4270 022a 0868     		ldr	r0, [r1]
3144:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 4271              		.loc 1 3144 10 view .LVU1311
 4272 022c 344A     		ldr	r2, .L285+4
 4273 022e 9042     		cmp	r0, r2
 4274 0230 47D0     		beq	.L281
3169:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 4275              		.loc 1 3169 9 is_stmt 1 view .LVU1312
 4276 0232 DA6D     		ldr	r2, [r3, #92]
 4277 0234 22F48022 		bic	r2, r2, #262144
 4278 0238 DA65     		str	r2, [r3, #92]
3175:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 4279              		.loc 1 3175 9 view .LVU1313
 4280 023a 1A68     		ldr	r2, [r3]
 4281              	.LVL360:
 4282              	.LBB700:
 4283              	.LBI700:
7470:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 4284              		.loc 2 7470 22 view .LVU1314
 4285              	.LBB701:
7472:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 4286              		.loc 2 7472 3 view .LVU1315
 4287 023c 4FF40070 		mov	r0, #512
 4288 0240 1060     		str	r0, [r2]
 4289              	.LVL361:
7472:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 4290              		.loc 2 7472 3 is_stmt 0 view .LVU1316
 4291              	.LBE701:
 4292              	.LBE700:
3178:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
ARM GAS  /tmp/ccEuGJBQ.s 			page 318


 4293              		.loc 1 3178 9 is_stmt 1 view .LVU1317
3178:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
 4294              		.loc 1 3178 28 is_stmt 0 view .LVU1318
 4295 0242 0A7B     		ldrb	r2, [r1, #12]	@ zero_extendqisi2
3178:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
 4296              		.loc 1 3178 12 view .LVU1319
 4297 0244 012A     		cmp	r2, #1
 4298 0246 53D0     		beq	.L282
3184:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         }
 4299              		.loc 1 3184 11 is_stmt 1 view .LVU1320
 4300 0248 1868     		ldr	r0, [r3]
 4301              	.LVL362:
 4302              	.LBB702:
 4303              	.LBI702:
7968:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7969:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7970:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Disable interruption ADC analog watchdog 2.
7971:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll IER      AWD2IE         LL_ADC_DisableIT_AWD2
7972:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
7973:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
7974:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7975:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableIT_AWD2(ADC_TypeDef *ADCx)
7976:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7977:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   CLEAR_BIT(ADCx->IER, LL_ADC_IT_AWD2);
7978:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
7979:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
7980:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
7981:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Disable interruption ADC analog watchdog 3.
7982:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll IER      AWD3IE         LL_ADC_DisableIT_AWD3
7983:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
7984:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
7985:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
7986:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableIT_AWD3(ADC_TypeDef *ADCx)
 4304              		.loc 2 7986 22 view .LVU1321
 4305              	.LBB703:
7987:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
7988:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   CLEAR_BIT(ADCx->IER, LL_ADC_IT_AWD3);
 4306              		.loc 2 7988 3 view .LVU1322
 4307 024a 4268     		ldr	r2, [r0, #4]
 4308 024c 22F40072 		bic	r2, r2, #512
 4309 0250 4260     		str	r2, [r0, #4]
 4310              	.LVL363:
 4311              	.L238:
 4312              		.loc 2 7988 3 is_stmt 0 view .LVU1323
 4313              	.LBE703:
 4314              	.LBE702:
3192:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
 4315              		.loc 1 3192 3 is_stmt 1 view .LVU1324
3192:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
 4316              		.loc 1 3192 22 is_stmt 0 view .LVU1325
 4317 0252 0A68     		ldr	r2, [r1]
3192:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
 4318              		.loc 1 3192 6 view .LVU1326
 4319 0254 2948     		ldr	r0, .L285
 4320 0256 8242     		cmp	r2, r0
 4321 0258 54D0     		beq	.L283
3206:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     tmpAWDLowThresholdShifted  = ADC_AWD23THRESHOLD_SHIFT_RESOLUTION(hadc, AnalogWDGConfig->LowThre
ARM GAS  /tmp/ccEuGJBQ.s 			page 319


 4322              		.loc 1 3206 5 is_stmt 1 view .LVU1327
3206:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     tmpAWDLowThresholdShifted  = ADC_AWD23THRESHOLD_SHIFT_RESOLUTION(hadc, AnalogWDGConfig->LowThre
 4323              		.loc 1 3206 34 is_stmt 0 view .LVU1328
 4324 025a 1C68     		ldr	r4, [r3]
 4325 025c E068     		ldr	r0, [r4, #12]
 4326 025e 00F01800 		and	r0, r0, #24
 4327 0262 1828     		cmp	r0, #24
 4328 0264 5DD0     		beq	.L267
3206:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     tmpAWDLowThresholdShifted  = ADC_AWD23THRESHOLD_SHIFT_RESOLUTION(hadc, AnalogWDGConfig->LowThre
 4329              		.loc 1 3206 34 discriminator 1 view .LVU1329
 4330 0266 E068     		ldr	r0, [r4, #12]
 4331 0268 C0F3C100 		ubfx	r0, r0, #3, #2
 4332 026c C0F10200 		rsb	r0, r0, #2
 4333 0270 4000     		lsls	r0, r0, #1
 4334 0272 00F01E00 		and	r0, r0, #30
 4335 0276 0D69     		ldr	r5, [r1, #16]
 4336 0278 25FA00FE 		lsr	lr, r5, r0
 4337              	.L268:
 4338              	.LVL364:
3207:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
 4339              		.loc 1 3207 5 is_stmt 1 discriminator 4 view .LVU1330
3207:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
 4340              		.loc 1 3207 34 is_stmt 0 discriminator 4 view .LVU1331
 4341 027c E068     		ldr	r0, [r4, #12]
 4342 027e 00F01800 		and	r0, r0, #24
 4343 0282 1828     		cmp	r0, #24
 4344 0284 51D0     		beq	.L269
3207:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
 4345              		.loc 1 3207 34 discriminator 1 view .LVU1332
 4346 0286 4869     		ldr	r0, [r1, #20]
 4347 0288 E168     		ldr	r1, [r4, #12]
 4348              	.LVL365:
3207:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
 4349              		.loc 1 3207 34 discriminator 1 view .LVU1333
 4350 028a C1F3C101 		ubfx	r1, r1, #3, #2
 4351 028e C1F10201 		rsb	r1, r1, #2
 4352 0292 4900     		lsls	r1, r1, #1
 4353 0294 01F01E01 		and	r1, r1, #30
 4354 0298 C840     		lsrs	r0, r0, r1
 4355              	.L266:
 4356              	.LVL366:
3211:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                                   tmpAWDLowThresholdShifted);
 4357              		.loc 1 3211 3 is_stmt 1 view .LVU1334
 4358 029a 1968     		ldr	r1, [r3]
 4359              	.LVL367:
 4360              	.LBB704:
 4361              	.LBI704:
5958:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                                      uint32_t AWDThresholdLowValue)
 4362              		.loc 2 5958 22 view .LVU1335
 4363              	.LBB705:
5966:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 4364              		.loc 2 5966 3 view .LVU1336
5966:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 4365              		.loc 2 5966 25 is_stmt 0 view .LVU1337
 4366 029c 01F1200C 		add	ip, r1, #32
 4367 02a0 120D     		lsrs	r2, r2, #20
 4368              	.LVL368:
ARM GAS  /tmp/ccEuGJBQ.s 			page 320


5966:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 4369              		.loc 2 5966 25 view .LVU1338
 4370 02a2 9200     		lsls	r2, r2, #2
 4371 02a4 02F00C02 		and	r2, r2, #12
 4372              	.LVL369:
5968:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_TR1_HT1 | ADC_TR1_LT1,
 4373              		.loc 2 5968 3 is_stmt 1 view .LVU1339
 4374 02a8 5CF80210 		ldr	r1, [ip, r2]
 4375              	.LVL370:
5968:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_TR1_HT1 | ADC_TR1_LT1,
 4376              		.loc 2 5968 3 is_stmt 0 view .LVU1340
 4377 02ac 01F0F021 		and	r1, r1, #-268374016
 4378 02b0 40EA0E40 		orr	r0, r0, lr, lsl #16
 4379              	.LVL371:
5968:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_TR1_HT1 | ADC_TR1_LT1,
 4380              		.loc 2 5968 3 view .LVU1341
 4381 02b4 0143     		orrs	r1, r1, r0
 4382 02b6 4CF80210 		str	r1, [ip, r2]
 4383              	.LVL372:
5968:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_TR1_HT1 | ADC_TR1_LT1,
 4384              		.loc 2 5968 3 view .LVU1342
 4385              	.LBE705:
 4386              	.LBE704:
3215:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 4387              		.loc 1 3215 3 is_stmt 1 view .LVU1343
3215:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 4388              		.loc 1 3215 3 view .LVU1344
 4389 02ba 0020     		movs	r0, #0
 4390 02bc 83F85800 		strb	r0, [r3, #88]
3215:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 4391              		.loc 1 3215 3 view .LVU1345
3218:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** }
 4392              		.loc 1 3218 3 view .LVU1346
3219:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 4393              		.loc 1 3219 1 is_stmt 0 view .LVU1347
 4394 02c0 30BD     		pop	{r4, r5, pc}
 4395              	.LVL373:
 4396              	.L281:
3147:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 4397              		.loc 1 3147 9 is_stmt 1 view .LVU1348
 4398 02c2 DA6D     		ldr	r2, [r3, #92]
 4399 02c4 22F40032 		bic	r2, r2, #131072
 4400 02c8 DA65     		str	r2, [r3, #92]
3153:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 4401              		.loc 1 3153 9 view .LVU1349
 4402 02ca 1A68     		ldr	r2, [r3]
 4403              	.LVL374:
 4404              	.LBB706:
 4405              	.LBI706:
7459:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 4406              		.loc 2 7459 22 view .LVU1350
 4407              	.LBB707:
7461:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 4408              		.loc 2 7461 3 view .LVU1351
 4409 02cc 4FF48070 		mov	r0, #256
 4410 02d0 1060     		str	r0, [r2]
 4411              	.LVL375:
ARM GAS  /tmp/ccEuGJBQ.s 			page 321


7461:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 4412              		.loc 2 7461 3 is_stmt 0 view .LVU1352
 4413              	.LBE707:
 4414              	.LBE706:
3156:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
 4415              		.loc 1 3156 9 is_stmt 1 view .LVU1353
3156:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
 4416              		.loc 1 3156 28 is_stmt 0 view .LVU1354
 4417 02d2 0A7B     		ldrb	r2, [r1, #12]	@ zero_extendqisi2
3156:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
 4418              		.loc 1 3156 12 view .LVU1355
 4419 02d4 012A     		cmp	r2, #1
 4420 02d6 05D0     		beq	.L284
3162:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         }
 4421              		.loc 1 3162 11 is_stmt 1 view .LVU1356
 4422 02d8 1868     		ldr	r0, [r3]
 4423              	.LVL376:
 4424              	.LBB708:
 4425              	.LBI708:
7975:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 4426              		.loc 2 7975 22 view .LVU1357
 4427              	.LBB709:
7977:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 4428              		.loc 2 7977 3 view .LVU1358
 4429 02da 4268     		ldr	r2, [r0, #4]
 4430 02dc 22F48072 		bic	r2, r2, #256
 4431 02e0 4260     		str	r2, [r0, #4]
7978:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 4432              		.loc 2 7978 1 is_stmt 0 view .LVU1359
 4433 02e2 B6E7     		b	.L238
 4434              	.LVL377:
 4435              	.L284:
7978:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 4436              		.loc 2 7978 1 view .LVU1360
 4437              	.LBE709:
 4438              	.LBE708:
3158:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         }
 4439              		.loc 1 3158 11 is_stmt 1 view .LVU1361
 4440 02e4 1868     		ldr	r0, [r3]
 4441              	.LVL378:
 4442              	.LBB710:
 4443              	.LBI710:
7854:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 4444              		.loc 2 7854 22 view .LVU1362
 4445              	.LBB711:
7856:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 4446              		.loc 2 7856 3 view .LVU1363
 4447 02e6 4268     		ldr	r2, [r0, #4]
 4448 02e8 42F48072 		orr	r2, r2, #256
 4449 02ec 4260     		str	r2, [r0, #4]
7857:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 4450              		.loc 2 7857 1 is_stmt 0 view .LVU1364
 4451 02ee B0E7     		b	.L238
 4452              	.LVL379:
 4453              	.L282:
7857:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 4454              		.loc 2 7857 1 view .LVU1365
ARM GAS  /tmp/ccEuGJBQ.s 			page 322


 4455              	.LBE711:
 4456              	.LBE710:
3180:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         }
 4457              		.loc 1 3180 11 is_stmt 1 view .LVU1366
 4458 02f0 1868     		ldr	r0, [r3]
 4459              	.LVL380:
 4460              	.LBB712:
 4461              	.LBI712:
7865:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 4462              		.loc 2 7865 22 view .LVU1367
 4463              	.LBB713:
7867:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 4464              		.loc 2 7867 3 view .LVU1368
 4465 02f2 4268     		ldr	r2, [r0, #4]
 4466 02f4 42F40072 		orr	r2, r2, #512
 4467 02f8 4260     		str	r2, [r0, #4]
7868:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 4468              		.loc 2 7868 1 is_stmt 0 view .LVU1369
 4469 02fa AAE7     		b	.L238
 4470              	.L286:
 4471              		.align	2
 4472              	.L285:
 4473 02fc 0000C07D 		.word	2109734912
 4474 0300 FFFF1700 		.word	1572863
 4475              	.LVL381:
 4476              	.L283:
7868:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 4477              		.loc 2 7868 1 view .LVU1370
 4478              	.LBE713:
 4479              	.LBE712:
3197:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     tmpAWDLowThresholdShifted  = ADC_AWD1THRESHOLD_SHIFT_RESOLUTION(hadc, AnalogWDGConfig->LowThres
 4480              		.loc 1 3197 5 is_stmt 1 view .LVU1371
3197:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     tmpAWDLowThresholdShifted  = ADC_AWD1THRESHOLD_SHIFT_RESOLUTION(hadc, AnalogWDGConfig->LowThres
 4481              		.loc 1 3197 34 is_stmt 0 view .LVU1372
 4482 0304 1C68     		ldr	r4, [r3]
 4483 0306 E068     		ldr	r0, [r4, #12]
 4484 0308 C0F3C100 		ubfx	r0, r0, #3, #2
 4485 030c 4000     		lsls	r0, r0, #1
3197:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     tmpAWDLowThresholdShifted  = ADC_AWD1THRESHOLD_SHIFT_RESOLUTION(hadc, AnalogWDGConfig->LowThres
 4486              		.loc 1 3197 32 view .LVU1373
 4487 030e 0D69     		ldr	r5, [r1, #16]
 4488 0310 05FA00FE 		lsl	lr, r5, r0
 4489              	.LVL382:
3198:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
 4490              		.loc 1 3198 5 is_stmt 1 view .LVU1374
3198:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
 4491              		.loc 1 3198 34 is_stmt 0 view .LVU1375
 4492 0314 4869     		ldr	r0, [r1, #20]
 4493 0316 E168     		ldr	r1, [r4, #12]
 4494              	.LVL383:
3198:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
 4495              		.loc 1 3198 34 view .LVU1376
 4496 0318 C1F3C101 		ubfx	r1, r1, #3, #2
 4497 031c 4900     		lsls	r1, r1, #1
3198:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
 4498              		.loc 1 3198 32 view .LVU1377
 4499 031e 8840     		lsls	r0, r0, r1
ARM GAS  /tmp/ccEuGJBQ.s 			page 323


 4500              	.LVL384:
3198:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
 4501              		.loc 1 3198 32 view .LVU1378
 4502 0320 BBE7     		b	.L266
 4503              	.LVL385:
 4504              	.L267:
3206:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     tmpAWDLowThresholdShifted  = ADC_AWD23THRESHOLD_SHIFT_RESOLUTION(hadc, AnalogWDGConfig->LowThre
 4505              		.loc 1 3206 34 discriminator 2 view .LVU1379
 4506 0322 0869     		ldr	r0, [r1, #16]
 4507 0324 4FEA800E 		lsl	lr, r0, #2
 4508 0328 A8E7     		b	.L268
 4509              	.LVL386:
 4510              	.L269:
3207:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
 4511              		.loc 1 3207 34 discriminator 2 view .LVU1380
 4512 032a 4869     		ldr	r0, [r1, #20]
 4513 032c 8000     		lsls	r0, r0, #2
 4514 032e B4E7     		b	.L266
 4515              	.LVL387:
 4516              	.L270:
 4517              	.LCFI15:
 4518              		.cfi_def_cfa_offset 0
 4519              		.cfi_restore 4
 4520              		.cfi_restore 5
 4521              		.cfi_restore 14
3037:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 4522              		.loc 1 3037 3 view .LVU1381
 4523 0330 0220     		movs	r0, #2
 4524              	.LVL388:
3219:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 4525              		.loc 1 3219 1 view .LVU1382
 4526 0332 7047     		bx	lr
 4527              		.cfi_endproc
 4528              	.LFE350:
 4530              		.section	.text.HAL_ADC_GetState,"ax",%progbits
 4531              		.align	1
 4532              		.global	HAL_ADC_GetState
 4533              		.syntax unified
 4534              		.thumb
 4535              		.thumb_func
 4537              	HAL_ADC_GetState:
 4538              	.LVL389:
 4539              	.LFB351:
3254:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Check the parameters */
 4540              		.loc 1 3254 1 is_stmt 1 view -0
 4541              		.cfi_startproc
 4542              		@ args = 0, pretend = 0, frame = 0
 4543              		@ frame_needed = 0, uses_anonymous_args = 0
 4544              		@ link register save eliminated.
3256:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 4545              		.loc 1 3256 3 view .LVU1384
3259:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** }
 4546              		.loc 1 3259 3 view .LVU1385
3259:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** }
 4547              		.loc 1 3259 14 is_stmt 0 view .LVU1386
 4548 0000 C06D     		ldr	r0, [r0, #92]
 4549              	.LVL390:
ARM GAS  /tmp/ccEuGJBQ.s 			page 324


3260:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 4550              		.loc 1 3260 1 view .LVU1387
 4551 0002 7047     		bx	lr
 4552              		.cfi_endproc
 4553              	.LFE351:
 4555              		.section	.text.HAL_ADC_GetError,"ax",%progbits
 4556              		.align	1
 4557              		.global	HAL_ADC_GetError
 4558              		.syntax unified
 4559              		.thumb
 4560              		.thumb_func
 4562              	HAL_ADC_GetError:
 4563              	.LVL391:
 4564              	.LFB352:
3268:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Check the parameters */
 4565              		.loc 1 3268 1 is_stmt 1 view -0
 4566              		.cfi_startproc
 4567              		@ args = 0, pretend = 0, frame = 0
 4568              		@ frame_needed = 0, uses_anonymous_args = 0
 4569              		@ link register save eliminated.
3270:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 4570              		.loc 1 3270 3 view .LVU1389
3272:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** }
 4571              		.loc 1 3272 3 view .LVU1390
3272:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** }
 4572              		.loc 1 3272 14 is_stmt 0 view .LVU1391
 4573 0000 006E     		ldr	r0, [r0, #96]
 4574              	.LVL392:
3273:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 4575              		.loc 1 3273 1 view .LVU1392
 4576 0002 7047     		bx	lr
 4577              		.cfi_endproc
 4578              	.LFE352:
 4580              		.section	.text.ADC_ConversionStop,"ax",%progbits
 4581              		.align	1
 4582              		.global	ADC_ConversionStop
 4583              		.syntax unified
 4584              		.thumb
 4585              		.thumb_func
 4587              	ADC_ConversionStop:
 4588              	.LVL393:
 4589              	.LFB353:
3298:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t tickstart;
 4590              		.loc 1 3298 1 is_stmt 1 view -0
 4591              		.cfi_startproc
 4592              		@ args = 0, pretend = 0, frame = 0
 4593              		@ frame_needed = 0, uses_anonymous_args = 0
3298:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t tickstart;
 4594              		.loc 1 3298 1 is_stmt 0 view .LVU1394
 4595 0000 70B5     		push	{r4, r5, r6, lr}
 4596              	.LCFI16:
 4597              		.cfi_def_cfa_offset 16
 4598              		.cfi_offset 4, -16
 4599              		.cfi_offset 5, -12
 4600              		.cfi_offset 6, -8
 4601              		.cfi_offset 14, -4
 4602 0002 0446     		mov	r4, r0
ARM GAS  /tmp/ccEuGJBQ.s 			page 325


3299:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t Conversion_Timeout_CPU_cycles = 0UL;
 4603              		.loc 1 3299 3 is_stmt 1 view .LVU1395
3300:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t conversion_group_reassigned = ConversionGroup;
 4604              		.loc 1 3300 3 view .LVU1396
 4605              	.LVL394:
3301:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t tmp_ADC_CR_ADSTART_JADSTART;
 4606              		.loc 1 3301 3 view .LVU1397
3302:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t tmp_adc_is_conversion_on_going_regular;
 4607              		.loc 1 3302 3 view .LVU1398
3303:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t tmp_adc_is_conversion_on_going_injected;
 4608              		.loc 1 3303 3 view .LVU1399
3304:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 4609              		.loc 1 3304 3 view .LVU1400
3307:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   assert_param(IS_ADC_CONVERSION_GROUP(ConversionGroup));
 4610              		.loc 1 3307 3 view .LVU1401
3308:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 4611              		.loc 1 3308 3 view .LVU1402
3312:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   tmp_adc_is_conversion_on_going_injected = LL_ADC_INJ_IsConversionOngoing(hadc->Instance);
 4612              		.loc 1 3312 3 view .LVU1403
3312:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   tmp_adc_is_conversion_on_going_injected = LL_ADC_INJ_IsConversionOngoing(hadc->Instance);
 4613              		.loc 1 3312 44 is_stmt 0 view .LVU1404
 4614 0004 0368     		ldr	r3, [r0]
 4615              	.LVL395:
 4616              	.LBB714:
 4617              	.LBI714:
6844:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 4618              		.loc 2 6844 26 is_stmt 1 view .LVU1405
 4619              	.LBB715:
6846:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 4620              		.loc 2 6846 3 view .LVU1406
6846:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 4621              		.loc 2 6846 12 is_stmt 0 view .LVU1407
 4622 0006 9A68     		ldr	r2, [r3, #8]
6846:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 4623              		.loc 2 6846 74 view .LVU1408
 4624 0008 12F00402 		ands	r2, r2, #4
 4625 000c 00D0     		beq	.L290
 4626 000e 0122     		movs	r2, #1
 4627              	.L290:
 4628              	.LVL396:
6846:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 4629              		.loc 2 6846 74 view .LVU1409
 4630              	.LBE715:
 4631              	.LBE714:
3313:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   if ((tmp_adc_is_conversion_on_going_regular != 0UL)
 4632              		.loc 1 3313 3 is_stmt 1 view .LVU1410
 4633              	.LBB716:
 4634              	.LBI716:
7069:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 4635              		.loc 2 7069 26 view .LVU1411
 4636              	.LBB717:
7071:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 4637              		.loc 2 7071 3 view .LVU1412
7071:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 4638              		.loc 2 7071 12 is_stmt 0 view .LVU1413
 4639 0010 9868     		ldr	r0, [r3, #8]
 4640              	.LVL397:
ARM GAS  /tmp/ccEuGJBQ.s 			page 326


7071:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 4641              		.loc 2 7071 76 view .LVU1414
 4642 0012 10F00800 		ands	r0, r0, #8
 4643 0016 00D0     		beq	.L291
 4644 0018 0120     		movs	r0, #1
 4645              	.L291:
 4646              	.LVL398:
7071:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 4647              		.loc 2 7071 76 view .LVU1415
 4648              	.LBE717:
 4649              	.LBE716:
3314:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       || (tmp_adc_is_conversion_on_going_injected != 0UL)
 4650              		.loc 1 3314 3 is_stmt 1 view .LVU1416
3314:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       || (tmp_adc_is_conversion_on_going_injected != 0UL)
 4651              		.loc 1 3314 6 is_stmt 0 view .LVU1417
 4652 001a 0AB9     		cbnz	r2, .L292
3315:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****      )
 4653              		.loc 1 3315 7 view .LVU1418
 4654 001c 0028     		cmp	r0, #0
 4655 001e 6BD0     		beq	.L304
 4656              	.L292:
3324:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         && (hadc->Init.ContinuousConvMode == ENABLE)
 4657              		.loc 1 3324 5 is_stmt 1 view .LVU1419
3324:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         && (hadc->Init.ContinuousConvMode == ENABLE)
 4658              		.loc 1 3324 25 is_stmt 0 view .LVU1420
 4659 0020 DA68     		ldr	r2, [r3, #12]
 4660              	.LVL399:
3324:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         && (hadc->Init.ContinuousConvMode == ENABLE)
 4661              		.loc 1 3324 8 view .LVU1421
 4662 0022 12F0007F 		tst	r2, #33554432
 4663 0026 04D0     		beq	.L294
3326:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****        )
 4664              		.loc 1 3326 9 view .LVU1422
 4665 0028 A08B     		ldrh	r0, [r4, #28]
 4666              	.LVL400:
3326:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****        )
 4667              		.loc 1 3326 9 view .LVU1423
 4668 002a 40F20112 		movw	r2, #257
 4669 002e 9042     		cmp	r0, r2
 4670 0030 4ED0     		beq	.L309
 4671              	.L294:
3353:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 4672              		.loc 1 3353 5 is_stmt 1 view .LVU1424
3353:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 4673              		.loc 1 3353 8 is_stmt 0 view .LVU1425
 4674 0032 0229     		cmp	r1, #2
 4675 0034 10D0     		beq	.L299
 4676              	.LVL401:
 4677              	.L298:
3356:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 4678              		.loc 1 3356 7 is_stmt 1 view .LVU1426
3356:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 4679              		.loc 1 3356 11 is_stmt 0 view .LVU1427
 4680 0036 2368     		ldr	r3, [r4]
 4681              	.LVL402:
 4682              	.LBB718:
 4683              	.LBI718:
ARM GAS  /tmp/ccEuGJBQ.s 			page 327


6844:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 4684              		.loc 2 6844 26 is_stmt 1 view .LVU1428
 4685              	.LBB719:
6846:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 4686              		.loc 2 6846 3 view .LVU1429
6846:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 4687              		.loc 2 6846 12 is_stmt 0 view .LVU1430
 4688 0038 9A68     		ldr	r2, [r3, #8]
6846:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 4689              		.loc 2 6846 74 view .LVU1431
 4690 003a 12F0040F 		tst	r2, #4
 4691 003e 0BD0     		beq	.L299
 4692              	.LVL403:
6846:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 4693              		.loc 2 6846 74 view .LVU1432
 4694              	.LBE719:
 4695              	.LBE718:
3358:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
 4696              		.loc 1 3358 9 is_stmt 1 view .LVU1433
 4697              	.LBB720:
 4698              	.LBI720:
6733:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 4699              		.loc 2 6733 26 view .LVU1434
 4700              	.LBB721:
6735:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 4701              		.loc 2 6735 3 view .LVU1435
6735:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 4702              		.loc 2 6735 12 is_stmt 0 view .LVU1436
 4703 0040 9A68     		ldr	r2, [r3, #8]
6735:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 4704              		.loc 2 6735 70 view .LVU1437
 4705 0042 12F0020F 		tst	r2, #2
 4706 0046 07D1     		bne	.L299
 4707              	.LVL404:
6735:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 4708              		.loc 2 6735 70 view .LVU1438
 4709              	.LBE721:
 4710              	.LBE720:
3361:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         }
 4711              		.loc 1 3361 11 is_stmt 1 view .LVU1439
 4712              	.LBB722:
 4713              	.LBI722:
6828:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 4714              		.loc 2 6828 22 view .LVU1440
 4715              	.LBB723:
6833:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 4716              		.loc 2 6833 3 view .LVU1441
 4717 0048 9A68     		ldr	r2, [r3, #8]
 4718 004a 22F00042 		bic	r2, r2, #-2147483648
 4719 004e 22F03F02 		bic	r2, r2, #63
 4720 0052 42F01002 		orr	r2, r2, #16
 4721 0056 9A60     		str	r2, [r3, #8]
 4722              	.LVL405:
 4723              	.L299:
6833:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 4724              		.loc 2 6833 3 is_stmt 0 view .LVU1442
 4725              	.LBE723:
ARM GAS  /tmp/ccEuGJBQ.s 			page 328


 4726              	.LBE722:
3367:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 4727              		.loc 1 3367 5 is_stmt 1 view .LVU1443
3367:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 4728              		.loc 1 3367 8 is_stmt 0 view .LVU1444
 4729 0058 0129     		cmp	r1, #1
 4730 005a 10D0     		beq	.L300
3370:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 4731              		.loc 1 3370 7 is_stmt 1 view .LVU1445
3370:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 4732              		.loc 1 3370 11 is_stmt 0 view .LVU1446
 4733 005c 2368     		ldr	r3, [r4]
 4734              	.LVL406:
 4735              	.LBB724:
 4736              	.LBI724:
7069:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 4737              		.loc 2 7069 26 is_stmt 1 view .LVU1447
 4738              	.LBB725:
7071:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 4739              		.loc 2 7071 3 view .LVU1448
7071:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 4740              		.loc 2 7071 12 is_stmt 0 view .LVU1449
 4741 005e 9A68     		ldr	r2, [r3, #8]
7071:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 4742              		.loc 2 7071 76 view .LVU1450
 4743 0060 12F0080F 		tst	r2, #8
 4744 0064 0BD0     		beq	.L300
 4745              	.LVL407:
7071:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 4746              		.loc 2 7071 76 view .LVU1451
 4747              	.LBE725:
 4748              	.LBE724:
3372:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
 4749              		.loc 1 3372 9 is_stmt 1 view .LVU1452
 4750              	.LBB726:
 4751              	.LBI726:
6733:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 4752              		.loc 2 6733 26 view .LVU1453
 4753              	.LBB727:
6735:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 4754              		.loc 2 6735 3 view .LVU1454
6735:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 4755              		.loc 2 6735 12 is_stmt 0 view .LVU1455
 4756 0066 9A68     		ldr	r2, [r3, #8]
6735:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 4757              		.loc 2 6735 70 view .LVU1456
 4758 0068 12F0020F 		tst	r2, #2
 4759 006c 07D1     		bne	.L300
 4760              	.LVL408:
6735:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 4761              		.loc 2 6735 70 view .LVU1457
 4762              	.LBE727:
 4763              	.LBE726:
3375:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         }
 4764              		.loc 1 3375 11 is_stmt 1 view .LVU1458
 4765              	.LBB728:
 4766              	.LBI728:
ARM GAS  /tmp/ccEuGJBQ.s 			page 329


7053:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 4767              		.loc 2 7053 22 view .LVU1459
 4768              	.LBB729:
7058:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 4769              		.loc 2 7058 3 view .LVU1460
 4770 006e 9A68     		ldr	r2, [r3, #8]
 4771 0070 22F00042 		bic	r2, r2, #-2147483648
 4772 0074 22F03F02 		bic	r2, r2, #63
 4773 0078 42F02002 		orr	r2, r2, #32
 4774 007c 9A60     		str	r2, [r3, #8]
 4775              	.LVL409:
 4776              	.L300:
7058:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 4777              		.loc 2 7058 3 is_stmt 0 view .LVU1461
 4778              	.LBE729:
 4779              	.LBE728:
3381:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 4780              		.loc 1 3381 5 is_stmt 1 view .LVU1462
 4781 007e 0229     		cmp	r1, #2
 4782 0080 34D0     		beq	.L306
 4783 0082 0329     		cmp	r1, #3
 4784 0084 34D1     		bne	.L307
 4785 0086 0C25     		movs	r5, #12
 4786              	.L301:
 4787              	.LVL410:
3396:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 4788              		.loc 1 3396 5 view .LVU1463
3396:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 4789              		.loc 1 3396 17 is_stmt 0 view .LVU1464
 4790 0088 FFF7FEFF 		bl	HAL_GetTick
 4791              	.LVL411:
 4792 008c 0646     		mov	r6, r0
 4793              	.LVL412:
3398:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 4794              		.loc 1 3398 5 is_stmt 1 view .LVU1465
 4795              	.L302:
3398:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 4796              		.loc 1 3398 63 view .LVU1466
3398:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 4797              		.loc 1 3398 17 is_stmt 0 view .LVU1467
 4798 008e 2368     		ldr	r3, [r4]
3398:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 4799              		.loc 1 3398 27 view .LVU1468
 4800 0090 9B68     		ldr	r3, [r3, #8]
3398:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 4801              		.loc 1 3398 63 view .LVU1469
 4802 0092 2B42     		tst	r3, r5
 4803 0094 2ED0     		beq	.L310
3400:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 4804              		.loc 1 3400 7 is_stmt 1 view .LVU1470
3400:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 4805              		.loc 1 3400 12 is_stmt 0 view .LVU1471
 4806 0096 FFF7FEFF 		bl	HAL_GetTick
 4807              	.LVL413:
3400:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 4808              		.loc 1 3400 26 view .LVU1472
 4809 009a 801B     		subs	r0, r0, r6
ARM GAS  /tmp/ccEuGJBQ.s 			page 330


3400:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 4810              		.loc 1 3400 10 view .LVU1473
 4811 009c 0528     		cmp	r0, #5
 4812 009e F6D9     		bls	.L302
3403:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
 4813              		.loc 1 3403 9 is_stmt 1 view .LVU1474
3403:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
 4814              		.loc 1 3403 18 is_stmt 0 view .LVU1475
 4815 00a0 2368     		ldr	r3, [r4]
3403:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
 4816              		.loc 1 3403 28 view .LVU1476
 4817 00a2 9B68     		ldr	r3, [r3, #8]
3403:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
 4818              		.loc 1 3403 12 view .LVU1477
 4819 00a4 2B42     		tst	r3, r5
 4820 00a6 F2D0     		beq	.L302
3406:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 4821              		.loc 1 3406 11 is_stmt 1 view .LVU1478
 4822 00a8 E36D     		ldr	r3, [r4, #92]
 4823 00aa 43F01003 		orr	r3, r3, #16
 4824 00ae E365     		str	r3, [r4, #92]
3409:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 4825              		.loc 1 3409 11 view .LVU1479
 4826 00b0 236E     		ldr	r3, [r4, #96]
 4827 00b2 43F00103 		orr	r3, r3, #1
 4828 00b6 2366     		str	r3, [r4, #96]
3411:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         }
 4829              		.loc 1 3411 11 view .LVU1480
3411:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         }
 4830              		.loc 1 3411 18 is_stmt 0 view .LVU1481
 4831 00b8 0120     		movs	r0, #1
 4832 00ba 1CE0     		b	.L293
 4833              	.LVL414:
 4834              	.L312:
3338:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 4835              		.loc 1 3338 11 is_stmt 1 view .LVU1482
 4836 00bc E36D     		ldr	r3, [r4, #92]
 4837 00be 43F01003 		orr	r3, r3, #16
 4838 00c2 E365     		str	r3, [r4, #92]
3341:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 4839              		.loc 1 3341 11 view .LVU1483
 4840 00c4 236E     		ldr	r3, [r4, #96]
 4841 00c6 43F00103 		orr	r3, r3, #1
 4842 00ca 2366     		str	r3, [r4, #96]
3343:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         }
 4843              		.loc 1 3343 11 view .LVU1484
3343:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         }
 4844              		.loc 1 3343 18 is_stmt 0 view .LVU1485
 4845 00cc 0120     		movs	r0, #1
 4846 00ce 12E0     		b	.L293
 4847              	.LVL415:
 4848              	.L309:
3300:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t conversion_group_reassigned = ConversionGroup;
 4849              		.loc 1 3300 12 view .LVU1486
 4850 00d0 0022     		movs	r2, #0
 4851              	.LVL416:
 4852              	.L295:
ARM GAS  /tmp/ccEuGJBQ.s 			page 331


3333:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 4853              		.loc 1 3333 54 is_stmt 1 view .LVU1487
3333:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 4854              		.loc 1 3333 14 is_stmt 0 view .LVU1488
 4855 00d2 1968     		ldr	r1, [r3]
3333:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 4856              		.loc 1 3333 54 view .LVU1489
 4857 00d4 11F0400F 		tst	r1, #64
 4858 00d8 04D1     		bne	.L311
3335:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
 4859              		.loc 1 3335 9 is_stmt 1 view .LVU1490
3335:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
 4860              		.loc 1 3335 12 is_stmt 0 view .LVU1491
 4861 00da 0849     		ldr	r1, .L313
 4862 00dc 8A42     		cmp	r2, r1
 4863 00de EDD8     		bhi	.L312
3345:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
 4864              		.loc 1 3345 9 is_stmt 1 view .LVU1492
3345:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
 4865              		.loc 1 3345 39 is_stmt 0 view .LVU1493
 4866 00e0 0132     		adds	r2, r2, #1
 4867              	.LVL417:
3345:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
 4868              		.loc 1 3345 39 view .LVU1494
 4869 00e2 F6E7     		b	.L295
 4870              	.L311:
3349:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
 4871              		.loc 1 3349 7 is_stmt 1 view .LVU1495
 4872 00e4 4022     		movs	r2, #64
 4873              	.LVL418:
3349:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
 4874              		.loc 1 3349 7 is_stmt 0 view .LVU1496
 4875 00e6 1A60     		str	r2, [r3]
 4876              	.LVL419:
3353:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 4877              		.loc 1 3353 5 is_stmt 1 view .LVU1497
3330:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 4878              		.loc 1 3330 35 is_stmt 0 view .LVU1498
 4879 00e8 0121     		movs	r1, #1
 4880 00ea A4E7     		b	.L298
 4881              	.LVL420:
 4882              	.L306:
3387:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         break;
 4883              		.loc 1 3387 37 view .LVU1499
 4884 00ec 0825     		movs	r5, #8
 4885 00ee CBE7     		b	.L301
 4886              	.L307:
3391:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         break;
 4887              		.loc 1 3391 37 view .LVU1500
 4888 00f0 0425     		movs	r5, #4
 4889 00f2 C9E7     		b	.L301
 4890              	.LVL421:
 4891              	.L310:
3419:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** }
 4892              		.loc 1 3419 10 view .LVU1501
 4893 00f4 0020     		movs	r0, #0
 4894              	.LVL422:
ARM GAS  /tmp/ccEuGJBQ.s 			page 332


 4895              	.L293:
3420:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 4896              		.loc 1 3420 1 view .LVU1502
 4897 00f6 70BD     		pop	{r4, r5, r6, pc}
 4898              	.LVL423:
 4899              	.L304:
3419:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** }
 4900              		.loc 1 3419 10 view .LVU1503
 4901 00f8 0020     		movs	r0, #0
 4902              	.LVL424:
3419:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** }
 4903              		.loc 1 3419 10 view .LVU1504
 4904 00fa FCE7     		b	.L293
 4905              	.L314:
 4906              		.align	2
 4907              	.L313:
 4908 00fc FFFF3FA3 		.word	-1556086785
 4909              		.cfi_endproc
 4910              	.LFE353:
 4912              		.section	.text.ADC_Enable,"ax",%progbits
 4913              		.align	1
 4914              		.global	ADC_Enable
 4915              		.syntax unified
 4916              		.thumb
 4917              		.thumb_func
 4919              	ADC_Enable:
 4920              	.LVL425:
 4921              	.LFB354:
3430:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t tickstart;
 4922              		.loc 1 3430 1 is_stmt 1 view -0
 4923              		.cfi_startproc
 4924              		@ args = 0, pretend = 0, frame = 0
 4925              		@ frame_needed = 0, uses_anonymous_args = 0
3430:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t tickstart;
 4926              		.loc 1 3430 1 is_stmt 0 view .LVU1506
 4927 0000 38B5     		push	{r3, r4, r5, lr}
 4928              	.LCFI17:
 4929              		.cfi_def_cfa_offset 16
 4930              		.cfi_offset 3, -16
 4931              		.cfi_offset 4, -12
 4932              		.cfi_offset 5, -8
 4933              		.cfi_offset 14, -4
3431:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 4934              		.loc 1 3431 3 is_stmt 1 view .LVU1507
3437:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
 4935              		.loc 1 3437 3 view .LVU1508
3437:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
 4936              		.loc 1 3437 7 is_stmt 0 view .LVU1509
 4937 0002 0368     		ldr	r3, [r0]
 4938              	.LVL426:
 4939              	.LBB730:
 4940              	.LBI730:
6722:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 4941              		.loc 2 6722 26 is_stmt 1 view .LVU1510
 4942              	.LBB731:
6724:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 4943              		.loc 2 6724 3 view .LVU1511
ARM GAS  /tmp/ccEuGJBQ.s 			page 333


6724:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 4944              		.loc 2 6724 12 is_stmt 0 view .LVU1512
 4945 0004 9A68     		ldr	r2, [r3, #8]
6724:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 4946              		.loc 2 6724 68 view .LVU1513
 4947 0006 12F0010F 		tst	r2, #1
 4948 000a 40D1     		bne	.L321
 4949 000c 0446     		mov	r4, r0
 4950              	.LVL427:
6724:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 4951              		.loc 2 6724 68 view .LVU1514
 4952              	.LBE731:
 4953              	.LBE730:
3440:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                                | ADC_CR_ADDIS | ADC_CR_ADEN)) != 0UL)
 4954              		.loc 1 3440 5 is_stmt 1 view .LVU1515
3440:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                                | ADC_CR_ADDIS | ADC_CR_ADEN)) != 0UL)
 4955              		.loc 1 3440 24 is_stmt 0 view .LVU1516
 4956 000e 9968     		ldr	r1, [r3, #8]
3440:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                                | ADC_CR_ADDIS | ADC_CR_ADEN)) != 0UL)
 4957              		.loc 1 3440 8 view .LVU1517
 4958 0010 204A     		ldr	r2, .L324
 4959 0012 1142     		tst	r1, r2
 4960 0014 09D0     		beq	.L317
3444:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 4961              		.loc 1 3444 7 is_stmt 1 view .LVU1518
 4962 0016 C36D     		ldr	r3, [r0, #92]
 4963 0018 43F01003 		orr	r3, r3, #16
 4964 001c C365     		str	r3, [r0, #92]
3447:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 4965              		.loc 1 3447 7 view .LVU1519
 4966 001e 036E     		ldr	r3, [r0, #96]
 4967 0020 43F00103 		orr	r3, r3, #1
 4968 0024 0366     		str	r3, [r0, #96]
3449:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
 4969              		.loc 1 3449 7 view .LVU1520
3449:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
 4970              		.loc 1 3449 14 is_stmt 0 view .LVU1521
 4971 0026 0120     		movs	r0, #1
 4972              	.LVL428:
3449:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
 4973              		.loc 1 3449 14 view .LVU1522
 4974 0028 32E0     		b	.L316
 4975              	.LVL429:
 4976              	.L317:
3453:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 4977              		.loc 1 3453 5 is_stmt 1 view .LVU1523
 4978              	.LBB732:
 4979              	.LBI732:
6683:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 4980              		.loc 2 6683 22 view .LVU1524
 4981              	.LBB733:
6688:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 4982              		.loc 2 6688 3 view .LVU1525
 4983 002a 9A68     		ldr	r2, [r3, #8]
 4984 002c 22F00042 		bic	r2, r2, #-2147483648
 4985 0030 22F03F02 		bic	r2, r2, #63
 4986 0034 42F00102 		orr	r2, r2, #1
ARM GAS  /tmp/ccEuGJBQ.s 			page 334


 4987 0038 9A60     		str	r2, [r3, #8]
 4988              	.LVL430:
6688:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 4989              		.loc 2 6688 3 is_stmt 0 view .LVU1526
 4990              	.LBE733:
 4991              	.LBE732:
3456:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 4992              		.loc 1 3456 5 is_stmt 1 view .LVU1527
3456:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 4993              		.loc 1 3456 17 is_stmt 0 view .LVU1528
 4994 003a FFF7FEFF 		bl	HAL_GetTick
 4995              	.LVL431:
3456:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 4996              		.loc 1 3456 17 view .LVU1529
 4997 003e 0546     		mov	r5, r0
 4998              	.LVL432:
3458:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 4999              		.loc 1 3458 5 is_stmt 1 view .LVU1530
 5000              	.L318:
3458:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 5001              		.loc 1 3458 51 view .LVU1531
3458:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 5002              		.loc 1 3458 12 is_stmt 0 view .LVU1532
 5003 0040 2368     		ldr	r3, [r4]
 5004 0042 1A68     		ldr	r2, [r3]
3458:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 5005              		.loc 1 3458 51 view .LVU1533
 5006 0044 12F0010F 		tst	r2, #1
 5007 0048 1FD1     		bne	.L323
3468:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 5008              		.loc 1 3468 7 is_stmt 1 view .LVU1534
 5009              	.LVL433:
 5010              	.LBB734:
 5011              	.LBI734:
6722:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 5012              		.loc 2 6722 26 view .LVU1535
 5013              	.LBB735:
6724:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 5014              		.loc 2 6724 3 view .LVU1536
6724:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 5015              		.loc 2 6724 12 is_stmt 0 view .LVU1537
 5016 004a 9A68     		ldr	r2, [r3, #8]
6724:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 5017              		.loc 2 6724 68 view .LVU1538
 5018 004c 12F0010F 		tst	r2, #1
 5019 0050 07D1     		bne	.L319
 5020              	.LVL434:
6724:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 5021              		.loc 2 6724 68 view .LVU1539
 5022              	.LBE735:
 5023              	.LBE734:
3470:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
 5024              		.loc 1 3470 9 is_stmt 1 view .LVU1540
 5025              	.LBB736:
 5026              	.LBI736:
6683:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 5027              		.loc 2 6683 22 view .LVU1541
ARM GAS  /tmp/ccEuGJBQ.s 			page 335


 5028              	.LBB737:
6688:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 5029              		.loc 2 6688 3 view .LVU1542
 5030 0052 9A68     		ldr	r2, [r3, #8]
 5031 0054 22F00042 		bic	r2, r2, #-2147483648
 5032 0058 22F03F02 		bic	r2, r2, #63
 5033 005c 42F00102 		orr	r2, r2, #1
 5034 0060 9A60     		str	r2, [r3, #8]
 5035              	.LVL435:
 5036              	.L319:
6688:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 5037              		.loc 2 6688 3 is_stmt 0 view .LVU1543
 5038              	.LBE737:
 5039              	.LBE736:
3473:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 5040              		.loc 1 3473 7 is_stmt 1 view .LVU1544
3473:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 5041              		.loc 1 3473 12 is_stmt 0 view .LVU1545
 5042 0062 FFF7FEFF 		bl	HAL_GetTick
 5043              	.LVL436:
3473:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 5044              		.loc 1 3473 26 view .LVU1546
 5045 0066 431B     		subs	r3, r0, r5
3473:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 5046              		.loc 1 3473 10 view .LVU1547
 5047 0068 022B     		cmp	r3, #2
 5048 006a E9D9     		bls	.L318
3476:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
 5049              		.loc 1 3476 9 is_stmt 1 view .LVU1548
3476:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
 5050              		.loc 1 3476 13 is_stmt 0 view .LVU1549
 5051 006c 2368     		ldr	r3, [r4]
 5052 006e 1B68     		ldr	r3, [r3]
3476:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
 5053              		.loc 1 3476 12 view .LVU1550
 5054 0070 13F0010F 		tst	r3, #1
 5055 0074 E4D1     		bne	.L318
3479:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5056              		.loc 1 3479 11 is_stmt 1 view .LVU1551
 5057 0076 E36D     		ldr	r3, [r4, #92]
 5058 0078 43F01003 		orr	r3, r3, #16
 5059 007c E365     		str	r3, [r4, #92]
3482:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5060              		.loc 1 3482 11 view .LVU1552
 5061 007e 236E     		ldr	r3, [r4, #96]
 5062 0080 43F00103 		orr	r3, r3, #1
 5063 0084 2366     		str	r3, [r4, #96]
3484:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         }
 5064              		.loc 1 3484 11 view .LVU1553
3484:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         }
 5065              		.loc 1 3484 18 is_stmt 0 view .LVU1554
 5066 0086 0120     		movs	r0, #1
 5067 0088 02E0     		b	.L316
 5068              	.L323:
3491:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** }
 5069              		.loc 1 3491 10 view .LVU1555
 5070 008a 0020     		movs	r0, #0
ARM GAS  /tmp/ccEuGJBQ.s 			page 336


 5071 008c 00E0     		b	.L316
 5072              	.LVL437:
 5073              	.L321:
3491:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** }
 5074              		.loc 1 3491 10 view .LVU1556
 5075 008e 0020     		movs	r0, #0
 5076              	.LVL438:
 5077              	.L316:
3492:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5078              		.loc 1 3492 1 view .LVU1557
 5079 0090 38BD     		pop	{r3, r4, r5, pc}
 5080              	.L325:
 5081 0092 00BF     		.align	2
 5082              	.L324:
 5083 0094 3F000080 		.word	-2147483585
 5084              		.cfi_endproc
 5085              	.LFE354:
 5087              		.section	.text.HAL_ADC_Start,"ax",%progbits
 5088              		.align	1
 5089              		.global	HAL_ADC_Start
 5090              		.syntax unified
 5091              		.thumb
 5092              		.thumb_func
 5094              	HAL_ADC_Start:
 5095              	.LVL439:
 5096              	.LFB333:
1229:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 5097              		.loc 1 1229 1 is_stmt 1 view -0
 5098              		.cfi_startproc
 5099              		@ args = 0, pretend = 0, frame = 0
 5100              		@ frame_needed = 0, uses_anonymous_args = 0
1229:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 5101              		.loc 1 1229 1 is_stmt 0 view .LVU1559
 5102 0000 38B5     		push	{r3, r4, r5, lr}
 5103              	.LCFI18:
 5104              		.cfi_def_cfa_offset 16
 5105              		.cfi_offset 3, -16
 5106              		.cfi_offset 4, -12
 5107              		.cfi_offset 5, -8
 5108              		.cfi_offset 14, -4
1230:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #if defined(ADC_MULTIMODE_SUPPORT)
 5109              		.loc 1 1230 3 is_stmt 1 view .LVU1560
1232:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t tmp_multimode_config = LL_ADC_GetMultimode(__LL_ADC_COMMON_INSTANCE(hadc->Instance));
 5110              		.loc 1 1232 3 view .LVU1561
1233:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #endif
 5111              		.loc 1 1233 3 view .LVU1562
 5112              	.LVL440:
 5113              	.LBB738:
 5114              	.LBI738:
6385:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 5115              		.loc 2 6385 26 view .LVU1563
 5116              	.LBB739:
6387:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 5117              		.loc 2 6387 3 view .LVU1564
6387:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 5118              		.loc 2 6387 21 is_stmt 0 view .LVU1565
 5119 0002 3C4B     		ldr	r3, .L345
ARM GAS  /tmp/ccEuGJBQ.s 			page 337


 5120 0004 9D68     		ldr	r5, [r3, #8]
 5121              	.LVL441:
6387:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 5122              		.loc 2 6387 21 view .LVU1566
 5123              	.LBE739:
 5124              	.LBE738:
1237:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5125              		.loc 1 1237 3 is_stmt 1 view .LVU1567
1240:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
 5126              		.loc 1 1240 3 view .LVU1568
1240:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
 5127              		.loc 1 1240 7 is_stmt 0 view .LVU1569
 5128 0006 0368     		ldr	r3, [r0]
 5129              	.LVL442:
 5130              	.LBB740:
 5131              	.LBI740:
6844:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 5132              		.loc 2 6844 26 is_stmt 1 view .LVU1570
 5133              	.LBB741:
6846:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 5134              		.loc 2 6846 3 view .LVU1571
6846:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 5135              		.loc 2 6846 12 is_stmt 0 view .LVU1572
 5136 0008 9B68     		ldr	r3, [r3, #8]
 5137              	.LVL443:
6846:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 5138              		.loc 2 6846 74 view .LVU1573
 5139 000a 13F0040F 		tst	r3, #4
 5140 000e 6CD1     		bne	.L338
 5141 0010 0446     		mov	r4, r0
 5142 0012 05F01F05 		and	r5, r5, #31
 5143              	.LVL444:
6846:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 5144              		.loc 2 6846 74 view .LVU1574
 5145              	.LBE741:
 5146              	.LBE740:
1243:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5147              		.loc 1 1243 5 is_stmt 1 view .LVU1575
1243:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5148              		.loc 1 1243 5 view .LVU1576
 5149 0016 90F85830 		ldrb	r3, [r0, #88]	@ zero_extendqisi2
 5150 001a 012B     		cmp	r3, #1
 5151 001c 67D0     		beq	.L339
1243:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5152              		.loc 1 1243 5 discriminator 2 view .LVU1577
 5153 001e 0123     		movs	r3, #1
 5154 0020 80F85830 		strb	r3, [r0, #88]
1243:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5155              		.loc 1 1243 5 discriminator 2 view .LVU1578
1246:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5156              		.loc 1 1246 5 discriminator 2 view .LVU1579
1246:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5157              		.loc 1 1246 22 is_stmt 0 discriminator 2 view .LVU1580
 5158 0024 FFF7FEFF 		bl	ADC_Enable
 5159              	.LVL445:
1249:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 5160              		.loc 1 1249 5 is_stmt 1 discriminator 2 view .LVU1581
ARM GAS  /tmp/ccEuGJBQ.s 			page 338


1249:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 5161              		.loc 1 1249 8 is_stmt 0 discriminator 2 view .LVU1582
 5162 0028 0028     		cmp	r0, #0
 5163 002a 5AD1     		bne	.L328
1254:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                         HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR | HAL_A
 5164              		.loc 1 1254 7 is_stmt 1 view .LVU1583
 5165 002c E36D     		ldr	r3, [r4, #92]
 5166 002e 23F47063 		bic	r3, r3, #3840
 5167 0032 23F00103 		bic	r3, r3, #1
 5168 0036 43F48073 		orr	r3, r3, #256
 5169 003a E365     		str	r3, [r4, #92]
1262:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 5170              		.loc 1 1262 7 view .LVU1584
1262:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 5171              		.loc 1 1262 12 is_stmt 0 view .LVU1585
 5172 003c 2368     		ldr	r3, [r4]
 5173 003e 2E4A     		ldr	r2, .L345+4
 5174 0040 9342     		cmp	r3, r2
 5175 0042 32D0     		beq	.L343
 5176 0044 1A46     		mov	r2, r3
 5177              	.L329:
1262:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 5178              		.loc 1 1262 10 discriminator 4 view .LVU1586
 5179 0046 9342     		cmp	r3, r2
 5180 0048 00D0     		beq	.L330
1263:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****          )
 5181              		.loc 1 1263 11 view .LVU1587
 5182 004a 1DB9     		cbnz	r5, .L331
 5183              	.L330:
1266:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
 5184              		.loc 1 1266 9 is_stmt 1 view .LVU1588
 5185 004c E26D     		ldr	r2, [r4, #92]
 5186 004e 22F48012 		bic	r2, r2, #1048576
 5187 0052 E265     		str	r2, [r4, #92]
 5188              	.L331:
1272:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 5189              		.loc 1 1272 7 view .LVU1589
1272:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 5190              		.loc 1 1272 11 is_stmt 0 view .LVU1590
 5191 0054 E26D     		ldr	r2, [r4, #92]
1272:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 5192              		.loc 1 1272 10 view .LVU1591
 5193 0056 12F4805F 		tst	r2, #4096
 5194 005a 29D0     		beq	.L332
1275:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
 5195              		.loc 1 1275 9 is_stmt 1 view .LVU1592
 5196 005c 226E     		ldr	r2, [r4, #96]
 5197 005e 22F00602 		bic	r2, r2, #6
 5198 0062 2266     		str	r2, [r4, #96]
 5199              	.L333:
1285:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5200              		.loc 1 1285 7 view .LVU1593
 5201 0064 1C22     		movs	r2, #28
 5202 0066 1A60     		str	r2, [r3]
1290:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5203              		.loc 1 1290 7 view .LVU1594
1290:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
ARM GAS  /tmp/ccEuGJBQ.s 			page 339


 5204              		.loc 1 1290 7 view .LVU1595
 5205 0068 0023     		movs	r3, #0
 5206 006a 84F85830 		strb	r3, [r4, #88]
1290:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5207              		.loc 1 1290 7 view .LVU1596
1301:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 5208              		.loc 1 1301 7 view .LVU1597
1301:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 5209              		.loc 1 1301 12 is_stmt 0 view .LVU1598
 5210 006e 2368     		ldr	r3, [r4]
 5211 0070 214A     		ldr	r2, .L345+4
 5212 0072 9342     		cmp	r3, r2
 5213 0074 1FD0     		beq	.L344
 5214 0076 1A46     		mov	r2, r3
 5215              	.L334:
1301:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 5216              		.loc 1 1301 10 discriminator 4 view .LVU1599
 5217 0078 9342     		cmp	r3, r2
 5218 007a 1FD0     		beq	.L335
 5219 007c 092D     		cmp	r5, #9
 5220 007e 05D8     		bhi	.L336
 5221 0080 40F22121 		movw	r1, #545
 5222 0084 E940     		lsrs	r1, r1, r5
 5223 0086 11F0010F 		tst	r1, #1
 5224 008a 17D1     		bne	.L335
 5225              	.L336:
1319:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* if Master ADC JAUTO bit is set, update Slave State in setting
 5226              		.loc 1 1319 9 is_stmt 1 view .LVU1600
 5227 008c E36D     		ldr	r3, [r4, #92]
 5228 008e 43F48013 		orr	r3, r3, #1048576
 5229 0092 E365     		str	r3, [r4, #92]
1322:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         if (READ_BIT(tmpADC_Master->CFGR, ADC_CFGR_JAUTO) != 0UL)
 5230              		.loc 1 1322 9 view .LVU1601
 5231              	.LVL446:
1323:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
 5232              		.loc 1 1323 9 view .LVU1602
1323:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
 5233              		.loc 1 1323 13 is_stmt 0 view .LVU1603
 5234 0094 D368     		ldr	r3, [r2, #12]
1323:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
 5235              		.loc 1 1323 12 view .LVU1604
 5236 0096 13F0007F 		tst	r3, #33554432
 5237 009a 27D0     		beq	.L327
1325:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         }
 5238              		.loc 1 1325 11 is_stmt 1 view .LVU1605
 5239 009c E36D     		ldr	r3, [r4, #92]
 5240 009e 23F44053 		bic	r3, r3, #12288
 5241 00a2 43F48053 		orr	r3, r3, #4096
 5242 00a6 E365     		str	r3, [r4, #92]
 5243 00a8 20E0     		b	.L327
 5244              	.LVL447:
 5245              	.L343:
1262:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 5246              		.loc 1 1262 12 is_stmt 0 view .LVU1606
 5247 00aa 4FF0A042 		mov	r2, #1342177280
 5248 00ae CAE7     		b	.L329
 5249              	.L332:
ARM GAS  /tmp/ccEuGJBQ.s 			page 340


1280:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
 5250              		.loc 1 1280 9 is_stmt 1 view .LVU1607
 5251 00b0 0022     		movs	r2, #0
 5252 00b2 2266     		str	r2, [r4, #96]
 5253 00b4 D6E7     		b	.L333
 5254              	.L344:
1301:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 5255              		.loc 1 1301 12 is_stmt 0 view .LVU1608
 5256 00b6 4FF0A042 		mov	r2, #1342177280
 5257 00ba DDE7     		b	.L334
 5258              	.L335:
1308:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
 5259              		.loc 1 1308 9 is_stmt 1 view .LVU1609
1308:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
 5260              		.loc 1 1308 13 is_stmt 0 view .LVU1610
 5261 00bc DA68     		ldr	r2, [r3, #12]
1308:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
 5262              		.loc 1 1308 12 view .LVU1611
 5263 00be 12F0007F 		tst	r2, #33554432
 5264 00c2 05D0     		beq	.L337
1310:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         }
 5265              		.loc 1 1310 11 is_stmt 1 view .LVU1612
 5266 00c4 E26D     		ldr	r2, [r4, #92]
 5267 00c6 22F44052 		bic	r2, r2, #12288
 5268 00ca 42F48052 		orr	r2, r2, #4096
 5269 00ce E265     		str	r2, [r4, #92]
 5270              	.L337:
1314:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
 5271              		.loc 1 1314 9 view .LVU1613
 5272              	.LVL448:
 5273              	.LBB742:
 5274              	.LBI742:
6808:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 5275              		.loc 2 6808 22 view .LVU1614
 5276              	.LBB743:
6813:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 5277              		.loc 2 6813 3 view .LVU1615
 5278 00d0 9A68     		ldr	r2, [r3, #8]
 5279 00d2 22F00042 		bic	r2, r2, #-2147483648
 5280 00d6 22F03F02 		bic	r2, r2, #63
 5281 00da 42F00402 		orr	r2, r2, #4
 5282 00de 9A60     		str	r2, [r3, #8]
6816:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 5283              		.loc 2 6816 1 is_stmt 0 view .LVU1616
 5284 00e0 04E0     		b	.L327
 5285              	.LVL449:
 5286              	.L328:
6816:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 5287              		.loc 2 6816 1 view .LVU1617
 5288              	.LBE743:
 5289              	.LBE742:
1342:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
 5290              		.loc 1 1342 7 is_stmt 1 discriminator 1 view .LVU1618
1342:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
 5291              		.loc 1 1342 7 discriminator 1 view .LVU1619
 5292 00e2 0023     		movs	r3, #0
 5293 00e4 84F85830 		strb	r3, [r4, #88]
ARM GAS  /tmp/ccEuGJBQ.s 			page 341


 5294 00e8 00E0     		b	.L327
 5295              	.LVL450:
 5296              	.L338:
1347:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
 5297              		.loc 1 1347 20 is_stmt 0 view .LVU1620
 5298 00ea 0220     		movs	r0, #2
 5299              	.LVL451:
 5300              	.L327:
1352:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5301              		.loc 1 1352 1 view .LVU1621
 5302 00ec 38BD     		pop	{r3, r4, r5, pc}
 5303              	.LVL452:
 5304              	.L339:
1243:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5305              		.loc 1 1243 5 view .LVU1622
 5306 00ee 0220     		movs	r0, #2
 5307              	.LVL453:
1243:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5308              		.loc 1 1243 5 view .LVU1623
 5309 00f0 FCE7     		b	.L327
 5310              	.L346:
 5311 00f2 00BF     		.align	2
 5312              	.L345:
 5313 00f4 00030050 		.word	1342178048
 5314 00f8 00010050 		.word	1342177536
 5315              		.cfi_endproc
 5316              	.LFE333:
 5318              		.section	.text.HAL_ADC_Start_IT,"ax",%progbits
 5319              		.align	1
 5320              		.global	HAL_ADC_Start_IT
 5321              		.syntax unified
 5322              		.thumb
 5323              		.thumb_func
 5325              	HAL_ADC_Start_IT:
 5326              	.LVL454:
 5327              	.LFB337:
1750:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 5328              		.loc 1 1750 1 is_stmt 1 view -0
 5329              		.cfi_startproc
 5330              		@ args = 0, pretend = 0, frame = 0
 5331              		@ frame_needed = 0, uses_anonymous_args = 0
1750:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 5332              		.loc 1 1750 1 is_stmt 0 view .LVU1625
 5333 0000 38B5     		push	{r3, r4, r5, lr}
 5334              	.LCFI19:
 5335              		.cfi_def_cfa_offset 16
 5336              		.cfi_offset 3, -16
 5337              		.cfi_offset 4, -12
 5338              		.cfi_offset 5, -8
 5339              		.cfi_offset 14, -4
1751:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #if defined(ADC_MULTIMODE_SUPPORT)
 5340              		.loc 1 1751 3 is_stmt 1 view .LVU1626
1753:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t tmp_multimode_config = LL_ADC_GetMultimode(__LL_ADC_COMMON_INSTANCE(hadc->Instance));
 5341              		.loc 1 1753 3 view .LVU1627
1754:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #endif
 5342              		.loc 1 1754 3 view .LVU1628
 5343              	.LVL455:
ARM GAS  /tmp/ccEuGJBQ.s 			page 342


 5344              	.LBB744:
 5345              	.LBI744:
6385:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 5346              		.loc 2 6385 26 view .LVU1629
 5347              	.LBB745:
6387:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 5348              		.loc 2 6387 3 view .LVU1630
6387:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 5349              		.loc 2 6387 21 is_stmt 0 view .LVU1631
 5350 0002 614B     		ldr	r3, .L374
 5351 0004 9D68     		ldr	r5, [r3, #8]
 5352              	.LVL456:
6387:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 5353              		.loc 2 6387 21 view .LVU1632
 5354              	.LBE745:
 5355              	.LBE744:
1758:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5356              		.loc 1 1758 3 is_stmt 1 view .LVU1633
1761:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
 5357              		.loc 1 1761 3 view .LVU1634
1761:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
 5358              		.loc 1 1761 7 is_stmt 0 view .LVU1635
 5359 0006 0368     		ldr	r3, [r0]
 5360              	.LVL457:
 5361              	.LBB746:
 5362              	.LBI746:
6844:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 5363              		.loc 2 6844 26 is_stmt 1 view .LVU1636
 5364              	.LBB747:
6846:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 5365              		.loc 2 6846 3 view .LVU1637
6846:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 5366              		.loc 2 6846 12 is_stmt 0 view .LVU1638
 5367 0008 9B68     		ldr	r3, [r3, #8]
 5368              	.LVL458:
6846:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 5369              		.loc 2 6846 74 view .LVU1639
 5370 000a 13F0040F 		tst	r3, #4
 5371 000e 40F0B680 		bne	.L364
 5372 0012 0446     		mov	r4, r0
 5373 0014 05F01F05 		and	r5, r5, #31
 5374              	.LVL459:
6846:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 5375              		.loc 2 6846 74 view .LVU1640
 5376              	.LBE747:
 5377              	.LBE746:
1764:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5378              		.loc 1 1764 5 is_stmt 1 view .LVU1641
1764:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5379              		.loc 1 1764 5 view .LVU1642
 5380 0018 90F85830 		ldrb	r3, [r0, #88]	@ zero_extendqisi2
 5381 001c 012B     		cmp	r3, #1
 5382 001e 00F0B080 		beq	.L365
1764:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5383              		.loc 1 1764 5 discriminator 2 view .LVU1643
 5384 0022 0123     		movs	r3, #1
 5385 0024 80F85830 		strb	r3, [r0, #88]
ARM GAS  /tmp/ccEuGJBQ.s 			page 343


1764:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5386              		.loc 1 1764 5 discriminator 2 view .LVU1644
1767:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5387              		.loc 1 1767 5 discriminator 2 view .LVU1645
1767:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5388              		.loc 1 1767 22 is_stmt 0 discriminator 2 view .LVU1646
 5389 0028 FFF7FEFF 		bl	ADC_Enable
 5390              	.LVL460:
1770:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 5391              		.loc 1 1770 5 is_stmt 1 discriminator 2 view .LVU1647
1770:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 5392              		.loc 1 1770 8 is_stmt 0 discriminator 2 view .LVU1648
 5393 002c 0028     		cmp	r0, #0
 5394 002e 40F0A280 		bne	.L349
1775:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                         HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR | HAL_A
 5395              		.loc 1 1775 7 is_stmt 1 view .LVU1649
 5396 0032 E36D     		ldr	r3, [r4, #92]
 5397 0034 23F47063 		bic	r3, r3, #3840
 5398 0038 23F00103 		bic	r3, r3, #1
 5399 003c 43F48073 		orr	r3, r3, #256
 5400 0040 E365     		str	r3, [r4, #92]
1783:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 5401              		.loc 1 1783 7 view .LVU1650
1783:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 5402              		.loc 1 1783 12 is_stmt 0 view .LVU1651
 5403 0042 2368     		ldr	r3, [r4]
 5404 0044 514A     		ldr	r2, .L374+4
 5405 0046 9342     		cmp	r3, r2
 5406 0048 52D0     		beq	.L369
 5407 004a 1A46     		mov	r2, r3
 5408              	.L350:
1783:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 5409              		.loc 1 1783 10 discriminator 4 view .LVU1652
 5410 004c 9342     		cmp	r3, r2
 5411 004e 00D0     		beq	.L351
1784:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****          )
 5412              		.loc 1 1784 11 view .LVU1653
 5413 0050 1DB9     		cbnz	r5, .L352
 5414              	.L351:
1787:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
 5415              		.loc 1 1787 9 is_stmt 1 view .LVU1654
 5416 0052 E26D     		ldr	r2, [r4, #92]
 5417 0054 22F48012 		bic	r2, r2, #1048576
 5418 0058 E265     		str	r2, [r4, #92]
 5419              	.L352:
1793:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 5420              		.loc 1 1793 7 view .LVU1655
1793:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 5421              		.loc 1 1793 16 is_stmt 0 view .LVU1656
 5422 005a E26D     		ldr	r2, [r4, #92]
1793:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 5423              		.loc 1 1793 10 view .LVU1657
 5424 005c 12F4805F 		tst	r2, #4096
 5425 0060 49D0     		beq	.L353
1796:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
 5426              		.loc 1 1796 9 is_stmt 1 view .LVU1658
 5427 0062 226E     		ldr	r2, [r4, #96]
ARM GAS  /tmp/ccEuGJBQ.s 			page 344


 5428 0064 22F00602 		bic	r2, r2, #6
 5429 0068 2266     		str	r2, [r4, #96]
 5430              	.L354:
1806:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5431              		.loc 1 1806 7 view .LVU1659
 5432 006a 1C22     		movs	r2, #28
 5433 006c 1A60     		str	r2, [r3]
1811:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5434              		.loc 1 1811 7 view .LVU1660
1811:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5435              		.loc 1 1811 7 view .LVU1661
 5436 006e 0023     		movs	r3, #0
 5437 0070 84F85830 		strb	r3, [r4, #88]
1811:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5438              		.loc 1 1811 7 view .LVU1662
1814:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5439              		.loc 1 1814 7 view .LVU1663
 5440 0074 2268     		ldr	r2, [r4]
 5441 0076 5368     		ldr	r3, [r2, #4]
 5442 0078 23F01C03 		bic	r3, r3, #28
 5443 007c 5360     		str	r3, [r2, #4]
1817:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 5444              		.loc 1 1817 7 view .LVU1664
1817:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 5445              		.loc 1 1817 25 is_stmt 0 view .LVU1665
 5446 007e A369     		ldr	r3, [r4, #24]
1817:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 5447              		.loc 1 1817 7 view .LVU1666
 5448 0080 082B     		cmp	r3, #8
 5449 0082 3BD0     		beq	.L370
1824:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           break;
 5450              		.loc 1 1824 11 is_stmt 1 view .LVU1667
 5451 0084 2268     		ldr	r2, [r4]
 5452 0086 5368     		ldr	r3, [r2, #4]
 5453 0088 43F00403 		orr	r3, r3, #4
 5454 008c 5360     		str	r3, [r2, #4]
1825:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
 5455              		.loc 1 1825 11 view .LVU1668
 5456              	.L356:
1832:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 5457              		.loc 1 1832 7 view .LVU1669
1832:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 5458              		.loc 1 1832 21 is_stmt 0 view .LVU1670
 5459 008e E36B     		ldr	r3, [r4, #60]
1832:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 5460              		.loc 1 1832 10 view .LVU1671
 5461 0090 23B9     		cbnz	r3, .L357
1834:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
 5462              		.loc 1 1834 9 is_stmt 1 view .LVU1672
 5463 0092 2268     		ldr	r2, [r4]
 5464 0094 5368     		ldr	r3, [r2, #4]
 5465 0096 43F01003 		orr	r3, r3, #16
 5466 009a 5360     		str	r3, [r2, #4]
 5467              	.L357:
1846:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 5468              		.loc 1 1846 7 view .LVU1673
1846:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
ARM GAS  /tmp/ccEuGJBQ.s 			page 345


 5469              		.loc 1 1846 12 is_stmt 0 view .LVU1674
 5470 009c 2368     		ldr	r3, [r4]
 5471 009e 3B4A     		ldr	r2, .L374+4
 5472 00a0 9342     		cmp	r3, r2
 5473 00a2 31D0     		beq	.L371
 5474 00a4 1A46     		mov	r2, r3
 5475              	.L358:
1846:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 5476              		.loc 1 1846 10 discriminator 4 view .LVU1675
 5477 00a6 9342     		cmp	r3, r2
 5478 00a8 31D0     		beq	.L359
 5479 00aa 092D     		cmp	r5, #9
 5480 00ac 05D8     		bhi	.L360
 5481 00ae 40F22121 		movw	r1, #545
 5482 00b2 E940     		lsrs	r1, r1, r5
 5483 00b4 11F0010F 		tst	r1, #1
 5484 00b8 29D1     		bne	.L359
 5485              	.L360:
1881:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* if Master ADC JAUTO bit is set, Slave injected interruptions
 5486              		.loc 1 1881 9 is_stmt 1 view .LVU1676
 5487 00ba E16D     		ldr	r1, [r4, #92]
 5488 00bc 41F48011 		orr	r1, r1, #1048576
 5489 00c0 E165     		str	r1, [r4, #92]
1884:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         if (READ_BIT(tmpADC_Master->CFGR, ADC_CFGR_JAUTO) != 0UL)
 5490              		.loc 1 1884 9 view .LVU1677
 5491              	.LVL461:
1885:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
 5492              		.loc 1 1885 9 view .LVU1678
1885:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
 5493              		.loc 1 1885 13 is_stmt 0 view .LVU1679
 5494 00c2 D268     		ldr	r2, [r2, #12]
 5495              	.LVL462:
1885:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
 5496              		.loc 1 1885 12 view .LVU1680
 5497 00c4 12F0007F 		tst	r2, #33554432
 5498 00c8 5AD0     		beq	.L348
1889:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           /* Next, set Slave injected interruptions */
 5499              		.loc 1 1889 11 is_stmt 1 view .LVU1681
 5500 00ca E26D     		ldr	r2, [r4, #92]
 5501 00cc 22F44052 		bic	r2, r2, #12288
 5502 00d0 42F48052 		orr	r2, r2, #4096
 5503 00d4 E265     		str	r2, [r4, #92]
1891:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           {
 5504              		.loc 1 1891 11 view .LVU1682
1891:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           {
 5505              		.loc 1 1891 29 is_stmt 0 view .LVU1683
 5506 00d6 A269     		ldr	r2, [r4, #24]
1891:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           {
 5507              		.loc 1 1891 11 view .LVU1684
 5508 00d8 082A     		cmp	r2, #8
 5509 00da 42D0     		beq	.L372
1899:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****               __HAL_ADC_ENABLE_IT(hadc, ADC_IT_JEOC);
 5510              		.loc 1 1899 15 is_stmt 1 view .LVU1685
 5511 00dc 5A68     		ldr	r2, [r3, #4]
 5512 00de 22F04002 		bic	r2, r2, #64
 5513 00e2 5A60     		str	r2, [r3, #4]
1900:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****               break;
ARM GAS  /tmp/ccEuGJBQ.s 			page 346


 5514              		.loc 1 1900 15 view .LVU1686
 5515 00e4 2268     		ldr	r2, [r4]
 5516 00e6 5368     		ldr	r3, [r2, #4]
 5517 00e8 43F02003 		orr	r3, r3, #32
 5518 00ec 5360     		str	r3, [r2, #4]
1901:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           }
 5519              		.loc 1 1901 15 view .LVU1687
 5520 00ee 47E0     		b	.L348
 5521              	.L369:
1783:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 5522              		.loc 1 1783 12 is_stmt 0 view .LVU1688
 5523 00f0 4FF0A042 		mov	r2, #1342177280
 5524 00f4 AAE7     		b	.L350
 5525              	.L353:
1801:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
 5526              		.loc 1 1801 9 is_stmt 1 view .LVU1689
 5527 00f6 0022     		movs	r2, #0
 5528 00f8 2266     		str	r2, [r4, #96]
 5529 00fa B6E7     		b	.L354
 5530              	.L370:
1820:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           break;
 5531              		.loc 1 1820 11 view .LVU1690
 5532 00fc 2268     		ldr	r2, [r4]
 5533 00fe 5368     		ldr	r3, [r2, #4]
 5534 0100 43F00803 		orr	r3, r3, #8
 5535 0104 5360     		str	r3, [r2, #4]
1821:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         /* case ADC_EOC_SINGLE_CONV */
 5536              		.loc 1 1821 11 view .LVU1691
 5537 0106 C2E7     		b	.L356
 5538              	.L371:
1846:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 5539              		.loc 1 1846 12 is_stmt 0 view .LVU1692
 5540 0108 4FF0A042 		mov	r2, #1342177280
 5541 010c CBE7     		b	.L358
 5542              	.L359:
1853:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
 5543              		.loc 1 1853 9 is_stmt 1 view .LVU1693
1853:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
 5544              		.loc 1 1853 13 is_stmt 0 view .LVU1694
 5545 010e DA68     		ldr	r2, [r3, #12]
1853:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
 5546              		.loc 1 1853 12 view .LVU1695
 5547 0110 12F0007F 		tst	r2, #33554432
 5548 0114 11D0     		beq	.L361
1855:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5549              		.loc 1 1855 11 is_stmt 1 view .LVU1696
 5550 0116 E26D     		ldr	r2, [r4, #92]
 5551 0118 22F44052 		bic	r2, r2, #12288
 5552 011c 42F48052 		orr	r2, r2, #4096
 5553 0120 E265     		str	r2, [r4, #92]
1861:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           {
 5554              		.loc 1 1861 11 view .LVU1697
1861:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           {
 5555              		.loc 1 1861 29 is_stmt 0 view .LVU1698
 5556 0122 A269     		ldr	r2, [r4, #24]
1861:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           {
 5557              		.loc 1 1861 11 view .LVU1699
ARM GAS  /tmp/ccEuGJBQ.s 			page 347


 5558 0124 082A     		cmp	r2, #8
 5559 0126 12D0     		beq	.L373
1869:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****               __HAL_ADC_ENABLE_IT(hadc, ADC_IT_JEOC);
 5560              		.loc 1 1869 15 is_stmt 1 view .LVU1700
 5561 0128 5A68     		ldr	r2, [r3, #4]
 5562 012a 22F04002 		bic	r2, r2, #64
 5563 012e 5A60     		str	r2, [r3, #4]
1870:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****               break;
 5564              		.loc 1 1870 15 view .LVU1701
 5565 0130 2268     		ldr	r2, [r4]
 5566 0132 5368     		ldr	r3, [r2, #4]
 5567 0134 43F02003 		orr	r3, r3, #32
 5568 0138 5360     		str	r3, [r2, #4]
1871:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****           }
 5569              		.loc 1 1871 15 view .LVU1702
 5570              	.L361:
1876:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
 5571              		.loc 1 1876 9 view .LVU1703
 5572 013a 2268     		ldr	r2, [r4]
 5573              	.LVL463:
 5574              	.LBB748:
 5575              	.LBI748:
6808:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 5576              		.loc 2 6808 22 view .LVU1704
 5577              	.LBB749:
6813:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 5578              		.loc 2 6813 3 view .LVU1705
 5579 013c 9368     		ldr	r3, [r2, #8]
 5580 013e 23F00043 		bic	r3, r3, #-2147483648
 5581 0142 23F03F03 		bic	r3, r3, #63
 5582 0146 43F00403 		orr	r3, r3, #4
 5583 014a 9360     		str	r3, [r2, #8]
6816:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 5584              		.loc 2 6816 1 is_stmt 0 view .LVU1706
 5585 014c 18E0     		b	.L348
 5586              	.LVL464:
 5587              	.L373:
6816:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 5588              		.loc 2 6816 1 view .LVU1707
 5589              	.LBE749:
 5590              	.LBE748:
1864:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****               __HAL_ADC_ENABLE_IT(hadc, ADC_IT_JEOS);
 5591              		.loc 1 1864 15 is_stmt 1 view .LVU1708
 5592 014e 5A68     		ldr	r2, [r3, #4]
 5593 0150 22F02002 		bic	r2, r2, #32
 5594 0154 5A60     		str	r2, [r3, #4]
1865:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****               break;
 5595              		.loc 1 1865 15 view .LVU1709
 5596 0156 2268     		ldr	r2, [r4]
 5597 0158 5368     		ldr	r3, [r2, #4]
 5598 015a 43F04003 		orr	r3, r3, #64
 5599 015e 5360     		str	r3, [r2, #4]
1866:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             /* case ADC_EOC_SINGLE_CONV */
 5600              		.loc 1 1866 15 view .LVU1710
 5601 0160 EBE7     		b	.L361
 5602              	.L372:
1894:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****               __HAL_ADC_ENABLE_IT(hadc, ADC_IT_JEOS);
ARM GAS  /tmp/ccEuGJBQ.s 			page 348


 5603              		.loc 1 1894 15 view .LVU1711
 5604 0162 5A68     		ldr	r2, [r3, #4]
 5605 0164 22F02002 		bic	r2, r2, #32
 5606 0168 5A60     		str	r2, [r3, #4]
1895:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****               break;
 5607              		.loc 1 1895 15 view .LVU1712
 5608 016a 2268     		ldr	r2, [r4]
 5609 016c 5368     		ldr	r3, [r2, #4]
 5610 016e 43F04003 		orr	r3, r3, #64
 5611 0172 5360     		str	r3, [r2, #4]
1896:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             /* case ADC_EOC_SINGLE_CONV */
 5612              		.loc 1 1896 15 view .LVU1713
 5613 0174 04E0     		b	.L348
 5614              	.L349:
1936:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
 5615              		.loc 1 1936 7 discriminator 1 view .LVU1714
1936:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
 5616              		.loc 1 1936 7 discriminator 1 view .LVU1715
 5617 0176 0023     		movs	r3, #0
 5618 0178 84F85830 		strb	r3, [r4, #88]
 5619 017c 00E0     		b	.L348
 5620              	.LVL465:
 5621              	.L364:
1942:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
 5622              		.loc 1 1942 20 is_stmt 0 view .LVU1716
 5623 017e 0220     		movs	r0, #2
 5624              	.LVL466:
 5625              	.L348:
1947:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5626              		.loc 1 1947 1 view .LVU1717
 5627 0180 38BD     		pop	{r3, r4, r5, pc}
 5628              	.LVL467:
 5629              	.L365:
1764:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5630              		.loc 1 1764 5 view .LVU1718
 5631 0182 0220     		movs	r0, #2
 5632              	.LVL468:
1764:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5633              		.loc 1 1764 5 view .LVU1719
 5634 0184 FCE7     		b	.L348
 5635              	.L375:
 5636 0186 00BF     		.align	2
 5637              	.L374:
 5638 0188 00030050 		.word	1342178048
 5639 018c 00010050 		.word	1342177536
 5640              		.cfi_endproc
 5641              	.LFE337:
 5643              		.section	.text.HAL_ADC_Start_DMA,"ax",%progbits
 5644              		.align	1
 5645              		.global	HAL_ADC_Start_DMA
 5646              		.syntax unified
 5647              		.thumb
 5648              		.thumb_func
 5650              	HAL_ADC_Start_DMA:
 5651              	.LVL469:
 5652              	.LFB339:
2010:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
ARM GAS  /tmp/ccEuGJBQ.s 			page 349


 5653              		.loc 1 2010 1 is_stmt 1 view -0
 5654              		.cfi_startproc
 5655              		@ args = 0, pretend = 0, frame = 0
 5656              		@ frame_needed = 0, uses_anonymous_args = 0
2010:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 5657              		.loc 1 2010 1 is_stmt 0 view .LVU1721
 5658 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 5659              	.LCFI20:
 5660              		.cfi_def_cfa_offset 24
 5661              		.cfi_offset 3, -24
 5662              		.cfi_offset 4, -20
 5663              		.cfi_offset 5, -16
 5664              		.cfi_offset 6, -12
 5665              		.cfi_offset 7, -8
 5666              		.cfi_offset 14, -4
 5667 0002 0446     		mov	r4, r0
2011:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #if defined(ADC_MULTIMODE_SUPPORT)
 5668              		.loc 1 2011 3 is_stmt 1 view .LVU1722
2013:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #endif
 5669              		.loc 1 2013 3 view .LVU1723
 5670              	.LVL470:
 5671              	.LBB750:
 5672              	.LBI750:
6385:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 5673              		.loc 2 6385 26 view .LVU1724
 5674              	.LBB751:
6387:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 5675              		.loc 2 6387 3 view .LVU1725
6387:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 5676              		.loc 2 6387 21 is_stmt 0 view .LVU1726
 5677 0004 3A4B     		ldr	r3, .L391
 5678 0006 9D68     		ldr	r5, [r3, #8]
 5679              	.LVL471:
6387:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 5680              		.loc 2 6387 21 view .LVU1727
 5681              	.LBE751:
 5682              	.LBE750:
2017:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5683              		.loc 1 2017 3 is_stmt 1 view .LVU1728
2020:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
 5684              		.loc 1 2020 3 view .LVU1729
2020:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
 5685              		.loc 1 2020 7 is_stmt 0 view .LVU1730
 5686 0008 0068     		ldr	r0, [r0]
 5687              	.LVL472:
 5688              	.LBB752:
 5689              	.LBI752:
6844:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 5690              		.loc 2 6844 26 is_stmt 1 view .LVU1731
 5691              	.LBB753:
6846:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 5692              		.loc 2 6846 3 view .LVU1732
6846:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 5693              		.loc 2 6846 12 is_stmt 0 view .LVU1733
 5694 000a 8068     		ldr	r0, [r0, #8]
 5695              	.LVL473:
6846:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
ARM GAS  /tmp/ccEuGJBQ.s 			page 350


 5696              		.loc 2 6846 74 view .LVU1734
 5697 000c 10F0040F 		tst	r0, #4
 5698 0010 69D1     		bne	.L386
 5699 0012 0E46     		mov	r6, r1
 5700 0014 1746     		mov	r7, r2
 5701 0016 05F01F05 		and	r5, r5, #31
 5702              	.LVL474:
6846:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 5703              		.loc 2 6846 74 view .LVU1735
 5704              	.LBE753:
 5705              	.LBE752:
2023:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5706              		.loc 1 2023 5 is_stmt 1 view .LVU1736
2023:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5707              		.loc 1 2023 5 view .LVU1737
 5708 001a 94F85830 		ldrb	r3, [r4, #88]	@ zero_extendqisi2
 5709 001e 012B     		cmp	r3, #1
 5710 0020 63D0     		beq	.L387
2023:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5711              		.loc 1 2023 5 discriminator 2 view .LVU1738
 5712 0022 0123     		movs	r3, #1
 5713 0024 84F85830 		strb	r3, [r4, #88]
2023:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5714              		.loc 1 2023 5 discriminator 2 view .LVU1739
2028:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         || (tmp_multimode_config == LL_ADC_MULTI_DUAL_INJ_SIMULT)
 5715              		.loc 1 2028 5 discriminator 2 view .LVU1740
2028:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         || (tmp_multimode_config == LL_ADC_MULTI_DUAL_INJ_SIMULT)
 5716              		.loc 1 2028 8 is_stmt 0 discriminator 2 view .LVU1741
 5717 0028 45B1     		cbz	r5, .L378
2029:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         || (tmp_multimode_config == LL_ADC_MULTI_DUAL_INJ_ALTERN)
 5718              		.loc 1 2029 9 view .LVU1742
 5719 002a 052D     		cmp	r5, #5
 5720 002c 06D0     		beq	.L378
2030:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****        )
 5721              		.loc 1 2030 9 view .LVU1743
 5722 002e 092D     		cmp	r5, #9
 5723 0030 04D0     		beq	.L378
2122:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Process unlocked */
 5724              		.loc 1 2122 7 is_stmt 1 discriminator 1 view .LVU1744
 5725              	.LVL475:
2124:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
 5726              		.loc 1 2124 7 discriminator 1 view .LVU1745
2124:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
 5727              		.loc 1 2124 7 discriminator 1 view .LVU1746
 5728 0032 0023     		movs	r3, #0
 5729 0034 84F85830 		strb	r3, [r4, #88]
2122:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       /* Process unlocked */
 5730              		.loc 1 2122 22 is_stmt 0 discriminator 1 view .LVU1747
 5731 0038 0120     		movs	r0, #1
 5732 003a 55E0     		b	.L377
 5733              	.LVL476:
 5734              	.L378:
2035:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5735              		.loc 1 2035 7 is_stmt 1 view .LVU1748
2035:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5736              		.loc 1 2035 24 is_stmt 0 view .LVU1749
 5737 003c 2046     		mov	r0, r4
ARM GAS  /tmp/ccEuGJBQ.s 			page 351


 5738 003e FFF7FEFF 		bl	ADC_Enable
 5739              	.LVL477:
2038:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 5740              		.loc 1 2038 7 is_stmt 1 view .LVU1750
2038:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 5741              		.loc 1 2038 10 is_stmt 0 view .LVU1751
 5742 0042 0028     		cmp	r0, #0
 5743 0044 4BD1     		bne	.L380
2043:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                           HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR | HAL
 5744              		.loc 1 2043 9 is_stmt 1 view .LVU1752
 5745 0046 E36D     		ldr	r3, [r4, #92]
 5746 0048 23F47063 		bic	r3, r3, #3840
 5747 004c 23F00103 		bic	r3, r3, #1
 5748 0050 43F48073 		orr	r3, r3, #256
 5749 0054 E365     		str	r3, [r4, #92]
2051:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 5750              		.loc 1 2051 9 view .LVU1753
2051:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 5751              		.loc 1 2051 14 is_stmt 0 view .LVU1754
 5752 0056 2368     		ldr	r3, [r4]
 5753 0058 264A     		ldr	r2, .L391+4
 5754 005a 9342     		cmp	r3, r2
 5755 005c 39D0     		beq	.L390
 5756 005e 1A46     		mov	r2, r3
 5757              	.L381:
2051:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 5758              		.loc 1 2051 12 discriminator 4 view .LVU1755
 5759 0060 9342     		cmp	r3, r2
 5760 0062 00D0     		beq	.L382
2052:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****            )
 5761              		.loc 1 2052 13 view .LVU1756
 5762 0064 1DB9     		cbnz	r5, .L383
 5763              	.L382:
2055:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         }
 5764              		.loc 1 2055 11 is_stmt 1 view .LVU1757
 5765 0066 E36D     		ldr	r3, [r4, #92]
 5766 0068 23F48013 		bic	r3, r3, #1048576
 5767 006c E365     		str	r3, [r4, #92]
 5768              	.L383:
2060:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
 5769              		.loc 1 2060 9 view .LVU1758
2060:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
 5770              		.loc 1 2060 18 is_stmt 0 view .LVU1759
 5771 006e E36D     		ldr	r3, [r4, #92]
2060:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
 5772              		.loc 1 2060 12 view .LVU1760
 5773 0070 13F4805F 		tst	r3, #4096
 5774 0074 30D0     		beq	.L384
2063:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         }
 5775              		.loc 1 2063 11 is_stmt 1 view .LVU1761
 5776 0076 236E     		ldr	r3, [r4, #96]
 5777 0078 23F00603 		bic	r3, r3, #6
 5778 007c 2366     		str	r3, [r4, #96]
 5779              	.L385:
2072:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5780              		.loc 1 2072 9 view .LVU1762
2072:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
ARM GAS  /tmp/ccEuGJBQ.s 			page 352


 5781              		.loc 1 2072 13 is_stmt 0 view .LVU1763
 5782 007e 636D     		ldr	r3, [r4, #84]
2072:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5783              		.loc 1 2072 44 view .LVU1764
 5784 0080 1D4A     		ldr	r2, .L391+8
 5785 0082 DA62     		str	r2, [r3, #44]
2075:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5786              		.loc 1 2075 9 is_stmt 1 view .LVU1765
2075:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5787              		.loc 1 2075 13 is_stmt 0 view .LVU1766
 5788 0084 636D     		ldr	r3, [r4, #84]
2075:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5789              		.loc 1 2075 48 view .LVU1767
 5790 0086 1D4A     		ldr	r2, .L391+12
 5791 0088 1A63     		str	r2, [r3, #48]
2078:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5792              		.loc 1 2078 9 is_stmt 1 view .LVU1768
2078:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5793              		.loc 1 2078 13 is_stmt 0 view .LVU1769
 5794 008a 636D     		ldr	r3, [r4, #84]
2078:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5795              		.loc 1 2078 45 view .LVU1770
 5796 008c 1C4A     		ldr	r2, .L391+16
 5797 008e 5A63     		str	r2, [r3, #52]
2087:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5798              		.loc 1 2087 9 is_stmt 1 view .LVU1771
 5799 0090 2368     		ldr	r3, [r4]
 5800 0092 1C22     		movs	r2, #28
 5801 0094 1A60     		str	r2, [r3]
2092:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5802              		.loc 1 2092 9 view .LVU1772
2092:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5803              		.loc 1 2092 9 view .LVU1773
 5804 0096 0023     		movs	r3, #0
 5805 0098 84F85830 		strb	r3, [r4, #88]
2092:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5806              		.loc 1 2092 9 view .LVU1774
2097:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5807              		.loc 1 2097 9 view .LVU1775
 5808 009c 2268     		ldr	r2, [r4]
 5809 009e 5368     		ldr	r3, [r2, #4]
 5810 00a0 43F01003 		orr	r3, r3, #16
 5811 00a4 5360     		str	r3, [r2, #4]
2100:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5812              		.loc 1 2100 9 view .LVU1776
 5813 00a6 2268     		ldr	r2, [r4]
 5814 00a8 D368     		ldr	r3, [r2, #12]
 5815 00aa 43F00103 		orr	r3, r3, #1
 5816 00ae D360     		str	r3, [r2, #12]
2103:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5817              		.loc 1 2103 9 view .LVU1777
2103:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5818              		.loc 1 2103 76 is_stmt 0 view .LVU1778
 5819 00b0 2168     		ldr	r1, [r4]
2103:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5820              		.loc 1 2103 26 view .LVU1779
 5821 00b2 3B46     		mov	r3, r7
ARM GAS  /tmp/ccEuGJBQ.s 			page 353


 5822 00b4 3246     		mov	r2, r6
 5823 00b6 4031     		adds	r1, r1, #64
 5824 00b8 606D     		ldr	r0, [r4, #84]
 5825              	.LVL478:
2103:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5826              		.loc 1 2103 26 view .LVU1780
 5827 00ba FFF7FEFF 		bl	HAL_DMA_Start_IT
 5828              	.LVL479:
2110:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
 5829              		.loc 1 2110 9 is_stmt 1 view .LVU1781
 5830 00be 2268     		ldr	r2, [r4]
 5831              	.LVL480:
 5832              	.LBB754:
 5833              	.LBI754:
6808:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 5834              		.loc 2 6808 22 view .LVU1782
 5835              	.LBB755:
6813:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 5836              		.loc 2 6813 3 view .LVU1783
 5837 00c0 9368     		ldr	r3, [r2, #8]
 5838 00c2 23F00043 		bic	r3, r3, #-2147483648
 5839 00c6 23F03F03 		bic	r3, r3, #63
 5840 00ca 43F00403 		orr	r3, r3, #4
 5841 00ce 9360     		str	r3, [r2, #8]
6816:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 5842              		.loc 2 6816 1 is_stmt 0 view .LVU1784
 5843 00d0 0AE0     		b	.L377
 5844              	.LVL481:
 5845              	.L390:
6816:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 5846              		.loc 2 6816 1 view .LVU1785
 5847              	.LBE755:
 5848              	.LBE754:
2051:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 5849              		.loc 1 2051 14 view .LVU1786
 5850 00d2 4FF0A042 		mov	r2, #1342177280
 5851 00d6 C3E7     		b	.L381
 5852              	.L384:
2068:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         }
 5853              		.loc 1 2068 11 is_stmt 1 view .LVU1787
 5854 00d8 0023     		movs	r3, #0
 5855 00da 2366     		str	r3, [r4, #96]
 5856 00dc CFE7     		b	.L385
 5857              	.L380:
2115:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
 5858              		.loc 1 2115 9 view .LVU1788
2115:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
 5859              		.loc 1 2115 9 view .LVU1789
 5860 00de 0023     		movs	r3, #0
 5861 00e0 84F85830 		strb	r3, [r4, #88]
 5862 00e4 00E0     		b	.L377
 5863              	.LVL482:
 5864              	.L386:
2130:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
 5865              		.loc 1 2130 20 is_stmt 0 view .LVU1790
 5866 00e6 0220     		movs	r0, #2
 5867              	.LVL483:
ARM GAS  /tmp/ccEuGJBQ.s 			page 354


 5868              	.L377:
2135:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5869              		.loc 1 2135 1 view .LVU1791
 5870 00e8 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 5871              	.LVL484:
 5872              	.L387:
2023:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5873              		.loc 1 2023 5 view .LVU1792
 5874 00ea 0220     		movs	r0, #2
 5875 00ec FCE7     		b	.L377
 5876              	.L392:
 5877 00ee 00BF     		.align	2
 5878              	.L391:
 5879 00f0 00030050 		.word	1342178048
 5880 00f4 00010050 		.word	1342177536
 5881 00f8 00000000 		.word	ADC_DMAConvCplt
 5882 00fc 00000000 		.word	ADC_DMAHalfConvCplt
 5883 0100 00000000 		.word	ADC_DMAError
 5884              		.cfi_endproc
 5885              	.LFE339:
 5887              		.section	.text.ADC_Disable,"ax",%progbits
 5888              		.align	1
 5889              		.global	ADC_Disable
 5890              		.syntax unified
 5891              		.thumb
 5892              		.thumb_func
 5894              	ADC_Disable:
 5895              	.LVL485:
 5896              	.LFB355:
3502:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t tickstart;
 5897              		.loc 1 3502 1 is_stmt 1 view -0
 5898              		.cfi_startproc
 5899              		@ args = 0, pretend = 0, frame = 0
 5900              		@ frame_needed = 0, uses_anonymous_args = 0
3502:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   uint32_t tickstart;
 5901              		.loc 1 3502 1 is_stmt 0 view .LVU1794
 5902 0000 38B5     		push	{r3, r4, r5, lr}
 5903              	.LCFI21:
 5904              		.cfi_def_cfa_offset 16
 5905              		.cfi_offset 3, -16
 5906              		.cfi_offset 4, -12
 5907              		.cfi_offset 5, -8
 5908              		.cfi_offset 14, -4
 5909 0002 0446     		mov	r4, r0
3503:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   const uint32_t tmp_adc_is_disable_on_going = LL_ADC_IsDisableOngoing(hadc->Instance);
 5910              		.loc 1 3503 3 is_stmt 1 view .LVU1795
3504:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5911              		.loc 1 3504 3 view .LVU1796
3504:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5912              		.loc 1 3504 48 is_stmt 0 view .LVU1797
 5913 0004 0268     		ldr	r2, [r0]
 5914              	.LVL486:
 5915              	.LBB756:
 5916              	.LBI756:
6733:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 5917              		.loc 2 6733 26 is_stmt 1 view .LVU1798
 5918              	.LBB757:
ARM GAS  /tmp/ccEuGJBQ.s 			page 355


6735:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 5919              		.loc 2 6735 3 view .LVU1799
6735:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 5920              		.loc 2 6735 12 is_stmt 0 view .LVU1800
 5921 0006 9368     		ldr	r3, [r2, #8]
6735:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 5922              		.loc 2 6735 70 view .LVU1801
 5923 0008 13F00203 		ands	r3, r3, #2
 5924 000c 00D0     		beq	.L394
 5925 000e 0123     		movs	r3, #1
 5926              	.L394:
 5927              	.LVL487:
6735:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 5928              		.loc 2 6735 70 view .LVU1802
 5929              	.LBE757:
 5930              	.LBE756:
3509:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       && (tmp_adc_is_disable_on_going == 0UL)
 5931              		.loc 1 3509 3 is_stmt 1 view .LVU1803
 5932              	.LBB758:
 5933              	.LBI758:
6722:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 5934              		.loc 2 6722 26 view .LVU1804
 5935              	.LBB759:
6724:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 5936              		.loc 2 6724 3 view .LVU1805
6724:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 5937              		.loc 2 6724 12 is_stmt 0 view .LVU1806
 5938 0010 9168     		ldr	r1, [r2, #8]
6724:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 5939              		.loc 2 6724 68 view .LVU1807
 5940 0012 11F0010F 		tst	r1, #1
 5941 0016 39D0     		beq	.L399
 5942              	.LVL488:
6724:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 5943              		.loc 2 6724 68 view .LVU1808
 5944              	.LBE759:
 5945              	.LBE758:
3510:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****      )
 5946              		.loc 1 3510 7 view .LVU1809
 5947 0018 002B     		cmp	r3, #0
 5948 001a 39D1     		bne	.L400
3514:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 5949              		.loc 1 3514 5 is_stmt 1 view .LVU1810
3514:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 5950              		.loc 1 3514 24 is_stmt 0 view .LVU1811
 5951 001c 9368     		ldr	r3, [r2, #8]
 5952              	.LVL489:
3514:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 5953              		.loc 1 3514 29 view .LVU1812
 5954 001e 03F00D03 		and	r3, r3, #13
3514:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 5955              		.loc 1 3514 8 view .LVU1813
 5956 0022 012B     		cmp	r3, #1
 5957 0024 09D0     		beq	.L402
3523:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5958              		.loc 1 3523 7 is_stmt 1 view .LVU1814
 5959 0026 E36D     		ldr	r3, [r4, #92]
ARM GAS  /tmp/ccEuGJBQ.s 			page 356


 5960 0028 43F01003 		orr	r3, r3, #16
 5961 002c E365     		str	r3, [r4, #92]
3526:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5962              		.loc 1 3526 7 view .LVU1815
 5963 002e 236E     		ldr	r3, [r4, #96]
 5964 0030 43F00103 		orr	r3, r3, #1
 5965 0034 2366     		str	r3, [r4, #96]
3528:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
 5966              		.loc 1 3528 7 view .LVU1816
3528:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
 5967              		.loc 1 3528 14 is_stmt 0 view .LVU1817
 5968 0036 0120     		movs	r0, #1
 5969              	.LVL490:
3528:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
 5970              		.loc 1 3528 14 view .LVU1818
 5971 0038 29E0     		b	.L395
 5972              	.LVL491:
 5973              	.L402:
3517:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_EOSMP | ADC_FLAG_RDY));
 5974              		.loc 1 3517 7 is_stmt 1 view .LVU1819
 5975              	.LBB760:
 5976              	.LBI760:
6703:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 5977              		.loc 2 6703 22 view .LVU1820
 5978              	.LBB761:
6708:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 5979              		.loc 2 6708 3 view .LVU1821
 5980 003a 9368     		ldr	r3, [r2, #8]
 5981 003c 23F00043 		bic	r3, r3, #-2147483648
 5982 0040 23F03F03 		bic	r3, r3, #63
 5983 0044 43F00203 		orr	r3, r3, #2
 5984 0048 9360     		str	r3, [r2, #8]
 5985              	.LVL492:
6708:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 5986              		.loc 2 6708 3 is_stmt 0 view .LVU1822
 5987              	.LBE761:
 5988              	.LBE760:
3518:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
 5989              		.loc 1 3518 7 is_stmt 1 view .LVU1823
 5990 004a 2368     		ldr	r3, [r4]
 5991 004c 0322     		movs	r2, #3
 5992 004e 1A60     		str	r2, [r3]
3533:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5993              		.loc 1 3533 5 view .LVU1824
3533:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5994              		.loc 1 3533 17 is_stmt 0 view .LVU1825
 5995 0050 FFF7FEFF 		bl	HAL_GetTick
 5996              	.LVL493:
3533:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 5997              		.loc 1 3533 17 view .LVU1826
 5998 0054 0546     		mov	r5, r0
 5999              	.LVL494:
3535:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 6000              		.loc 1 3535 5 is_stmt 1 view .LVU1827
 6001              	.L397:
3535:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 6002              		.loc 1 3535 47 view .LVU1828
ARM GAS  /tmp/ccEuGJBQ.s 			page 357


3535:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 6003              		.loc 1 3535 17 is_stmt 0 view .LVU1829
 6004 0056 2368     		ldr	r3, [r4]
3535:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 6005              		.loc 1 3535 27 view .LVU1830
 6006 0058 9B68     		ldr	r3, [r3, #8]
3535:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 6007              		.loc 1 3535 47 view .LVU1831
 6008 005a 13F0010F 		tst	r3, #1
 6009 005e 13D0     		beq	.L403
3537:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 6010              		.loc 1 3537 7 is_stmt 1 view .LVU1832
3537:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 6011              		.loc 1 3537 12 is_stmt 0 view .LVU1833
 6012 0060 FFF7FEFF 		bl	HAL_GetTick
 6013              	.LVL495:
3537:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 6014              		.loc 1 3537 26 view .LVU1834
 6015 0064 401B     		subs	r0, r0, r5
3537:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 6016              		.loc 1 3537 10 view .LVU1835
 6017 0066 0228     		cmp	r0, #2
 6018 0068 F5D9     		bls	.L397
3540:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
 6019              		.loc 1 3540 9 is_stmt 1 view .LVU1836
3540:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
 6020              		.loc 1 3540 18 is_stmt 0 view .LVU1837
 6021 006a 2368     		ldr	r3, [r4]
3540:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
 6022              		.loc 1 3540 28 view .LVU1838
 6023 006c 9B68     		ldr	r3, [r3, #8]
3540:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         {
 6024              		.loc 1 3540 12 view .LVU1839
 6025 006e 13F0010F 		tst	r3, #1
 6026 0072 F0D0     		beq	.L397
3543:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 6027              		.loc 1 3543 11 is_stmt 1 view .LVU1840
 6028 0074 E36D     		ldr	r3, [r4, #92]
 6029 0076 43F01003 		orr	r3, r3, #16
 6030 007a E365     		str	r3, [r4, #92]
3546:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 6031              		.loc 1 3546 11 view .LVU1841
 6032 007c 236E     		ldr	r3, [r4, #96]
 6033 007e 43F00103 		orr	r3, r3, #1
 6034 0082 2366     		str	r3, [r4, #96]
3548:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         }
 6035              		.loc 1 3548 11 view .LVU1842
3548:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****         }
 6036              		.loc 1 3548 18 is_stmt 0 view .LVU1843
 6037 0084 0120     		movs	r0, #1
 6038 0086 02E0     		b	.L395
 6039              	.L403:
3555:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** }
 6040              		.loc 1 3555 10 view .LVU1844
 6041 0088 0020     		movs	r0, #0
 6042 008a 00E0     		b	.L395
 6043              	.LVL496:
ARM GAS  /tmp/ccEuGJBQ.s 			page 358


 6044              	.L399:
3555:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** }
 6045              		.loc 1 3555 10 view .LVU1845
 6046 008c 0020     		movs	r0, #0
 6047              	.LVL497:
 6048              	.L395:
3556:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 6049              		.loc 1 3556 1 view .LVU1846
 6050 008e 38BD     		pop	{r3, r4, r5, pc}
 6051              	.LVL498:
 6052              	.L400:
3555:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** }
 6053              		.loc 1 3555 10 view .LVU1847
 6054 0090 0020     		movs	r0, #0
 6055              	.LVL499:
3555:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** }
 6056              		.loc 1 3555 10 view .LVU1848
 6057 0092 FCE7     		b	.L395
 6058              		.cfi_endproc
 6059              	.LFE355:
 6061              		.section	.text.HAL_ADC_DeInit,"ax",%progbits
 6062              		.align	1
 6063              		.global	HAL_ADC_DeInit
 6064              		.syntax unified
 6065              		.thumb
 6066              		.thumb_func
 6068              	HAL_ADC_DeInit:
 6069              	.LVL500:
 6070              	.LFB330:
 723:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 6071              		.loc 1 723 1 is_stmt 1 view -0
 6072              		.cfi_startproc
 6073              		@ args = 0, pretend = 0, frame = 0
 6074              		@ frame_needed = 0, uses_anonymous_args = 0
 723:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 6075              		.loc 1 723 1 is_stmt 0 view .LVU1850
 6076 0000 38B5     		push	{r3, r4, r5, lr}
 6077              	.LCFI22:
 6078              		.cfi_def_cfa_offset 16
 6079              		.cfi_offset 3, -16
 6080              		.cfi_offset 4, -12
 6081              		.cfi_offset 5, -8
 6082              		.cfi_offset 14, -4
 724:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 6083              		.loc 1 724 3 is_stmt 1 view .LVU1851
 727:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
 6084              		.loc 1 727 3 view .LVU1852
 727:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
 6085              		.loc 1 727 6 is_stmt 0 view .LVU1853
 6086 0002 0028     		cmp	r0, #0
 6087 0004 00F0C980 		beq	.L410
 6088 0008 0446     		mov	r4, r0
 733:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 6089              		.loc 1 733 3 is_stmt 1 view .LVU1854
 736:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 6090              		.loc 1 736 3 view .LVU1855
 6091 000a C36D     		ldr	r3, [r0, #92]
ARM GAS  /tmp/ccEuGJBQ.s 			page 359


 6092 000c 43F00203 		orr	r3, r3, #2
 6093 0010 C365     		str	r3, [r0, #92]
 739:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 6094              		.loc 1 739 3 view .LVU1856
 739:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 6095              		.loc 1 739 20 is_stmt 0 view .LVU1857
 6096 0012 0321     		movs	r1, #3
 6097 0014 FFF7FEFF 		bl	ADC_ConversionStop
 6098              	.LVL501:
 747:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 6099              		.loc 1 747 3 is_stmt 1 view .LVU1858
 6100 0018 2268     		ldr	r2, [r4]
 6101 001a D368     		ldr	r3, [r2, #12]
 6102 001c 43F40013 		orr	r3, r3, #2097152
 6103 0020 D360     		str	r3, [r2, #12]
 750:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
 6104              		.loc 1 750 3 view .LVU1859
 750:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
 6105              		.loc 1 750 6 is_stmt 0 view .LVU1860
 6106 0022 0546     		mov	r5, r0
 6107 0024 0028     		cmp	r0, #0
 6108 0026 00F09F80 		beq	.L412
 6109              	.L406:
 6110              	.LVL502:
 771:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                               ADC_IT_JQOVF | ADC_IT_OVR  |
 6111              		.loc 1 771 3 is_stmt 1 view .LVU1861
 6112 002a 2268     		ldr	r2, [r4]
 6113 002c 5368     		ldr	r3, [r2, #4]
 6114 002e 23F4FF63 		bic	r3, r3, #2040
 6115 0032 23F00703 		bic	r3, r3, #7
 6116 0036 5360     		str	r3, [r2, #4]
 778:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                               ADC_FLAG_JQOVF | ADC_FLAG_OVR  |
 6117              		.loc 1 778 3 view .LVU1862
 6118 0038 2368     		ldr	r3, [r4]
 6119 003a 40F2FF72 		movw	r2, #2047
 6120 003e 1A60     		str	r2, [r3]
 789:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   SET_BIT(hadc->Instance->CR, ADC_CR_DEEPPWD);
 6121              		.loc 1 789 3 view .LVU1863
 6122 0040 2268     		ldr	r2, [r4]
 6123 0042 9368     		ldr	r3, [r2, #8]
 6124 0044 23F0A043 		bic	r3, r3, #1342177280
 6125 0048 9360     		str	r3, [r2, #8]
 790:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 6126              		.loc 1 790 3 view .LVU1864
 6127 004a 2268     		ldr	r2, [r4]
 6128 004c 9368     		ldr	r3, [r2, #8]
 6129 004e 43F00053 		orr	r3, r3, #536870912
 6130 0052 9360     		str	r3, [r2, #8]
 793:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   SET_BIT(hadc->Instance->CFGR, ADC_CFGR_JQDIS);
 6131              		.loc 1 793 3 view .LVU1865
 6132 0054 2268     		ldr	r2, [r4]
 6133 0056 D368     		ldr	r3, [r2, #12]
 6134 0058 23F0FF43 		bic	r3, r3, #2139095040
 6135 005c 23F4FF03 		bic	r3, r3, #8355840
 6136 0060 23F4FF43 		bic	r3, r3, #32640
 6137 0064 23F07B03 		bic	r3, r3, #123
 6138 0068 D360     		str	r3, [r2, #12]
ARM GAS  /tmp/ccEuGJBQ.s 			page 360


 794:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 6139              		.loc 1 794 3 view .LVU1866
 6140 006a 2268     		ldr	r2, [r4]
 6141 006c D368     		ldr	r3, [r2, #12]
 6142 006e 43F00043 		orr	r3, r3, #-2147483648
 6143 0072 D360     		str	r3, [r2, #12]
 797:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             ADC_CFGR2_OVSR  | ADC_CFGR2_JOVSE | ADC_CFGR2_ROVSE);
 6144              		.loc 1 797 3 view .LVU1867
 6145 0074 2268     		ldr	r2, [r4]
 6146 0076 1369     		ldr	r3, [r2, #16]
 6147 0078 23F4FF63 		bic	r3, r3, #2040
 6148 007c 23F00703 		bic	r3, r3, #7
 6149 0080 1361     		str	r3, [r2, #16]
 801:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 6150              		.loc 1 801 3 view .LVU1868
 6151 0082 2268     		ldr	r2, [r4]
 6152 0084 5369     		ldr	r3, [r2, #20]
 6153 0086 03F08043 		and	r3, r3, #1073741824
 6154 008a 5361     		str	r3, [r2, #20]
 804:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             ADC_SMPR2_SMP15 | ADC_SMPR2_SMP14 | ADC_SMPR2_SMP13 |
 6155              		.loc 1 804 3 view .LVU1869
 6156 008c 2268     		ldr	r2, [r4]
 6157 008e 9369     		ldr	r3, [r2, #24]
 6158 0090 03F07843 		and	r3, r3, #-134217728
 6159 0094 9361     		str	r3, [r2, #24]
 809:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 6160              		.loc 1 809 3 view .LVU1870
 6161 0096 2268     		ldr	r2, [r4]
 6162 0098 136A     		ldr	r3, [r2, #32]
 6163 009a 03F0F023 		and	r3, r3, #-268374016
 6164 009e 1362     		str	r3, [r2, #32]
 812:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 6165              		.loc 1 812 3 view .LVU1871
 6166 00a0 2268     		ldr	r2, [r4]
 6167 00a2 536A     		ldr	r3, [r2, #36]
 6168 00a4 03F0FF23 		and	r3, r3, #-16711936
 6169 00a8 5362     		str	r3, [r2, #36]
 815:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 6170              		.loc 1 815 3 view .LVU1872
 6171 00aa 2268     		ldr	r2, [r4]
 6172 00ac 936A     		ldr	r3, [r2, #40]
 6173 00ae 03F0FF23 		and	r3, r3, #-16711936
 6174 00b2 9362     		str	r3, [r2, #40]
 818:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             ADC_SQR1_SQ1 | ADC_SQR1_L);
 6175              		.loc 1 818 3 view .LVU1873
 6176 00b4 2268     		ldr	r2, [r4]
 6177 00b6 116B     		ldr	r1, [r2, #48]
 6178 00b8 394B     		ldr	r3, .L414
 6179 00ba 0B40     		ands	r3, r3, r1
 6180 00bc 1363     		str	r3, [r2, #48]
 822:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             ADC_SQR2_SQ6 | ADC_SQR2_SQ5);
 6181              		.loc 1 822 3 view .LVU1874
 6182 00be 2268     		ldr	r2, [r4]
 6183 00c0 536B     		ldr	r3, [r2, #52]
 6184 00c2 3849     		ldr	r1, .L414+4
 6185 00c4 0B40     		ands	r3, r3, r1
 6186 00c6 5363     		str	r3, [r2, #52]
ARM GAS  /tmp/ccEuGJBQ.s 			page 361


 826:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****             ADC_SQR3_SQ11 | ADC_SQR3_SQ10);
 6187              		.loc 1 826 3 view .LVU1875
 6188 00c8 2268     		ldr	r2, [r4]
 6189 00ca 936B     		ldr	r3, [r2, #56]
 6190 00cc 0B40     		ands	r3, r3, r1
 6191 00ce 9363     		str	r3, [r2, #56]
 830:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 6192              		.loc 1 830 3 view .LVU1876
 6193 00d0 2268     		ldr	r2, [r4]
 6194 00d2 D36B     		ldr	r3, [r2, #60]
 6195 00d4 23F4FB63 		bic	r3, r3, #2008
 6196 00d8 23F00703 		bic	r3, r3, #7
 6197 00dc D363     		str	r3, [r2, #60]
 838:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Reset register OFR2 */
 6198              		.loc 1 838 3 view .LVU1877
 6199 00de 2168     		ldr	r1, [r4]
 6200 00e0 0A6E     		ldr	r2, [r1, #96]
 6201 00e2 314B     		ldr	r3, .L414+8
 6202 00e4 1A40     		ands	r2, r2, r3
 6203 00e6 0A66     		str	r2, [r1, #96]
 840:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Reset register OFR3 */
 6204              		.loc 1 840 3 view .LVU1878
 6205 00e8 2168     		ldr	r1, [r4]
 6206 00ea 4A6E     		ldr	r2, [r1, #100]
 6207 00ec 1A40     		ands	r2, r2, r3
 6208 00ee 4A66     		str	r2, [r1, #100]
 842:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   /* Reset register OFR4 */
 6209              		.loc 1 842 3 view .LVU1879
 6210 00f0 2168     		ldr	r1, [r4]
 6211 00f2 8A6E     		ldr	r2, [r1, #104]
 6212 00f4 1A40     		ands	r2, r2, r3
 6213 00f6 8A66     		str	r2, [r1, #104]
 844:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 6214              		.loc 1 844 3 view .LVU1880
 6215 00f8 2168     		ldr	r1, [r4]
 6216 00fa CA6E     		ldr	r2, [r1, #108]
 6217 00fc 1340     		ands	r3, r3, r2
 6218 00fe CB66     		str	r3, [r1, #108]
 850:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 6219              		.loc 1 850 3 view .LVU1881
 6220 0100 2268     		ldr	r2, [r4]
 6221 0102 D2F8A030 		ldr	r3, [r2, #160]
 6222 0106 DB0C     		lsrs	r3, r3, #19
 6223 0108 DB04     		lsls	r3, r3, #19
 6224 010a C2F8A030 		str	r3, [r2, #160]
 853:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 6225              		.loc 1 853 3 view .LVU1882
 6226 010e 2268     		ldr	r2, [r4]
 6227 0110 D2F8A430 		ldr	r3, [r2, #164]
 6228 0114 DB0C     		lsrs	r3, r3, #19
 6229 0116 DB04     		lsls	r3, r3, #19
 6230 0118 C2F8A430 		str	r3, [r2, #164]
 856:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 6231              		.loc 1 856 3 view .LVU1883
 6232 011c 2268     		ldr	r2, [r4]
 6233 011e D2F8B030 		ldr	r3, [r2, #176]
 6234 0122 DB0C     		lsrs	r3, r3, #19
ARM GAS  /tmp/ccEuGJBQ.s 			page 362


 6235 0124 DB04     		lsls	r3, r3, #19
 6236 0126 C2F8B030 		str	r3, [r2, #176]
 859:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 6237              		.loc 1 859 3 view .LVU1884
 6238 012a 2268     		ldr	r2, [r4]
 6239 012c D2F8B430 		ldr	r3, [r2, #180]
 6240 0130 23F07F13 		bic	r3, r3, #8323199
 6241 0134 C2F8B430 		str	r3, [r2, #180]
 866:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
 6242              		.loc 1 866 3 view .LVU1885
 6243              	.LVL503:
 6244              	.LBB762:
 6245              	.LBI762:
6722:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 6246              		.loc 2 6722 26 view .LVU1886
 6247              	.LBB763:
6724:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 6248              		.loc 2 6724 3 view .LVU1887
6724:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 6249              		.loc 2 6724 12 is_stmt 0 view .LVU1888
 6250 0138 4FF0A043 		mov	r3, #1342177280
 6251 013c 9A68     		ldr	r2, [r3, #8]
6724:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 6252              		.loc 2 6724 68 view .LVU1889
 6253 013e 12F00102 		ands	r2, r2, #1
 6254 0142 00D0     		beq	.L407
 6255 0144 0122     		movs	r2, #1
 6256              	.L407:
 6257              	.LVL504:
6724:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 6258              		.loc 2 6724 68 view .LVU1890
 6259              	.LBE763:
 6260              	.LBE762:
 6261              	.LBB764:
 6262              	.LBI764:
6722:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 6263              		.loc 2 6722 26 is_stmt 1 view .LVU1891
 6264              	.LBB765:
6724:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 6265              		.loc 2 6724 3 view .LVU1892
6724:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 6266              		.loc 2 6724 12 is_stmt 0 view .LVU1893
 6267 0146 194B     		ldr	r3, .L414+12
 6268 0148 9B68     		ldr	r3, [r3, #8]
6724:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 6269              		.loc 2 6724 68 view .LVU1894
 6270 014a 13F00103 		ands	r3, r3, #1
 6271 014e 00D0     		beq	.L408
 6272 0150 0123     		movs	r3, #1
 6273              	.L408:
 6274              	.LVL505:
6724:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 6275              		.loc 2 6724 68 view .LVU1895
 6276              	.LBE765:
 6277              	.LBE764:
 866:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
 6278              		.loc 1 866 6 view .LVU1896
ARM GAS  /tmp/ccEuGJBQ.s 			page 363


 6279 0152 1343     		orrs	r3, r3, r2
 6280 0154 12D0     		beq	.L413
 6281              	.L409:
 900:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 6282              		.loc 1 900 3 is_stmt 1 view .LVU1897
 6283 0156 0023     		movs	r3, #0
 6284 0158 2366     		str	r3, [r4, #96]
 903:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   hadc->InjectionConfig.ChannelCount = 0;
 6285              		.loc 1 903 3 view .LVU1898
 903:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   hadc->InjectionConfig.ChannelCount = 0;
 6286              		.loc 1 903 38 is_stmt 0 view .LVU1899
 6287 015a 6366     		str	r3, [r4, #100]
 904:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 6288              		.loc 1 904 3 is_stmt 1 view .LVU1900
 904:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 6289              		.loc 1 904 38 is_stmt 0 view .LVU1901
 6290 015c A366     		str	r3, [r4, #104]
 907:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 6291              		.loc 1 907 3 is_stmt 1 view .LVU1902
 907:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 6292              		.loc 1 907 15 is_stmt 0 view .LVU1903
 6293 015e E365     		str	r3, [r4, #92]
 910:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 6294              		.loc 1 910 3 is_stmt 1 view .LVU1904
 910:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 6295              		.loc 1 910 3 view .LVU1905
 6296 0160 84F85830 		strb	r3, [r4, #88]
 910:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 6297              		.loc 1 910 3 view .LVU1906
 913:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** }
 6298              		.loc 1 913 3 view .LVU1907
 6299              	.LVL506:
 6300              	.L405:
 914:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 6301              		.loc 1 914 1 is_stmt 0 view .LVU1908
 6302 0164 2846     		mov	r0, r5
 6303 0166 38BD     		pop	{r3, r4, r5, pc}
 6304              	.LVL507:
 6305              	.L412:
 753:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 6306              		.loc 1 753 5 is_stmt 1 view .LVU1909
 753:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 6307              		.loc 1 753 22 is_stmt 0 view .LVU1910
 6308 0168 2046     		mov	r0, r4
 6309              	.LVL508:
 753:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 6310              		.loc 1 753 22 view .LVU1911
 6311 016a FFF7FEFF 		bl	ADC_Disable
 6312              	.LVL509:
 756:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 6313              		.loc 1 756 5 is_stmt 1 view .LVU1912
 756:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 6314              		.loc 1 756 8 is_stmt 0 view .LVU1913
 6315 016e 0546     		mov	r5, r0
 6316 0170 0028     		cmp	r0, #0
 6317 0172 7FF45AAF 		bne	.L406
 759:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
ARM GAS  /tmp/ccEuGJBQ.s 			page 364


 6318              		.loc 1 759 7 is_stmt 1 view .LVU1914
 759:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
 6319              		.loc 1 759 19 is_stmt 0 view .LVU1915
 6320 0176 0123     		movs	r3, #1
 6321 0178 E365     		str	r3, [r4, #92]
 6322 017a 56E7     		b	.L406
 6323              	.LVL510:
 6324              	.L413:
 875:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 6325              		.loc 1 875 5 is_stmt 1 view .LVU1916
 6326 017c 0C4A     		ldr	r2, .L414+16
 6327 017e 9368     		ldr	r3, [r2, #8]
 6328 0180 23F0FF73 		bic	r3, r3, #33423360
 6329 0184 23F4F733 		bic	r3, r3, #126464
 6330 0188 23F48F73 		bic	r3, r3, #286
 6331 018c 23F00103 		bic	r3, r3, #1
 6332 0190 9360     		str	r3, [r2, #8]
 895:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 6333              		.loc 1 895 5 view .LVU1917
 6334 0192 2046     		mov	r0, r4
 6335 0194 FFF7FEFF 		bl	HAL_ADC_MspDeInit
 6336              	.LVL511:
 6337 0198 DDE7     		b	.L409
 6338              	.LVL512:
 6339              	.L410:
 729:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   }
 6340              		.loc 1 729 12 is_stmt 0 view .LVU1918
 6341 019a 0125     		movs	r5, #1
 6342 019c E2E7     		b	.L405
 6343              	.L415:
 6344 019e 00BF     		.align	2
 6345              	.L414:
 6346 01a0 300882E0 		.word	-528349136
 6347 01a4 200882E0 		.word	-528349152
 6348 01a8 00F0FF03 		.word	67104768
 6349 01ac 00010050 		.word	1342177536
 6350 01b0 00030050 		.word	1342178048
 6351              		.cfi_endproc
 6352              	.LFE330:
 6354              		.section	.text.HAL_ADC_Stop,"ax",%progbits
 6355              		.align	1
 6356              		.global	HAL_ADC_Stop
 6357              		.syntax unified
 6358              		.thumb
 6359              		.thumb_func
 6361              	HAL_ADC_Stop:
 6362              	.LVL513:
 6363              	.LFB334:
1364:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 6364              		.loc 1 1364 1 is_stmt 1 view -0
 6365              		.cfi_startproc
 6366              		@ args = 0, pretend = 0, frame = 0
 6367              		@ frame_needed = 0, uses_anonymous_args = 0
1365:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 6368              		.loc 1 1365 3 view .LVU1920
1368:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 6369              		.loc 1 1368 3 view .LVU1921
ARM GAS  /tmp/ccEuGJBQ.s 			page 365


1371:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 6370              		.loc 1 1371 3 view .LVU1922
1371:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 6371              		.loc 1 1371 3 view .LVU1923
 6372 0000 90F85830 		ldrb	r3, [r0, #88]	@ zero_extendqisi2
 6373 0004 012B     		cmp	r3, #1
 6374 0006 1AD0     		beq	.L419
1364:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 6375              		.loc 1 1364 1 is_stmt 0 discriminator 2 view .LVU1924
 6376 0008 10B5     		push	{r4, lr}
 6377              	.LCFI23:
 6378              		.cfi_def_cfa_offset 8
 6379              		.cfi_offset 4, -8
 6380              		.cfi_offset 14, -4
 6381 000a 0446     		mov	r4, r0
1371:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 6382              		.loc 1 1371 3 is_stmt 1 discriminator 2 view .LVU1925
 6383 000c 0123     		movs	r3, #1
 6384 000e 80F85830 		strb	r3, [r0, #88]
1371:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 6385              		.loc 1 1371 3 discriminator 2 view .LVU1926
1374:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 6386              		.loc 1 1374 3 discriminator 2 view .LVU1927
1374:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 6387              		.loc 1 1374 20 is_stmt 0 discriminator 2 view .LVU1928
 6388 0012 0321     		movs	r1, #3
 6389 0014 FFF7FEFF 		bl	ADC_ConversionStop
 6390              	.LVL514:
1377:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
 6391              		.loc 1 1377 3 is_stmt 1 discriminator 2 view .LVU1929
1377:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
 6392              		.loc 1 1377 6 is_stmt 0 discriminator 2 view .LVU1930
 6393 0018 18B1     		cbz	r0, .L424
 6394              	.L418:
1393:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 6395              		.loc 1 1393 3 is_stmt 1 view .LVU1931
1393:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 6396              		.loc 1 1393 3 view .LVU1932
 6397 001a 0023     		movs	r3, #0
 6398 001c 84F85830 		strb	r3, [r4, #88]
1393:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 6399              		.loc 1 1393 3 view .LVU1933
1396:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** }
 6400              		.loc 1 1396 3 view .LVU1934
1397:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 6401              		.loc 1 1397 1 is_stmt 0 view .LVU1935
 6402 0020 10BD     		pop	{r4, pc}
 6403              	.LVL515:
 6404              	.L424:
1380:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 6405              		.loc 1 1380 5 is_stmt 1 view .LVU1936
1380:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 6406              		.loc 1 1380 22 is_stmt 0 view .LVU1937
 6407 0022 2046     		mov	r0, r4
 6408              	.LVL516:
1380:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 6409              		.loc 1 1380 22 view .LVU1938
ARM GAS  /tmp/ccEuGJBQ.s 			page 366


 6410 0024 FFF7FEFF 		bl	ADC_Disable
 6411              	.LVL517:
1383:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 6412              		.loc 1 1383 5 is_stmt 1 view .LVU1939
1383:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 6413              		.loc 1 1383 8 is_stmt 0 view .LVU1940
 6414 0028 0028     		cmp	r0, #0
 6415 002a F6D1     		bne	.L418
1386:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                         HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
 6416              		.loc 1 1386 7 is_stmt 1 view .LVU1941
 6417 002c E36D     		ldr	r3, [r4, #92]
 6418 002e 23F48853 		bic	r3, r3, #4352
 6419 0032 23F00103 		bic	r3, r3, #1
 6420 0036 43F00103 		orr	r3, r3, #1
 6421 003a E365     		str	r3, [r4, #92]
 6422 003c EDE7     		b	.L418
 6423              	.LVL518:
 6424              	.L419:
 6425              	.LCFI24:
 6426              		.cfi_def_cfa_offset 0
 6427              		.cfi_restore 4
 6428              		.cfi_restore 14
1371:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 6429              		.loc 1 1371 3 is_stmt 0 view .LVU1942
 6430 003e 0220     		movs	r0, #2
 6431              	.LVL519:
1397:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 6432              		.loc 1 1397 1 view .LVU1943
 6433 0040 7047     		bx	lr
 6434              		.cfi_endproc
 6435              	.LFE334:
 6437              		.section	.text.HAL_ADC_Stop_IT,"ax",%progbits
 6438              		.align	1
 6439              		.global	HAL_ADC_Stop_IT
 6440              		.syntax unified
 6441              		.thumb
 6442              		.thumb_func
 6444              	HAL_ADC_Stop_IT:
 6445              	.LVL520:
 6446              	.LFB338:
1957:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 6447              		.loc 1 1957 1 is_stmt 1 view -0
 6448              		.cfi_startproc
 6449              		@ args = 0, pretend = 0, frame = 0
 6450              		@ frame_needed = 0, uses_anonymous_args = 0
1958:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 6451              		.loc 1 1958 3 view .LVU1945
1961:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 6452              		.loc 1 1961 3 view .LVU1946
1964:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 6453              		.loc 1 1964 3 view .LVU1947
1964:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 6454              		.loc 1 1964 3 view .LVU1948
 6455 0000 90F85830 		ldrb	r3, [r0, #88]	@ zero_extendqisi2
 6456 0004 012B     		cmp	r3, #1
 6457 0006 1FD0     		beq	.L428
1957:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
ARM GAS  /tmp/ccEuGJBQ.s 			page 367


 6458              		.loc 1 1957 1 is_stmt 0 discriminator 2 view .LVU1949
 6459 0008 10B5     		push	{r4, lr}
 6460              	.LCFI25:
 6461              		.cfi_def_cfa_offset 8
 6462              		.cfi_offset 4, -8
 6463              		.cfi_offset 14, -4
 6464 000a 0446     		mov	r4, r0
1964:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 6465              		.loc 1 1964 3 is_stmt 1 discriminator 2 view .LVU1950
 6466 000c 0123     		movs	r3, #1
 6467 000e 80F85830 		strb	r3, [r0, #88]
1964:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 6468              		.loc 1 1964 3 discriminator 2 view .LVU1951
1967:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 6469              		.loc 1 1967 3 discriminator 2 view .LVU1952
1967:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 6470              		.loc 1 1967 20 is_stmt 0 discriminator 2 view .LVU1953
 6471 0012 0321     		movs	r1, #3
 6472 0014 FFF7FEFF 		bl	ADC_ConversionStop
 6473              	.LVL521:
1970:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
 6474              		.loc 1 1970 3 is_stmt 1 discriminator 2 view .LVU1954
1970:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
 6475              		.loc 1 1970 6 is_stmt 0 discriminator 2 view .LVU1955
 6476 0018 18B1     		cbz	r0, .L433
 6477              	.L427:
1990:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 6478              		.loc 1 1990 3 is_stmt 1 view .LVU1956
1990:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 6479              		.loc 1 1990 3 view .LVU1957
 6480 001a 0023     		movs	r3, #0
 6481 001c 84F85830 		strb	r3, [r4, #88]
1990:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 6482              		.loc 1 1990 3 view .LVU1958
1993:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** }
 6483              		.loc 1 1993 3 view .LVU1959
1994:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 6484              		.loc 1 1994 1 is_stmt 0 view .LVU1960
 6485 0020 10BD     		pop	{r4, pc}
 6486              	.LVL522:
 6487              	.L433:
1974:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 6488              		.loc 1 1974 5 is_stmt 1 view .LVU1961
 6489 0022 2268     		ldr	r2, [r4]
 6490 0024 5368     		ldr	r3, [r2, #4]
 6491 0026 23F01C03 		bic	r3, r3, #28
 6492 002a 5360     		str	r3, [r2, #4]
1977:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 6493              		.loc 1 1977 5 view .LVU1962
1977:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 6494              		.loc 1 1977 22 is_stmt 0 view .LVU1963
 6495 002c 2046     		mov	r0, r4
 6496              	.LVL523:
1977:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 6497              		.loc 1 1977 22 view .LVU1964
 6498 002e FFF7FEFF 		bl	ADC_Disable
 6499              	.LVL524:
ARM GAS  /tmp/ccEuGJBQ.s 			page 368


1980:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 6500              		.loc 1 1980 5 is_stmt 1 view .LVU1965
1980:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 6501              		.loc 1 1980 8 is_stmt 0 view .LVU1966
 6502 0032 0028     		cmp	r0, #0
 6503 0034 F1D1     		bne	.L427
1983:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                         HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
 6504              		.loc 1 1983 7 is_stmt 1 view .LVU1967
 6505 0036 E36D     		ldr	r3, [r4, #92]
 6506 0038 23F48853 		bic	r3, r3, #4352
 6507 003c 23F00103 		bic	r3, r3, #1
 6508 0040 43F00103 		orr	r3, r3, #1
 6509 0044 E365     		str	r3, [r4, #92]
 6510 0046 E8E7     		b	.L427
 6511              	.LVL525:
 6512              	.L428:
 6513              	.LCFI26:
 6514              		.cfi_def_cfa_offset 0
 6515              		.cfi_restore 4
 6516              		.cfi_restore 14
1964:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 6517              		.loc 1 1964 3 is_stmt 0 view .LVU1968
 6518 0048 0220     		movs	r0, #2
 6519              	.LVL526:
1994:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 6520              		.loc 1 1994 1 view .LVU1969
 6521 004a 7047     		bx	lr
 6522              		.cfi_endproc
 6523              	.LFE338:
 6525              		.section	.text.HAL_ADC_Stop_DMA,"ax",%progbits
 6526              		.align	1
 6527              		.global	HAL_ADC_Stop_DMA
 6528              		.syntax unified
 6529              		.thumb
 6530              		.thumb_func
 6532              	HAL_ADC_Stop_DMA:
 6533              	.LVL527:
 6534              	.LFB340:
2151:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 6535              		.loc 1 2151 1 is_stmt 1 view -0
 6536              		.cfi_startproc
 6537              		@ args = 0, pretend = 0, frame = 0
 6538              		@ frame_needed = 0, uses_anonymous_args = 0
2151:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 6539              		.loc 1 2151 1 is_stmt 0 view .LVU1971
 6540 0000 38B5     		push	{r3, r4, r5, lr}
 6541              	.LCFI27:
 6542              		.cfi_def_cfa_offset 16
 6543              		.cfi_offset 3, -16
 6544              		.cfi_offset 4, -12
 6545              		.cfi_offset 5, -8
 6546              		.cfi_offset 14, -4
2152:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 6547              		.loc 1 2152 3 is_stmt 1 view .LVU1972
2155:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 6548              		.loc 1 2155 3 view .LVU1973
2158:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
ARM GAS  /tmp/ccEuGJBQ.s 			page 369


 6549              		.loc 1 2158 3 view .LVU1974
2158:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 6550              		.loc 1 2158 3 view .LVU1975
 6551 0002 90F85830 		ldrb	r3, [r0, #88]	@ zero_extendqisi2
 6552 0006 012B     		cmp	r3, #1
 6553 0008 39D0     		beq	.L440
 6554 000a 0446     		mov	r4, r0
2158:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 6555              		.loc 1 2158 3 discriminator 2 view .LVU1976
 6556 000c 0123     		movs	r3, #1
 6557 000e 80F85830 		strb	r3, [r0, #88]
2158:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 6558              		.loc 1 2158 3 discriminator 2 view .LVU1977
2161:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 6559              		.loc 1 2161 3 discriminator 2 view .LVU1978
2161:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 6560              		.loc 1 2161 20 is_stmt 0 discriminator 2 view .LVU1979
 6561 0012 0321     		movs	r1, #3
 6562 0014 FFF7FEFF 		bl	ADC_ConversionStop
 6563              	.LVL528:
2164:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
 6564              		.loc 1 2164 3 is_stmt 1 discriminator 2 view .LVU1980
2164:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****   {
 6565              		.loc 1 2164 6 is_stmt 0 discriminator 2 view .LVU1981
 6566 0018 0546     		mov	r5, r0
 6567 001a E8B9     		cbnz	r0, .L436
2167:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 6568              		.loc 1 2167 5 is_stmt 1 view .LVU1982
 6569 001c 2268     		ldr	r2, [r4]
 6570 001e D368     		ldr	r3, [r2, #12]
 6571 0020 23F00103 		bic	r3, r3, #1
 6572 0024 D360     		str	r3, [r2, #12]
2171:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 6573              		.loc 1 2171 5 view .LVU1983
2171:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 6574              		.loc 1 2171 13 is_stmt 0 view .LVU1984
 6575 0026 606D     		ldr	r0, [r4, #84]
 6576              	.LVL529:
2171:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 6577              		.loc 1 2171 25 view .LVU1985
 6578 0028 90F82530 		ldrb	r3, [r0, #37]	@ zero_extendqisi2
 6579 002c DBB2     		uxtb	r3, r3
2171:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 6580              		.loc 1 2171 8 view .LVU1986
 6581 002e 022B     		cmp	r3, #2
 6582 0030 17D0     		beq	.L442
 6583              	.L437:
 6584              	.LVL530:
2184:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 6585              		.loc 1 2184 5 is_stmt 1 view .LVU1987
 6586 0032 2268     		ldr	r2, [r4]
 6587 0034 5368     		ldr	r3, [r2, #4]
 6588 0036 23F01003 		bic	r3, r3, #16
 6589 003a 5360     		str	r3, [r2, #4]
2189:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 6590              		.loc 1 2189 5 view .LVU1988
2189:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
ARM GAS  /tmp/ccEuGJBQ.s 			page 370


 6591              		.loc 1 2189 8 is_stmt 0 view .LVU1989
 6592 003c DDB9     		cbnz	r5, .L438
2191:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
 6593              		.loc 1 2191 7 is_stmt 1 view .LVU1990
2191:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
 6594              		.loc 1 2191 24 is_stmt 0 view .LVU1991
 6595 003e 2046     		mov	r0, r4
 6596 0040 FFF7FEFF 		bl	ADC_Disable
 6597              	.LVL531:
 6598 0044 0546     		mov	r5, r0
 6599              	.LVL532:
 6600              	.L439:
2199:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 6601              		.loc 1 2199 5 is_stmt 1 view .LVU1992
2199:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     {
 6602              		.loc 1 2199 8 is_stmt 0 view .LVU1993
 6603 0046 3DB9     		cbnz	r5, .L436
2202:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****                         HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
 6604              		.loc 1 2202 7 is_stmt 1 view .LVU1994
 6605 0048 E36D     		ldr	r3, [r4, #92]
 6606 004a 23F48853 		bic	r3, r3, #4352
 6607 004e 23F00103 		bic	r3, r3, #1
 6608 0052 43F00103 		orr	r3, r3, #1
 6609 0056 E365     		str	r3, [r4, #92]
 6610              	.LVL533:
 6611              	.L436:
2210:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 6612              		.loc 1 2210 3 view .LVU1995
2210:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 6613              		.loc 1 2210 3 view .LVU1996
 6614 0058 0023     		movs	r3, #0
 6615 005a 84F85830 		strb	r3, [r4, #88]
2210:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 6616              		.loc 1 2210 3 view .LVU1997
2213:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** }
 6617              		.loc 1 2213 3 view .LVU1998
 6618              	.LVL534:
 6619              	.L435:
2214:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 6620              		.loc 1 2214 1 is_stmt 0 view .LVU1999
 6621 005e 2846     		mov	r0, r5
 6622 0060 38BD     		pop	{r3, r4, r5, pc}
 6623              	.LVL535:
 6624              	.L442:
2173:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 6625              		.loc 1 2173 7 is_stmt 1 view .LVU2000
2173:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 6626              		.loc 1 2173 24 is_stmt 0 view .LVU2001
 6627 0062 FFF7FEFF 		bl	HAL_DMA_Abort
 6628              	.LVL536:
2176:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 6629              		.loc 1 2176 7 is_stmt 1 view .LVU2002
2176:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       {
 6630              		.loc 1 2176 10 is_stmt 0 view .LVU2003
 6631 0066 0546     		mov	r5, r0
 6632 0068 0028     		cmp	r0, #0
 6633 006a E2D0     		beq	.L437
ARM GAS  /tmp/ccEuGJBQ.s 			page 371


2179:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****       }
 6634              		.loc 1 2179 9 is_stmt 1 view .LVU2004
 6635 006c E36D     		ldr	r3, [r4, #92]
 6636 006e 43F04003 		orr	r3, r3, #64
 6637 0072 E365     		str	r3, [r4, #92]
 6638 0074 DDE7     		b	.L437
 6639              	.LVL537:
 6640              	.L438:
2195:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
 6641              		.loc 1 2195 7 view .LVU2005
2195:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c ****     }
 6642              		.loc 1 2195 13 is_stmt 0 view .LVU2006
 6643 0076 2046     		mov	r0, r4
 6644 0078 FFF7FEFF 		bl	ADC_Disable
 6645              	.LVL538:
 6646 007c E3E7     		b	.L439
 6647              	.LVL539:
 6648              	.L440:
2158:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_adc.c **** 
 6649              		.loc 1 2158 3 view .LVU2007
 6650 007e 0225     		movs	r5, #2
 6651 0080 EDE7     		b	.L435
 6652              		.cfi_endproc
 6653              	.LFE340:
 6655              		.text
 6656              	.Letext0:
 6657              		.file 4 "/home/alejopm/.config/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-tools/arm-n
 6658              		.file 5 "/home/alejopm/.config/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-tools/arm-n
 6659              		.file 6 "Drivers/CMSIS/Device/ST/STM32G4xx/Include/stm32g431xx.h"
 6660              		.file 7 "Drivers/CMSIS/Device/ST/STM32G4xx/Include/stm32g4xx.h"
 6661              		.file 8 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_def.h"
 6662              		.file 9 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_dma.h"
 6663              		.file 10 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_adc.h"
 6664              		.file 11 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_adc_ex.h"
 6665              		.file 12 "Drivers/CMSIS/Device/ST/STM32G4xx/Include/system_stm32g4xx.h"
 6666              		.file 13 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal.h"
ARM GAS  /tmp/ccEuGJBQ.s 			page 372


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32g4xx_hal_adc.c
     /tmp/ccEuGJBQ.s:20     .text.HAL_ADC_MspInit:0000000000000000 $t
     /tmp/ccEuGJBQ.s:26     .text.HAL_ADC_MspInit:0000000000000000 HAL_ADC_MspInit
     /tmp/ccEuGJBQ.s:42     .text.HAL_ADC_Init:0000000000000000 $t
     /tmp/ccEuGJBQ.s:48     .text.HAL_ADC_Init:0000000000000000 HAL_ADC_Init
     /tmp/ccEuGJBQ.s:616    .text.HAL_ADC_Init:000000000000022c $d
     /tmp/ccEuGJBQ.s:625    .text.HAL_ADC_MspDeInit:0000000000000000 $t
     /tmp/ccEuGJBQ.s:631    .text.HAL_ADC_MspDeInit:0000000000000000 HAL_ADC_MspDeInit
     /tmp/ccEuGJBQ.s:646    .text.HAL_ADC_PollForConversion:0000000000000000 $t
     /tmp/ccEuGJBQ.s:652    .text.HAL_ADC_PollForConversion:0000000000000000 HAL_ADC_PollForConversion
     /tmp/ccEuGJBQ.s:937    .text.HAL_ADC_PollForConversion:0000000000000114 $d
     /tmp/ccEuGJBQ.s:943    .text.HAL_ADC_PollForEvent:0000000000000000 $t
     /tmp/ccEuGJBQ.s:949    .text.HAL_ADC_PollForEvent:0000000000000000 HAL_ADC_PollForEvent
     /tmp/ccEuGJBQ.s:1137   .text.HAL_ADC_GetValue:0000000000000000 $t
     /tmp/ccEuGJBQ.s:1143   .text.HAL_ADC_GetValue:0000000000000000 HAL_ADC_GetValue
     /tmp/ccEuGJBQ.s:1164   .text.HAL_ADC_StartSampling:0000000000000000 $t
     /tmp/ccEuGJBQ.s:1170   .text.HAL_ADC_StartSampling:0000000000000000 HAL_ADC_StartSampling
     /tmp/ccEuGJBQ.s:1194   .text.HAL_ADC_StopSampling:0000000000000000 $t
     /tmp/ccEuGJBQ.s:1200   .text.HAL_ADC_StopSampling:0000000000000000 HAL_ADC_StopSampling
     /tmp/ccEuGJBQ.s:1224   .text.HAL_ADC_ConvCpltCallback:0000000000000000 $t
     /tmp/ccEuGJBQ.s:1230   .text.HAL_ADC_ConvCpltCallback:0000000000000000 HAL_ADC_ConvCpltCallback
     /tmp/ccEuGJBQ.s:1245   .text.HAL_ADC_ConvHalfCpltCallback:0000000000000000 $t
     /tmp/ccEuGJBQ.s:1251   .text.HAL_ADC_ConvHalfCpltCallback:0000000000000000 HAL_ADC_ConvHalfCpltCallback
     /tmp/ccEuGJBQ.s:1266   .text.ADC_DMAHalfConvCplt:0000000000000000 $t
     /tmp/ccEuGJBQ.s:1272   .text.ADC_DMAHalfConvCplt:0000000000000000 ADC_DMAHalfConvCplt
     /tmp/ccEuGJBQ.s:1299   .text.HAL_ADC_LevelOutOfWindowCallback:0000000000000000 $t
     /tmp/ccEuGJBQ.s:1305   .text.HAL_ADC_LevelOutOfWindowCallback:0000000000000000 HAL_ADC_LevelOutOfWindowCallback
     /tmp/ccEuGJBQ.s:1320   .text.HAL_ADC_ErrorCallback:0000000000000000 $t
     /tmp/ccEuGJBQ.s:1326   .text.HAL_ADC_ErrorCallback:0000000000000000 HAL_ADC_ErrorCallback
     /tmp/ccEuGJBQ.s:1341   .text.HAL_ADC_IRQHandler:0000000000000000 $t
     /tmp/ccEuGJBQ.s:1347   .text.HAL_ADC_IRQHandler:0000000000000000 HAL_ADC_IRQHandler
     /tmp/ccEuGJBQ.s:1918   .text.HAL_ADC_IRQHandler:0000000000000274 $d
     /tmp/ccEuGJBQ.s:1923   .text.HAL_ADC_IRQHandler:000000000000027c $t
     /tmp/ccEuGJBQ.s:1944   .text.ADC_DMAConvCplt:0000000000000000 $t
     /tmp/ccEuGJBQ.s:1950   .text.ADC_DMAConvCplt:0000000000000000 ADC_DMAConvCplt
     /tmp/ccEuGJBQ.s:2085   .text.ADC_DMAError:0000000000000000 $t
     /tmp/ccEuGJBQ.s:2091   .text.ADC_DMAError:0000000000000000 ADC_DMAError
     /tmp/ccEuGJBQ.s:2125   .text.HAL_ADC_ConfigChannel:0000000000000000 $t
     /tmp/ccEuGJBQ.s:2131   .text.HAL_ADC_ConfigChannel:0000000000000000 HAL_ADC_ConfigChannel
     /tmp/ccEuGJBQ.s:3313   .text.HAL_ADC_ConfigChannel:0000000000000374 $d
     /tmp/ccEuGJBQ.s:3327   .text.HAL_ADC_ConfigChannel:0000000000000398 $t
     /tmp/ccEuGJBQ.s:3697   .text.HAL_ADC_ConfigChannel:00000000000004cc $d
     /tmp/ccEuGJBQ.s:3705   .text.HAL_ADC_AnalogWDGConfig:0000000000000000 $t
     /tmp/ccEuGJBQ.s:3711   .text.HAL_ADC_AnalogWDGConfig:0000000000000000 HAL_ADC_AnalogWDGConfig
     /tmp/ccEuGJBQ.s:4473   .text.HAL_ADC_AnalogWDGConfig:00000000000002fc $d
     /tmp/ccEuGJBQ.s:4482   .text.HAL_ADC_AnalogWDGConfig:0000000000000304 $t
     /tmp/ccEuGJBQ.s:4531   .text.HAL_ADC_GetState:0000000000000000 $t
     /tmp/ccEuGJBQ.s:4537   .text.HAL_ADC_GetState:0000000000000000 HAL_ADC_GetState
     /tmp/ccEuGJBQ.s:4556   .text.HAL_ADC_GetError:0000000000000000 $t
     /tmp/ccEuGJBQ.s:4562   .text.HAL_ADC_GetError:0000000000000000 HAL_ADC_GetError
     /tmp/ccEuGJBQ.s:4581   .text.ADC_ConversionStop:0000000000000000 $t
     /tmp/ccEuGJBQ.s:4587   .text.ADC_ConversionStop:0000000000000000 ADC_ConversionStop
     /tmp/ccEuGJBQ.s:4908   .text.ADC_ConversionStop:00000000000000fc $d
     /tmp/ccEuGJBQ.s:4913   .text.ADC_Enable:0000000000000000 $t
     /tmp/ccEuGJBQ.s:4919   .text.ADC_Enable:0000000000000000 ADC_Enable
     /tmp/ccEuGJBQ.s:5083   .text.ADC_Enable:0000000000000094 $d
ARM GAS  /tmp/ccEuGJBQ.s 			page 373


     /tmp/ccEuGJBQ.s:5088   .text.HAL_ADC_Start:0000000000000000 $t
     /tmp/ccEuGJBQ.s:5094   .text.HAL_ADC_Start:0000000000000000 HAL_ADC_Start
     /tmp/ccEuGJBQ.s:5313   .text.HAL_ADC_Start:00000000000000f4 $d
     /tmp/ccEuGJBQ.s:5319   .text.HAL_ADC_Start_IT:0000000000000000 $t
     /tmp/ccEuGJBQ.s:5325   .text.HAL_ADC_Start_IT:0000000000000000 HAL_ADC_Start_IT
     /tmp/ccEuGJBQ.s:5638   .text.HAL_ADC_Start_IT:0000000000000188 $d
     /tmp/ccEuGJBQ.s:5644   .text.HAL_ADC_Start_DMA:0000000000000000 $t
     /tmp/ccEuGJBQ.s:5650   .text.HAL_ADC_Start_DMA:0000000000000000 HAL_ADC_Start_DMA
     /tmp/ccEuGJBQ.s:5879   .text.HAL_ADC_Start_DMA:00000000000000f0 $d
     /tmp/ccEuGJBQ.s:5888   .text.ADC_Disable:0000000000000000 $t
     /tmp/ccEuGJBQ.s:5894   .text.ADC_Disable:0000000000000000 ADC_Disable
     /tmp/ccEuGJBQ.s:6062   .text.HAL_ADC_DeInit:0000000000000000 $t
     /tmp/ccEuGJBQ.s:6068   .text.HAL_ADC_DeInit:0000000000000000 HAL_ADC_DeInit
     /tmp/ccEuGJBQ.s:6346   .text.HAL_ADC_DeInit:00000000000001a0 $d
     /tmp/ccEuGJBQ.s:6355   .text.HAL_ADC_Stop:0000000000000000 $t
     /tmp/ccEuGJBQ.s:6361   .text.HAL_ADC_Stop:0000000000000000 HAL_ADC_Stop
     /tmp/ccEuGJBQ.s:6438   .text.HAL_ADC_Stop_IT:0000000000000000 $t
     /tmp/ccEuGJBQ.s:6444   .text.HAL_ADC_Stop_IT:0000000000000000 HAL_ADC_Stop_IT
     /tmp/ccEuGJBQ.s:6526   .text.HAL_ADC_Stop_DMA:0000000000000000 $t
     /tmp/ccEuGJBQ.s:6532   .text.HAL_ADC_Stop_DMA:0000000000000000 HAL_ADC_Stop_DMA

UNDEFINED SYMBOLS
SystemCoreClock
HAL_GetTick
HAL_ADCEx_EndOfSamplingCallback
HAL_ADCEx_InjectedConvCpltCallback
HAL_ADCEx_LevelOutOfWindow2Callback
HAL_ADCEx_LevelOutOfWindow3Callback
HAL_ADCEx_InjectedQueueOverflowCallback
HAL_DMA_Start_IT
HAL_DMA_Abort
